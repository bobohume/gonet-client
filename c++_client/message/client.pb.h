// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#ifndef PROTOBUF_client_2eproto__INCLUDED
#define PROTOBUF_client_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_client_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsC_G_LoginResquestImpl();
void InitDefaultsC_G_LoginResquest();
void InitDefaultsG_C_LoginResponseImpl();
void InitDefaultsG_C_LoginResponse();
void InitDefaultsC_A_LoginRequestImpl();
void InitDefaultsC_A_LoginRequest();
void InitDefaultsA_C_LoginResponseImpl();
void InitDefaultsA_C_LoginResponse();
void InitDefaultsC_A_RegisterRequestImpl();
void InitDefaultsC_A_RegisterRequest();
void InitDefaultsA_C_RegisterResponseImpl();
void InitDefaultsA_C_RegisterResponse();
void InitDefaultsC_W_CreatePlayerRequestImpl();
void InitDefaultsC_W_CreatePlayerRequest();
void InitDefaultsW_C_CreatePlayerResponseImpl();
void InitDefaultsW_C_CreatePlayerResponse();
void InitDefaultsC_W_Game_LoginRequsetImpl();
void InitDefaultsC_W_Game_LoginRequset();
void InitDefaultsW_C_SelectPlayerResponseImpl();
void InitDefaultsW_C_SelectPlayerResponse();
void InitDefaultsC_G_LogoutResponseImpl();
void InitDefaultsC_G_LogoutResponse();
void InitDefaultsC_W_ChatMessageImpl();
void InitDefaultsC_W_ChatMessage();
void InitDefaultsW_C_ChatMessageImpl();
void InitDefaultsW_C_ChatMessage();
void InitDefaultsW_C_TestImpl();
void InitDefaultsW_C_Test();
inline void InitDefaults() {
  InitDefaultsC_G_LoginResquest();
  InitDefaultsG_C_LoginResponse();
  InitDefaultsC_A_LoginRequest();
  InitDefaultsA_C_LoginResponse();
  InitDefaultsC_A_RegisterRequest();
  InitDefaultsA_C_RegisterResponse();
  InitDefaultsC_W_CreatePlayerRequest();
  InitDefaultsW_C_CreatePlayerResponse();
  InitDefaultsC_W_Game_LoginRequset();
  InitDefaultsW_C_SelectPlayerResponse();
  InitDefaultsC_G_LogoutResponse();
  InitDefaultsC_W_ChatMessage();
  InitDefaultsW_C_ChatMessage();
  InitDefaultsW_C_Test();
}
}  // namespace protobuf_client_2eproto
namespace message {
class A_C_LoginResponse;
class A_C_LoginResponseDefaultTypeInternal;
extern A_C_LoginResponseDefaultTypeInternal _A_C_LoginResponse_default_instance_;
class A_C_RegisterResponse;
class A_C_RegisterResponseDefaultTypeInternal;
extern A_C_RegisterResponseDefaultTypeInternal _A_C_RegisterResponse_default_instance_;
class C_A_LoginRequest;
class C_A_LoginRequestDefaultTypeInternal;
extern C_A_LoginRequestDefaultTypeInternal _C_A_LoginRequest_default_instance_;
class C_A_RegisterRequest;
class C_A_RegisterRequestDefaultTypeInternal;
extern C_A_RegisterRequestDefaultTypeInternal _C_A_RegisterRequest_default_instance_;
class C_G_LoginResquest;
class C_G_LoginResquestDefaultTypeInternal;
extern C_G_LoginResquestDefaultTypeInternal _C_G_LoginResquest_default_instance_;
class C_G_LogoutResponse;
class C_G_LogoutResponseDefaultTypeInternal;
extern C_G_LogoutResponseDefaultTypeInternal _C_G_LogoutResponse_default_instance_;
class C_W_ChatMessage;
class C_W_ChatMessageDefaultTypeInternal;
extern C_W_ChatMessageDefaultTypeInternal _C_W_ChatMessage_default_instance_;
class C_W_CreatePlayerRequest;
class C_W_CreatePlayerRequestDefaultTypeInternal;
extern C_W_CreatePlayerRequestDefaultTypeInternal _C_W_CreatePlayerRequest_default_instance_;
class C_W_Game_LoginRequset;
class C_W_Game_LoginRequsetDefaultTypeInternal;
extern C_W_Game_LoginRequsetDefaultTypeInternal _C_W_Game_LoginRequset_default_instance_;
class G_C_LoginResponse;
class G_C_LoginResponseDefaultTypeInternal;
extern G_C_LoginResponseDefaultTypeInternal _G_C_LoginResponse_default_instance_;
class W_C_ChatMessage;
class W_C_ChatMessageDefaultTypeInternal;
extern W_C_ChatMessageDefaultTypeInternal _W_C_ChatMessage_default_instance_;
class W_C_CreatePlayerResponse;
class W_C_CreatePlayerResponseDefaultTypeInternal;
extern W_C_CreatePlayerResponseDefaultTypeInternal _W_C_CreatePlayerResponse_default_instance_;
class W_C_SelectPlayerResponse;
class W_C_SelectPlayerResponseDefaultTypeInternal;
extern W_C_SelectPlayerResponseDefaultTypeInternal _W_C_SelectPlayerResponse_default_instance_;
class W_C_Test;
class W_C_TestDefaultTypeInternal;
extern W_C_TestDefaultTypeInternal _W_C_Test_default_instance_;
}  // namespace message
namespace message {

// ===================================================================

class C_G_LoginResquest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_G_LoginResquest) */ {
 public:
  C_G_LoginResquest();
  virtual ~C_G_LoginResquest();

  C_G_LoginResquest(const C_G_LoginResquest& from);

  inline C_G_LoginResquest& operator=(const C_G_LoginResquest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_G_LoginResquest(C_G_LoginResquest&& from) noexcept
    : C_G_LoginResquest() {
    *this = ::std::move(from);
  }

  inline C_G_LoginResquest& operator=(C_G_LoginResquest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_G_LoginResquest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_G_LoginResquest* internal_default_instance() {
    return reinterpret_cast<const C_G_LoginResquest*>(
               &_C_G_LoginResquest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C_G_LoginResquest* other);
  friend void swap(C_G_LoginResquest& a, C_G_LoginResquest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_G_LoginResquest* New() const PROTOBUF_FINAL { return New(NULL); }

  C_G_LoginResquest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_G_LoginResquest& from);
  void MergeFrom(const C_G_LoginResquest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_G_LoginResquest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.C_G_LoginResquest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 key_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_G_LoginResquestImpl();
};
// -------------------------------------------------------------------

class G_C_LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.G_C_LoginResponse) */ {
 public:
  G_C_LoginResponse();
  virtual ~G_C_LoginResponse();

  G_C_LoginResponse(const G_C_LoginResponse& from);

  inline G_C_LoginResponse& operator=(const G_C_LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  G_C_LoginResponse(G_C_LoginResponse&& from) noexcept
    : G_C_LoginResponse() {
    *this = ::std::move(from);
  }

  inline G_C_LoginResponse& operator=(G_C_LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const G_C_LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const G_C_LoginResponse* internal_default_instance() {
    return reinterpret_cast<const G_C_LoginResponse*>(
               &_G_C_LoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(G_C_LoginResponse* other);
  friend void swap(G_C_LoginResponse& a, G_C_LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline G_C_LoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  G_C_LoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const G_C_LoginResponse& from);
  void MergeFrom(const G_C_LoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(G_C_LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 Key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.G_C_LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 key_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsG_C_LoginResponseImpl();
};
// -------------------------------------------------------------------

class C_A_LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_A_LoginRequest) */ {
 public:
  C_A_LoginRequest();
  virtual ~C_A_LoginRequest();

  C_A_LoginRequest(const C_A_LoginRequest& from);

  inline C_A_LoginRequest& operator=(const C_A_LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_A_LoginRequest(C_A_LoginRequest&& from) noexcept
    : C_A_LoginRequest() {
    *this = ::std::move(from);
  }

  inline C_A_LoginRequest& operator=(C_A_LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_A_LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_A_LoginRequest* internal_default_instance() {
    return reinterpret_cast<const C_A_LoginRequest*>(
               &_C_A_LoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(C_A_LoginRequest* other);
  friend void swap(C_A_LoginRequest& a, C_A_LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_A_LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  C_A_LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_A_LoginRequest& from);
  void MergeFrom(const C_A_LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_A_LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 2;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // string Password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string BuildNo = 5;
  void clear_buildno();
  static const int kBuildNoFieldNumber = 5;
  const ::std::string& buildno() const;
  void set_buildno(const ::std::string& value);
  #if LANG_CXX11
  void set_buildno(::std::string&& value);
  #endif
  void set_buildno(const char* value);
  void set_buildno(const char* value, size_t size);
  ::std::string* mutable_buildno();
  ::std::string* release_buildno();
  void set_allocated_buildno(::std::string* buildno);

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 Key = 6;
  void clear_key();
  static const int kKeyFieldNumber = 6;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.C_A_LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr buildno_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 key_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_A_LoginRequestImpl();
};
// -------------------------------------------------------------------

class A_C_LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.A_C_LoginResponse) */ {
 public:
  A_C_LoginResponse();
  virtual ~A_C_LoginResponse();

  A_C_LoginResponse(const A_C_LoginResponse& from);

  inline A_C_LoginResponse& operator=(const A_C_LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A_C_LoginResponse(A_C_LoginResponse&& from) noexcept
    : A_C_LoginResponse() {
    *this = ::std::move(from);
  }

  inline A_C_LoginResponse& operator=(A_C_LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const A_C_LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A_C_LoginResponse* internal_default_instance() {
    return reinterpret_cast<const A_C_LoginResponse*>(
               &_A_C_LoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(A_C_LoginResponse* other);
  friend void swap(A_C_LoginResponse& a, A_C_LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A_C_LoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  A_C_LoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A_C_LoginResponse& from);
  void MergeFrom(const A_C_LoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A_C_LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 4;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 4;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int32 Error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.A_C_LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsA_C_LoginResponseImpl();
};
// -------------------------------------------------------------------

class C_A_RegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_A_RegisterRequest) */ {
 public:
  C_A_RegisterRequest();
  virtual ~C_A_RegisterRequest();

  C_A_RegisterRequest(const C_A_RegisterRequest& from);

  inline C_A_RegisterRequest& operator=(const C_A_RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_A_RegisterRequest(C_A_RegisterRequest&& from) noexcept
    : C_A_RegisterRequest() {
    *this = ::std::move(from);
  }

  inline C_A_RegisterRequest& operator=(C_A_RegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_A_RegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_A_RegisterRequest* internal_default_instance() {
    return reinterpret_cast<const C_A_RegisterRequest*>(
               &_C_A_RegisterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(C_A_RegisterRequest* other);
  friend void swap(C_A_RegisterRequest& a, C_A_RegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_A_RegisterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  C_A_RegisterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_A_RegisterRequest& from);
  void MergeFrom(const C_A_RegisterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_A_RegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 2;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // string Password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // @@protoc_insertion_point(class_scope:message.C_A_RegisterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::message::Ipacket* packethead_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_A_RegisterRequestImpl();
};
// -------------------------------------------------------------------

class A_C_RegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.A_C_RegisterResponse) */ {
 public:
  A_C_RegisterResponse();
  virtual ~A_C_RegisterResponse();

  A_C_RegisterResponse(const A_C_RegisterResponse& from);

  inline A_C_RegisterResponse& operator=(const A_C_RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A_C_RegisterResponse(A_C_RegisterResponse&& from) noexcept
    : A_C_RegisterResponse() {
    *this = ::std::move(from);
  }

  inline A_C_RegisterResponse& operator=(A_C_RegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const A_C_RegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A_C_RegisterResponse* internal_default_instance() {
    return reinterpret_cast<const A_C_RegisterResponse*>(
               &_A_C_RegisterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(A_C_RegisterResponse* other);
  friend void swap(A_C_RegisterResponse& a, A_C_RegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A_C_RegisterResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  A_C_RegisterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A_C_RegisterResponse& from);
  void MergeFrom(const A_C_RegisterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A_C_RegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int32 Error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.A_C_RegisterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsA_C_RegisterResponseImpl();
};
// -------------------------------------------------------------------

class C_W_CreatePlayerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_CreatePlayerRequest) */ {
 public:
  C_W_CreatePlayerRequest();
  virtual ~C_W_CreatePlayerRequest();

  C_W_CreatePlayerRequest(const C_W_CreatePlayerRequest& from);

  inline C_W_CreatePlayerRequest& operator=(const C_W_CreatePlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_CreatePlayerRequest(C_W_CreatePlayerRequest&& from) noexcept
    : C_W_CreatePlayerRequest() {
    *this = ::std::move(from);
  }

  inline C_W_CreatePlayerRequest& operator=(C_W_CreatePlayerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_CreatePlayerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_CreatePlayerRequest* internal_default_instance() {
    return reinterpret_cast<const C_W_CreatePlayerRequest*>(
               &_C_W_CreatePlayerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(C_W_CreatePlayerRequest* other);
  friend void swap(C_W_CreatePlayerRequest& a, C_W_CreatePlayerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_CreatePlayerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_CreatePlayerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_CreatePlayerRequest& from);
  void MergeFrom(const C_W_CreatePlayerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_CreatePlayerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string PlayerName = 2;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int32 Sex = 3;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_CreatePlayerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 sex_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_W_CreatePlayerRequestImpl();
};
// -------------------------------------------------------------------

class W_C_CreatePlayerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_CreatePlayerResponse) */ {
 public:
  W_C_CreatePlayerResponse();
  virtual ~W_C_CreatePlayerResponse();

  W_C_CreatePlayerResponse(const W_C_CreatePlayerResponse& from);

  inline W_C_CreatePlayerResponse& operator=(const W_C_CreatePlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_CreatePlayerResponse(W_C_CreatePlayerResponse&& from) noexcept
    : W_C_CreatePlayerResponse() {
    *this = ::std::move(from);
  }

  inline W_C_CreatePlayerResponse& operator=(W_C_CreatePlayerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_CreatePlayerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_CreatePlayerResponse* internal_default_instance() {
    return reinterpret_cast<const W_C_CreatePlayerResponse*>(
               &_W_C_CreatePlayerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(W_C_CreatePlayerResponse* other);
  friend void swap(W_C_CreatePlayerResponse& a, W_C_CreatePlayerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_CreatePlayerResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_CreatePlayerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_CreatePlayerResponse& from);
  void MergeFrom(const W_C_CreatePlayerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_CreatePlayerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 PlayerId = 3;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::int64 playerid() const;
  void set_playerid(::google::protobuf::int64 value);

  // int32 Error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.W_C_CreatePlayerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsW_C_CreatePlayerResponseImpl();
};
// -------------------------------------------------------------------

class C_W_Game_LoginRequset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Game_LoginRequset) */ {
 public:
  C_W_Game_LoginRequset();
  virtual ~C_W_Game_LoginRequset();

  C_W_Game_LoginRequset(const C_W_Game_LoginRequset& from);

  inline C_W_Game_LoginRequset& operator=(const C_W_Game_LoginRequset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Game_LoginRequset(C_W_Game_LoginRequset&& from) noexcept
    : C_W_Game_LoginRequset() {
    *this = ::std::move(from);
  }

  inline C_W_Game_LoginRequset& operator=(C_W_Game_LoginRequset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Game_LoginRequset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Game_LoginRequset* internal_default_instance() {
    return reinterpret_cast<const C_W_Game_LoginRequset*>(
               &_C_W_Game_LoginRequset_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(C_W_Game_LoginRequset* other);
  friend void swap(C_W_Game_LoginRequset& a, C_W_Game_LoginRequset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Game_LoginRequset* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Game_LoginRequset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Game_LoginRequset& from);
  void MergeFrom(const C_W_Game_LoginRequset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Game_LoginRequset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 PlayerId = 2;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::int64 playerid() const;
  void set_playerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.C_W_Game_LoginRequset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 playerid_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_W_Game_LoginRequsetImpl();
};
// -------------------------------------------------------------------

class W_C_SelectPlayerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_SelectPlayerResponse) */ {
 public:
  W_C_SelectPlayerResponse();
  virtual ~W_C_SelectPlayerResponse();

  W_C_SelectPlayerResponse(const W_C_SelectPlayerResponse& from);

  inline W_C_SelectPlayerResponse& operator=(const W_C_SelectPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_SelectPlayerResponse(W_C_SelectPlayerResponse&& from) noexcept
    : W_C_SelectPlayerResponse() {
    *this = ::std::move(from);
  }

  inline W_C_SelectPlayerResponse& operator=(W_C_SelectPlayerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_SelectPlayerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_SelectPlayerResponse* internal_default_instance() {
    return reinterpret_cast<const W_C_SelectPlayerResponse*>(
               &_W_C_SelectPlayerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(W_C_SelectPlayerResponse* other);
  friend void swap(W_C_SelectPlayerResponse& a, W_C_SelectPlayerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_SelectPlayerResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_SelectPlayerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_SelectPlayerResponse& from);
  void MergeFrom(const W_C_SelectPlayerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_SelectPlayerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .message.PlayerData PlayerData = 3;
  int playerdata_size() const;
  void clear_playerdata();
  static const int kPlayerDataFieldNumber = 3;
  const ::message::PlayerData& playerdata(int index) const;
  ::message::PlayerData* mutable_playerdata(int index);
  ::message::PlayerData* add_playerdata();
  ::google::protobuf::RepeatedPtrField< ::message::PlayerData >*
      mutable_playerdata();
  const ::google::protobuf::RepeatedPtrField< ::message::PlayerData >&
      playerdata() const;

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 AccountId = 2;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int64 accountid() const;
  void set_accountid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.W_C_SelectPlayerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::message::PlayerData > playerdata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 accountid_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsW_C_SelectPlayerResponseImpl();
};
// -------------------------------------------------------------------

class C_G_LogoutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_G_LogoutResponse) */ {
 public:
  C_G_LogoutResponse();
  virtual ~C_G_LogoutResponse();

  C_G_LogoutResponse(const C_G_LogoutResponse& from);

  inline C_G_LogoutResponse& operator=(const C_G_LogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_G_LogoutResponse(C_G_LogoutResponse&& from) noexcept
    : C_G_LogoutResponse() {
    *this = ::std::move(from);
  }

  inline C_G_LogoutResponse& operator=(C_G_LogoutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_G_LogoutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_G_LogoutResponse* internal_default_instance() {
    return reinterpret_cast<const C_G_LogoutResponse*>(
               &_C_G_LogoutResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(C_G_LogoutResponse* other);
  friend void swap(C_G_LogoutResponse& a, C_G_LogoutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_G_LogoutResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  C_G_LogoutResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_G_LogoutResponse& from);
  void MergeFrom(const C_G_LogoutResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_G_LogoutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // @@protoc_insertion_point(class_scope:message.C_G_LogoutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_G_LogoutResponseImpl();
};
// -------------------------------------------------------------------

class C_W_ChatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_ChatMessage) */ {
 public:
  C_W_ChatMessage();
  virtual ~C_W_ChatMessage();

  C_W_ChatMessage(const C_W_ChatMessage& from);

  inline C_W_ChatMessage& operator=(const C_W_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_ChatMessage(C_W_ChatMessage&& from) noexcept
    : C_W_ChatMessage() {
    *this = ::std::move(from);
  }

  inline C_W_ChatMessage& operator=(C_W_ChatMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_ChatMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const C_W_ChatMessage*>(
               &_C_W_ChatMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(C_W_ChatMessage* other);
  friend void swap(C_W_ChatMessage& a, C_W_ChatMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_ChatMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_ChatMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_ChatMessage& from);
  void MergeFrom(const C_W_ChatMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_ChatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 Sender = 2;
  void clear_sender();
  static const int kSenderFieldNumber = 2;
  ::google::protobuf::int64 sender() const;
  void set_sender(::google::protobuf::int64 value);

  // int64 Recver = 3;
  void clear_recver();
  static const int kRecverFieldNumber = 3;
  ::google::protobuf::int64 recver() const;
  void set_recver(::google::protobuf::int64 value);

  // int32 MessageType = 4;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 4;
  ::google::protobuf::int32 messagetype() const;
  void set_messagetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_ChatMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 sender_;
  ::google::protobuf::int64 recver_;
  ::google::protobuf::int32 messagetype_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_W_ChatMessageImpl();
};
// -------------------------------------------------------------------

class W_C_ChatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_ChatMessage) */ {
 public:
  W_C_ChatMessage();
  virtual ~W_C_ChatMessage();

  W_C_ChatMessage(const W_C_ChatMessage& from);

  inline W_C_ChatMessage& operator=(const W_C_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_ChatMessage(W_C_ChatMessage&& from) noexcept
    : W_C_ChatMessage() {
    *this = ::std::move(from);
  }

  inline W_C_ChatMessage& operator=(W_C_ChatMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_ChatMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const W_C_ChatMessage*>(
               &_W_C_ChatMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(W_C_ChatMessage* other);
  friend void swap(W_C_ChatMessage& a, W_C_ChatMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_ChatMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_ChatMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_ChatMessage& from);
  void MergeFrom(const W_C_ChatMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_ChatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SenderName = 3;
  void clear_sendername();
  static const int kSenderNameFieldNumber = 3;
  const ::std::string& sendername() const;
  void set_sendername(const ::std::string& value);
  #if LANG_CXX11
  void set_sendername(::std::string&& value);
  #endif
  void set_sendername(const char* value);
  void set_sendername(const char* value, size_t size);
  ::std::string* mutable_sendername();
  ::std::string* release_sendername();
  void set_allocated_sendername(::std::string* sendername);

  // string RecverName = 5;
  void clear_recvername();
  static const int kRecverNameFieldNumber = 5;
  const ::std::string& recvername() const;
  void set_recvername(const ::std::string& value);
  #if LANG_CXX11
  void set_recvername(::std::string&& value);
  #endif
  void set_recvername(const char* value);
  void set_recvername(const char* value, size_t size);
  ::std::string* mutable_recvername();
  ::std::string* release_recvername();
  void set_allocated_recvername(::std::string* recvername);

  // string Message = 7;
  void clear_message();
  static const int kMessageFieldNumber = 7;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 Sender = 2;
  void clear_sender();
  static const int kSenderFieldNumber = 2;
  ::google::protobuf::int64 sender() const;
  void set_sender(::google::protobuf::int64 value);

  // int64 Recver = 4;
  void clear_recver();
  static const int kRecverFieldNumber = 4;
  ::google::protobuf::int64 recver() const;
  void set_recver(::google::protobuf::int64 value);

  // int32 MessageType = 6;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 6;
  ::google::protobuf::int32 messagetype() const;
  void set_messagetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.W_C_ChatMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sendername_;
  ::google::protobuf::internal::ArenaStringPtr recvername_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 sender_;
  ::google::protobuf::int64 recver_;
  ::google::protobuf::int32 messagetype_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsW_C_ChatMessageImpl();
};
// -------------------------------------------------------------------

class W_C_Test : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_Test) */ {
 public:
  W_C_Test();
  virtual ~W_C_Test();

  W_C_Test(const W_C_Test& from);

  inline W_C_Test& operator=(const W_C_Test& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_Test(W_C_Test&& from) noexcept
    : W_C_Test() {
    *this = ::std::move(from);
  }

  inline W_C_Test& operator=(W_C_Test&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_Test& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_Test* internal_default_instance() {
    return reinterpret_cast<const W_C_Test*>(
               &_W_C_Test_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(W_C_Test* other);
  friend void swap(W_C_Test& a, W_C_Test& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_Test* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_Test* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_Test& from);
  void MergeFrom(const W_C_Test& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_Test* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Recv = 1;
  int recv_size() const;
  void clear_recv();
  static const int kRecvFieldNumber = 1;
  ::google::protobuf::int32 recv(int index) const;
  void set_recv(int index, ::google::protobuf::int32 value);
  void add_recv(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      recv() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_recv();

  // @@protoc_insertion_point(class_scope:message.W_C_Test)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > recv_;
  mutable int _recv_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsW_C_TestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C_G_LoginResquest

// .message.Ipacket PacketHead = 1;
inline bool C_G_LoginResquest::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_G_LoginResquest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_G_LoginResquest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_G_LoginResquest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_G_LoginResquest.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_G_LoginResquest::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_G_LoginResquest.PacketHead)
  return packethead_;
}
inline void C_G_LoginResquest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_G_LoginResquest.PacketHead)
}

// int64 Key = 2;
inline void C_G_LoginResquest::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 C_G_LoginResquest::key() const {
  // @@protoc_insertion_point(field_get:message.C_G_LoginResquest.Key)
  return key_;
}
inline void C_G_LoginResquest::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:message.C_G_LoginResquest.Key)
}

// -------------------------------------------------------------------

// G_C_LoginResponse

// .message.Ipacket PacketHead = 1;
inline bool G_C_LoginResponse::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& G_C_LoginResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.G_C_LoginResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* G_C_LoginResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.G_C_LoginResponse.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* G_C_LoginResponse::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.G_C_LoginResponse.PacketHead)
  return packethead_;
}
inline void G_C_LoginResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.G_C_LoginResponse.PacketHead)
}

// int64 Key = 2;
inline void G_C_LoginResponse::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 G_C_LoginResponse::key() const {
  // @@protoc_insertion_point(field_get:message.G_C_LoginResponse.Key)
  return key_;
}
inline void G_C_LoginResponse::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:message.G_C_LoginResponse.Key)
}

// -------------------------------------------------------------------

// C_A_LoginRequest

// .message.Ipacket PacketHead = 1;
inline bool C_A_LoginRequest::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_A_LoginRequest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_A_LoginRequest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_A_LoginRequest::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest.PacketHead)
  return packethead_;
}
inline void C_A_LoginRequest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest.PacketHead)
}

// string AccountName = 2;
inline void C_A_LoginRequest::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C_A_LoginRequest::accountname() const {
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.AccountName)
  return accountname_.GetNoArena();
}
inline void C_A_LoginRequest::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_LoginRequest.AccountName)
}
#if LANG_CXX11
inline void C_A_LoginRequest::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_LoginRequest.AccountName)
}
#endif
inline void C_A_LoginRequest::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_LoginRequest.AccountName)
}
inline void C_A_LoginRequest::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_LoginRequest.AccountName)
}
inline ::std::string* C_A_LoginRequest::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_LoginRequest::release_accountname() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_LoginRequest::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest.AccountName)
}

// string Password = 3;
inline void C_A_LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C_A_LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.Password)
  return password_.GetNoArena();
}
inline void C_A_LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_LoginRequest.Password)
}
#if LANG_CXX11
inline void C_A_LoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_LoginRequest.Password)
}
#endif
inline void C_A_LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_LoginRequest.Password)
}
inline void C_A_LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_LoginRequest.Password)
}
inline ::std::string* C_A_LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest.Password)
}

// string BuildNo = 5;
inline void C_A_LoginRequest::clear_buildno() {
  buildno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C_A_LoginRequest::buildno() const {
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.BuildNo)
  return buildno_.GetNoArena();
}
inline void C_A_LoginRequest::set_buildno(const ::std::string& value) {
  
  buildno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_LoginRequest.BuildNo)
}
#if LANG_CXX11
inline void C_A_LoginRequest::set_buildno(::std::string&& value) {
  
  buildno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_LoginRequest.BuildNo)
}
#endif
inline void C_A_LoginRequest::set_buildno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  buildno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_LoginRequest.BuildNo)
}
inline void C_A_LoginRequest::set_buildno(const char* value, size_t size) {
  
  buildno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_LoginRequest.BuildNo)
}
inline ::std::string* C_A_LoginRequest::mutable_buildno() {
  
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest.BuildNo)
  return buildno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_LoginRequest::release_buildno() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest.BuildNo)
  
  return buildno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_LoginRequest::set_allocated_buildno(::std::string* buildno) {
  if (buildno != NULL) {
    
  } else {
    
  }
  buildno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buildno);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest.BuildNo)
}

// int64 Key = 6;
inline void C_A_LoginRequest::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 C_A_LoginRequest::key() const {
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.Key)
  return key_;
}
inline void C_A_LoginRequest::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:message.C_A_LoginRequest.Key)
}

// -------------------------------------------------------------------

// A_C_LoginResponse

// .message.Ipacket PacketHead = 1;
inline bool A_C_LoginResponse::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& A_C_LoginResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.A_C_LoginResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* A_C_LoginResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.A_C_LoginResponse.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* A_C_LoginResponse::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.A_C_LoginResponse.PacketHead)
  return packethead_;
}
inline void A_C_LoginResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.A_C_LoginResponse.PacketHead)
}

// int32 Error = 2;
inline void A_C_LoginResponse::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 A_C_LoginResponse::error() const {
  // @@protoc_insertion_point(field_get:message.A_C_LoginResponse.Error)
  return error_;
}
inline void A_C_LoginResponse::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:message.A_C_LoginResponse.Error)
}

// string AccountName = 4;
inline void A_C_LoginResponse::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& A_C_LoginResponse::accountname() const {
  // @@protoc_insertion_point(field_get:message.A_C_LoginResponse.AccountName)
  return accountname_.GetNoArena();
}
inline void A_C_LoginResponse::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.A_C_LoginResponse.AccountName)
}
#if LANG_CXX11
inline void A_C_LoginResponse::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.A_C_LoginResponse.AccountName)
}
#endif
inline void A_C_LoginResponse::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.A_C_LoginResponse.AccountName)
}
inline void A_C_LoginResponse::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.A_C_LoginResponse.AccountName)
}
inline ::std::string* A_C_LoginResponse::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:message.A_C_LoginResponse.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A_C_LoginResponse::release_accountname() {
  // @@protoc_insertion_point(field_release:message.A_C_LoginResponse.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A_C_LoginResponse::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:message.A_C_LoginResponse.AccountName)
}

// -------------------------------------------------------------------

// C_A_RegisterRequest

// .message.Ipacket PacketHead = 1;
inline bool C_A_RegisterRequest::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_A_RegisterRequest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_A_RegisterRequest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_A_RegisterRequest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_A_RegisterRequest.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_A_RegisterRequest::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_A_RegisterRequest.PacketHead)
  return packethead_;
}
inline void C_A_RegisterRequest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_A_RegisterRequest.PacketHead)
}

// string AccountName = 2;
inline void C_A_RegisterRequest::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C_A_RegisterRequest::accountname() const {
  // @@protoc_insertion_point(field_get:message.C_A_RegisterRequest.AccountName)
  return accountname_.GetNoArena();
}
inline void C_A_RegisterRequest::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_RegisterRequest.AccountName)
}
#if LANG_CXX11
inline void C_A_RegisterRequest::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_RegisterRequest.AccountName)
}
#endif
inline void C_A_RegisterRequest::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_RegisterRequest.AccountName)
}
inline void C_A_RegisterRequest::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_RegisterRequest.AccountName)
}
inline ::std::string* C_A_RegisterRequest::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:message.C_A_RegisterRequest.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_RegisterRequest::release_accountname() {
  // @@protoc_insertion_point(field_release:message.C_A_RegisterRequest.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_RegisterRequest::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_RegisterRequest.AccountName)
}

// string Password = 3;
inline void C_A_RegisterRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C_A_RegisterRequest::password() const {
  // @@protoc_insertion_point(field_get:message.C_A_RegisterRequest.Password)
  return password_.GetNoArena();
}
inline void C_A_RegisterRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_RegisterRequest.Password)
}
#if LANG_CXX11
inline void C_A_RegisterRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_RegisterRequest.Password)
}
#endif
inline void C_A_RegisterRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_RegisterRequest.Password)
}
inline void C_A_RegisterRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_RegisterRequest.Password)
}
inline ::std::string* C_A_RegisterRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:message.C_A_RegisterRequest.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_RegisterRequest::release_password() {
  // @@protoc_insertion_point(field_release:message.C_A_RegisterRequest.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_RegisterRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_RegisterRequest.Password)
}

// -------------------------------------------------------------------

// A_C_RegisterResponse

// .message.Ipacket PacketHead = 1;
inline bool A_C_RegisterResponse::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& A_C_RegisterResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.A_C_RegisterResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* A_C_RegisterResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.A_C_RegisterResponse.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* A_C_RegisterResponse::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.A_C_RegisterResponse.PacketHead)
  return packethead_;
}
inline void A_C_RegisterResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.A_C_RegisterResponse.PacketHead)
}

// int32 Error = 2;
inline void A_C_RegisterResponse::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 A_C_RegisterResponse::error() const {
  // @@protoc_insertion_point(field_get:message.A_C_RegisterResponse.Error)
  return error_;
}
inline void A_C_RegisterResponse::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:message.A_C_RegisterResponse.Error)
}

// -------------------------------------------------------------------

// C_W_CreatePlayerRequest

// .message.Ipacket PacketHead = 1;
inline bool C_W_CreatePlayerRequest::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_W_CreatePlayerRequest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_CreatePlayerRequest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_CreatePlayerRequest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_CreatePlayerRequest.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_CreatePlayerRequest::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_CreatePlayerRequest.PacketHead)
  return packethead_;
}
inline void C_W_CreatePlayerRequest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_CreatePlayerRequest.PacketHead)
}

// string PlayerName = 2;
inline void C_W_CreatePlayerRequest::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C_W_CreatePlayerRequest::playername() const {
  // @@protoc_insertion_point(field_get:message.C_W_CreatePlayerRequest.PlayerName)
  return playername_.GetNoArena();
}
inline void C_W_CreatePlayerRequest::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_W_CreatePlayerRequest.PlayerName)
}
#if LANG_CXX11
inline void C_W_CreatePlayerRequest::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_W_CreatePlayerRequest.PlayerName)
}
#endif
inline void C_W_CreatePlayerRequest::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_W_CreatePlayerRequest.PlayerName)
}
inline void C_W_CreatePlayerRequest::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_W_CreatePlayerRequest.PlayerName)
}
inline ::std::string* C_W_CreatePlayerRequest::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:message.C_W_CreatePlayerRequest.PlayerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_W_CreatePlayerRequest::release_playername() {
  // @@protoc_insertion_point(field_release:message.C_W_CreatePlayerRequest.PlayerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_W_CreatePlayerRequest::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:message.C_W_CreatePlayerRequest.PlayerName)
}

// int32 Sex = 3;
inline void C_W_CreatePlayerRequest::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 C_W_CreatePlayerRequest::sex() const {
  // @@protoc_insertion_point(field_get:message.C_W_CreatePlayerRequest.Sex)
  return sex_;
}
inline void C_W_CreatePlayerRequest::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_CreatePlayerRequest.Sex)
}

// -------------------------------------------------------------------

// W_C_CreatePlayerResponse

// .message.Ipacket PacketHead = 1;
inline bool W_C_CreatePlayerResponse::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& W_C_CreatePlayerResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_CreatePlayerResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_CreatePlayerResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_CreatePlayerResponse.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_CreatePlayerResponse::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_CreatePlayerResponse.PacketHead)
  return packethead_;
}
inline void W_C_CreatePlayerResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_CreatePlayerResponse.PacketHead)
}

// int32 Error = 2;
inline void W_C_CreatePlayerResponse::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 W_C_CreatePlayerResponse::error() const {
  // @@protoc_insertion_point(field_get:message.W_C_CreatePlayerResponse.Error)
  return error_;
}
inline void W_C_CreatePlayerResponse::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_CreatePlayerResponse.Error)
}

// int64 PlayerId = 3;
inline void W_C_CreatePlayerResponse::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 W_C_CreatePlayerResponse::playerid() const {
  // @@protoc_insertion_point(field_get:message.W_C_CreatePlayerResponse.PlayerId)
  return playerid_;
}
inline void W_C_CreatePlayerResponse::set_playerid(::google::protobuf::int64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_CreatePlayerResponse.PlayerId)
}

// -------------------------------------------------------------------

// C_W_Game_LoginRequset

// .message.Ipacket PacketHead = 1;
inline bool C_W_Game_LoginRequset::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_W_Game_LoginRequset::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_Game_LoginRequset.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_Game_LoginRequset::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_Game_LoginRequset.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_Game_LoginRequset::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Game_LoginRequset.PacketHead)
  return packethead_;
}
inline void C_W_Game_LoginRequset::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Game_LoginRequset.PacketHead)
}

// int64 PlayerId = 2;
inline void C_W_Game_LoginRequset::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 C_W_Game_LoginRequset::playerid() const {
  // @@protoc_insertion_point(field_get:message.C_W_Game_LoginRequset.PlayerId)
  return playerid_;
}
inline void C_W_Game_LoginRequset::set_playerid(::google::protobuf::int64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Game_LoginRequset.PlayerId)
}

// -------------------------------------------------------------------

// W_C_SelectPlayerResponse

// .message.Ipacket PacketHead = 1;
inline bool W_C_SelectPlayerResponse::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& W_C_SelectPlayerResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_SelectPlayerResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_SelectPlayerResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_SelectPlayerResponse.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_SelectPlayerResponse::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_SelectPlayerResponse.PacketHead)
  return packethead_;
}
inline void W_C_SelectPlayerResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_SelectPlayerResponse.PacketHead)
}

// int64 AccountId = 2;
inline void W_C_SelectPlayerResponse::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 W_C_SelectPlayerResponse::accountid() const {
  // @@protoc_insertion_point(field_get:message.W_C_SelectPlayerResponse.AccountId)
  return accountid_;
}
inline void W_C_SelectPlayerResponse::set_accountid(::google::protobuf::int64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_SelectPlayerResponse.AccountId)
}

// repeated .message.PlayerData PlayerData = 3;
inline int W_C_SelectPlayerResponse::playerdata_size() const {
  return playerdata_.size();
}
inline const ::message::PlayerData& W_C_SelectPlayerResponse::playerdata(int index) const {
  // @@protoc_insertion_point(field_get:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_.Get(index);
}
inline ::message::PlayerData* W_C_SelectPlayerResponse::mutable_playerdata(int index) {
  // @@protoc_insertion_point(field_mutable:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_.Mutable(index);
}
inline ::message::PlayerData* W_C_SelectPlayerResponse::add_playerdata() {
  // @@protoc_insertion_point(field_add:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::message::PlayerData >*
W_C_SelectPlayerResponse::mutable_playerdata() {
  // @@protoc_insertion_point(field_mutable_list:message.W_C_SelectPlayerResponse.PlayerData)
  return &playerdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::message::PlayerData >&
W_C_SelectPlayerResponse::playerdata() const {
  // @@protoc_insertion_point(field_list:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_;
}

// -------------------------------------------------------------------

// C_G_LogoutResponse

// .message.Ipacket PacketHead = 1;
inline bool C_G_LogoutResponse::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_G_LogoutResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_G_LogoutResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_G_LogoutResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_G_LogoutResponse.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_G_LogoutResponse::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_G_LogoutResponse.PacketHead)
  return packethead_;
}
inline void C_G_LogoutResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_G_LogoutResponse.PacketHead)
}

// -------------------------------------------------------------------

// C_W_ChatMessage

// .message.Ipacket PacketHead = 1;
inline bool C_W_ChatMessage::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_W_ChatMessage::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_ChatMessage::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_ChatMessage.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_ChatMessage::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_ChatMessage.PacketHead)
  return packethead_;
}
inline void C_W_ChatMessage::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_ChatMessage.PacketHead)
}

// int64 Sender = 2;
inline void C_W_ChatMessage::clear_sender() {
  sender_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 C_W_ChatMessage::sender() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.Sender)
  return sender_;
}
inline void C_W_ChatMessage::set_sender(::google::protobuf::int64 value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.Sender)
}

// int64 Recver = 3;
inline void C_W_ChatMessage::clear_recver() {
  recver_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 C_W_ChatMessage::recver() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.Recver)
  return recver_;
}
inline void C_W_ChatMessage::set_recver(::google::protobuf::int64 value) {
  
  recver_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.Recver)
}

// int32 MessageType = 4;
inline void C_W_ChatMessage::clear_messagetype() {
  messagetype_ = 0;
}
inline ::google::protobuf::int32 C_W_ChatMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.MessageType)
  return messagetype_;
}
inline void C_W_ChatMessage::set_messagetype(::google::protobuf::int32 value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.MessageType)
}

// string Message = 5;
inline void C_W_ChatMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C_W_ChatMessage::message() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.Message)
  return message_.GetNoArena();
}
inline void C_W_ChatMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.Message)
}
#if LANG_CXX11
inline void C_W_ChatMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_W_ChatMessage.Message)
}
#endif
inline void C_W_ChatMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_W_ChatMessage.Message)
}
inline void C_W_ChatMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_W_ChatMessage.Message)
}
inline ::std::string* C_W_ChatMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:message.C_W_ChatMessage.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_W_ChatMessage::release_message() {
  // @@protoc_insertion_point(field_release:message.C_W_ChatMessage.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_W_ChatMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:message.C_W_ChatMessage.Message)
}

// -------------------------------------------------------------------

// W_C_ChatMessage

// .message.Ipacket PacketHead = 1;
inline bool W_C_ChatMessage::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& W_C_ChatMessage::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_ChatMessage.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_ChatMessage::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_ChatMessage.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_ChatMessage::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_ChatMessage.PacketHead)
  return packethead_;
}
inline void W_C_ChatMessage::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_ChatMessage.PacketHead)
}

// int64 Sender = 2;
inline void W_C_ChatMessage::clear_sender() {
  sender_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 W_C_ChatMessage::sender() const {
  // @@protoc_insertion_point(field_get:message.W_C_ChatMessage.Sender)
  return sender_;
}
inline void W_C_ChatMessage::set_sender(::google::protobuf::int64 value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_ChatMessage.Sender)
}

// string SenderName = 3;
inline void W_C_ChatMessage::clear_sendername() {
  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& W_C_ChatMessage::sendername() const {
  // @@protoc_insertion_point(field_get:message.W_C_ChatMessage.SenderName)
  return sendername_.GetNoArena();
}
inline void W_C_ChatMessage::set_sendername(const ::std::string& value) {
  
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.W_C_ChatMessage.SenderName)
}
#if LANG_CXX11
inline void W_C_ChatMessage::set_sendername(::std::string&& value) {
  
  sendername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.W_C_ChatMessage.SenderName)
}
#endif
inline void W_C_ChatMessage::set_sendername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.W_C_ChatMessage.SenderName)
}
inline void W_C_ChatMessage::set_sendername(const char* value, size_t size) {
  
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.W_C_ChatMessage.SenderName)
}
inline ::std::string* W_C_ChatMessage::mutable_sendername() {
  
  // @@protoc_insertion_point(field_mutable:message.W_C_ChatMessage.SenderName)
  return sendername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* W_C_ChatMessage::release_sendername() {
  // @@protoc_insertion_point(field_release:message.W_C_ChatMessage.SenderName)
  
  return sendername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void W_C_ChatMessage::set_allocated_sendername(::std::string* sendername) {
  if (sendername != NULL) {
    
  } else {
    
  }
  sendername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendername);
  // @@protoc_insertion_point(field_set_allocated:message.W_C_ChatMessage.SenderName)
}

// int64 Recver = 4;
inline void W_C_ChatMessage::clear_recver() {
  recver_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 W_C_ChatMessage::recver() const {
  // @@protoc_insertion_point(field_get:message.W_C_ChatMessage.Recver)
  return recver_;
}
inline void W_C_ChatMessage::set_recver(::google::protobuf::int64 value) {
  
  recver_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_ChatMessage.Recver)
}

// string RecverName = 5;
inline void W_C_ChatMessage::clear_recvername() {
  recvername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& W_C_ChatMessage::recvername() const {
  // @@protoc_insertion_point(field_get:message.W_C_ChatMessage.RecverName)
  return recvername_.GetNoArena();
}
inline void W_C_ChatMessage::set_recvername(const ::std::string& value) {
  
  recvername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.W_C_ChatMessage.RecverName)
}
#if LANG_CXX11
inline void W_C_ChatMessage::set_recvername(::std::string&& value) {
  
  recvername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.W_C_ChatMessage.RecverName)
}
#endif
inline void W_C_ChatMessage::set_recvername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  recvername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.W_C_ChatMessage.RecverName)
}
inline void W_C_ChatMessage::set_recvername(const char* value, size_t size) {
  
  recvername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.W_C_ChatMessage.RecverName)
}
inline ::std::string* W_C_ChatMessage::mutable_recvername() {
  
  // @@protoc_insertion_point(field_mutable:message.W_C_ChatMessage.RecverName)
  return recvername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* W_C_ChatMessage::release_recvername() {
  // @@protoc_insertion_point(field_release:message.W_C_ChatMessage.RecverName)
  
  return recvername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void W_C_ChatMessage::set_allocated_recvername(::std::string* recvername) {
  if (recvername != NULL) {
    
  } else {
    
  }
  recvername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recvername);
  // @@protoc_insertion_point(field_set_allocated:message.W_C_ChatMessage.RecverName)
}

// int32 MessageType = 6;
inline void W_C_ChatMessage::clear_messagetype() {
  messagetype_ = 0;
}
inline ::google::protobuf::int32 W_C_ChatMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:message.W_C_ChatMessage.MessageType)
  return messagetype_;
}
inline void W_C_ChatMessage::set_messagetype(::google::protobuf::int32 value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_ChatMessage.MessageType)
}

// string Message = 7;
inline void W_C_ChatMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& W_C_ChatMessage::message() const {
  // @@protoc_insertion_point(field_get:message.W_C_ChatMessage.Message)
  return message_.GetNoArena();
}
inline void W_C_ChatMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.W_C_ChatMessage.Message)
}
#if LANG_CXX11
inline void W_C_ChatMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.W_C_ChatMessage.Message)
}
#endif
inline void W_C_ChatMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.W_C_ChatMessage.Message)
}
inline void W_C_ChatMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.W_C_ChatMessage.Message)
}
inline ::std::string* W_C_ChatMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:message.W_C_ChatMessage.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* W_C_ChatMessage::release_message() {
  // @@protoc_insertion_point(field_release:message.W_C_ChatMessage.Message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void W_C_ChatMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:message.W_C_ChatMessage.Message)
}

// -------------------------------------------------------------------

// W_C_Test

// repeated int32 Recv = 1;
inline int W_C_Test::recv_size() const {
  return recv_.size();
}
inline void W_C_Test::clear_recv() {
  recv_.Clear();
}
inline ::google::protobuf::int32 W_C_Test::recv(int index) const {
  // @@protoc_insertion_point(field_get:message.W_C_Test.Recv)
  return recv_.Get(index);
}
inline void W_C_Test::set_recv(int index, ::google::protobuf::int32 value) {
  recv_.Set(index, value);
  // @@protoc_insertion_point(field_set:message.W_C_Test.Recv)
}
inline void W_C_Test::add_recv(::google::protobuf::int32 value) {
  recv_.Add(value);
  // @@protoc_insertion_point(field_add:message.W_C_Test.Recv)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
W_C_Test::recv() const {
  // @@protoc_insertion_point(field_list:message.W_C_Test.Recv)
  return recv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
W_C_Test::mutable_recv() {
  // @@protoc_insertion_point(field_mutable_list:message.W_C_Test.Recv)
  return &recv_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2eproto__INCLUDED
