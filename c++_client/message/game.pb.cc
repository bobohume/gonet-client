// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace message {
class Point3FDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3F>
      _instance;
} _Point3F_default_instance_;
class C_W_Move_Move_NormalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Move_Move_Normal>
      _instance;
} _C_W_Move_Move_Normal_default_instance_;
class C_W_Move_Move_PathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Move_Move_Path>
      _instance;
} _C_W_Move_Move_Path_default_instance_;
class C_W_Move_Move_BlinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Move_Move_Blink>
      _instance;
} _C_W_Move_Move_Blink_default_instance_;
class C_W_Move_Move_JumpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Move_Move_Jump>
      _instance;
} _C_W_Move_Move_Jump_default_instance_;
class C_W_Move_Move_LineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Move_Move_Line>
      _instance;
} _C_W_Move_Move_Line_default_instance_;
class C_W_Move_MoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Move_Move>
      _instance;
} _C_W_Move_Move_default_instance_;
class C_W_MoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Move>
      _instance;
} _C_W_Move_default_instance_;
class W_C_LoginMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_LoginMap>
      _instance;
} _W_C_LoginMap_default_instance_;
class W_C_MoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_Move>
      _instance;
} _W_C_Move_default_instance_;
class W_C_ADD_SIMOBJDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_ADD_SIMOBJ>
      _instance;
} _W_C_ADD_SIMOBJ_default_instance_;
class C_W_LoginCopyMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_LoginCopyMap>
      _instance;
} _C_W_LoginCopyMap_default_instance_;
}  // namespace message
namespace protobuf_game_2eproto {
void InitDefaultsPoint3FImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::message::_Point3F_default_instance_;
    new (ptr) ::message::Point3F();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::Point3F::InitAsDefaultInstance();
}

void InitDefaultsPoint3F() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint3FImpl);
}

void InitDefaultsC_W_Move_Move_NormalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsPoint3F();
  {
    void* ptr = &::message::_C_W_Move_Move_Normal_default_instance_;
    new (ptr) ::message::C_W_Move_Move_Normal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Move_Move_Normal::InitAsDefaultInstance();
}

void InitDefaultsC_W_Move_Move_Normal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_Move_Move_NormalImpl);
}

void InitDefaultsC_W_Move_Move_PathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::message::_C_W_Move_Move_Path_default_instance_;
    new (ptr) ::message::C_W_Move_Move_Path();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Move_Move_Path::InitAsDefaultInstance();
}

void InitDefaultsC_W_Move_Move_Path() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_Move_Move_PathImpl);
}

void InitDefaultsC_W_Move_Move_BlinkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsPoint3F();
  {
    void* ptr = &::message::_C_W_Move_Move_Blink_default_instance_;
    new (ptr) ::message::C_W_Move_Move_Blink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Move_Move_Blink::InitAsDefaultInstance();
}

void InitDefaultsC_W_Move_Move_Blink() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_Move_Move_BlinkImpl);
}

void InitDefaultsC_W_Move_Move_JumpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsPoint3F();
  {
    void* ptr = &::message::_C_W_Move_Move_Jump_default_instance_;
    new (ptr) ::message::C_W_Move_Move_Jump();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Move_Move_Jump::InitAsDefaultInstance();
}

void InitDefaultsC_W_Move_Move_Jump() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_Move_Move_JumpImpl);
}

void InitDefaultsC_W_Move_Move_LineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsPoint3F();
  {
    void* ptr = &::message::_C_W_Move_Move_Line_default_instance_;
    new (ptr) ::message::C_W_Move_Move_Line();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Move_Move_Line::InitAsDefaultInstance();
}

void InitDefaultsC_W_Move_Move_Line() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_Move_Move_LineImpl);
}

void InitDefaultsC_W_Move_MoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Normal();
  protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Path();
  protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Blink();
  protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Jump();
  protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Line();
  {
    void* ptr = &::message::_C_W_Move_Move_default_instance_;
    new (ptr) ::message::C_W_Move_Move();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Move_Move::InitAsDefaultInstance();
}

void InitDefaultsC_W_Move_Move() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_Move_MoveImpl);
}

void InitDefaultsC_W_MoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  protobuf_game_2eproto::InitDefaultsC_W_Move_Move();
  {
    void* ptr = &::message::_C_W_Move_default_instance_;
    new (ptr) ::message::C_W_Move();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Move::InitAsDefaultInstance();
}

void InitDefaultsC_W_Move() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_MoveImpl);
}

void InitDefaultsW_C_LoginMapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  protobuf_game_2eproto::InitDefaultsPoint3F();
  {
    void* ptr = &::message::_W_C_LoginMap_default_instance_;
    new (ptr) ::message::W_C_LoginMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_LoginMap::InitAsDefaultInstance();
}

void InitDefaultsW_C_LoginMap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_LoginMapImpl);
}

void InitDefaultsW_C_MoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  protobuf_game_2eproto::InitDefaultsPoint3F();
  {
    void* ptr = &::message::_W_C_Move_default_instance_;
    new (ptr) ::message::W_C_Move();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_Move::InitAsDefaultInstance();
}

void InitDefaultsW_C_Move() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_MoveImpl);
}

void InitDefaultsW_C_ADD_SIMOBJImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  protobuf_game_2eproto::InitDefaultsPoint3F();
  {
    void* ptr = &::message::_W_C_ADD_SIMOBJ_default_instance_;
    new (ptr) ::message::W_C_ADD_SIMOBJ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_ADD_SIMOBJ::InitAsDefaultInstance();
}

void InitDefaultsW_C_ADD_SIMOBJ() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_ADD_SIMOBJImpl);
}

void InitDefaultsC_W_LoginCopyMapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_C_W_LoginCopyMap_default_instance_;
    new (ptr) ::message::C_W_LoginCopyMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_LoginCopyMap::InitAsDefaultInstance();
}

void InitDefaultsC_W_LoginCopyMap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_LoginCopyMapImpl);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Point3F, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Point3F, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Point3F, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Point3F, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Normal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Normal, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Normal, yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Normal, duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Path, pathid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Path, timepos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Path, mountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Blink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Blink, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Blink, rpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, bpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, epos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, timepos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, upexdur_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, downexdur_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Jump, b_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Line, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Line, bpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Line, epos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Line, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move_Line, timepos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move, normal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move, jump_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move_Move, line_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Move, move_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_LoginMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_LoginMap, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_LoginMap, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_LoginMap, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_LoginMap, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_Move, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_Move, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_Move, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_Move, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ADD_SIMOBJ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ADD_SIMOBJ, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ADD_SIMOBJ, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ADD_SIMOBJ, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ADD_SIMOBJ, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_LoginCopyMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_LoginCopyMap, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_LoginCopyMap, dataid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::message::Point3F)},
  { 8, -1, sizeof(::message::C_W_Move_Move_Normal)},
  { 16, -1, sizeof(::message::C_W_Move_Move_Path)},
  { 24, -1, sizeof(::message::C_W_Move_Move_Blink)},
  { 31, -1, sizeof(::message::C_W_Move_Move_Jump)},
  { 44, -1, sizeof(::message::C_W_Move_Move_Line)},
  { 53, -1, sizeof(::message::C_W_Move_Move)},
  { 64, -1, sizeof(::message::C_W_Move)},
  { 71, -1, sizeof(::message::W_C_LoginMap)},
  { 80, -1, sizeof(::message::W_C_Move)},
  { 89, -1, sizeof(::message::W_C_ADD_SIMOBJ)},
  { 98, -1, sizeof(::message::C_W_LoginCopyMap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_Point3F_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Move_Move_Normal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Move_Move_Path_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Move_Move_Blink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Move_Move_Jump_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Move_Move_Line_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Move_Move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_LoginMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_Move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_ADD_SIMOBJ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_LoginCopyMap_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "game.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ngame.proto\022\007message\032\rmessage.proto\"*\n\007"
      "Point3F\022\t\n\001X\030\001 \001(\002\022\t\n\001Y\030\002 \001(\002\022\t\n\001Z\030\003 \001(\002"
      "\"\244\006\n\010C_W_Move\022$\n\nPacketHead\030\001 \001(\0132\020.mess"
      "age.Ipacket\022$\n\004move\030\002 \001(\0132\026.message.C_W_"
      "Move.Move\032\313\005\n\004Move\022\014\n\004Mode\030\001 \001(\005\022-\n\006norm"
      "al\030\002 \001(\0132\035.message.C_W_Move.Move.Normal\022"
      ")\n\004path\030\003 \001(\0132\033.message.C_W_Move.Move.Pa"
      "th\022*\n\004link\030\004 \001(\0132\034.message.C_W_Move.Move"
      ".Blink\022)\n\004jump\030\005 \001(\0132\033.message.C_W_Move."
      "Move.Jump\022)\n\004line\030\006 \001(\0132\033.message.C_W_Mo"
      "ve.Move.Line\032F\n\006Normal\022\035\n\003Pos\030\001 \001(\0132\020.me"
      "ssage.Point3F\022\013\n\003Yaw\030\002 \001(\002\022\020\n\010Duration\030\003"
      " \001(\002\0328\n\004Path\022\016\n\006PathId\030\001 \001(\005\022\017\n\007TimePos\030"
      "\002 \001(\005\022\017\n\007MountId\030\003 \001(\005\032F\n\005Blink\022\035\n\003Pos\030\001"
      " \001(\0132\020.message.Point3F\022\036\n\004RPos\030\002 \001(\0132\020.m"
      "essage.Point3F\032\243\001\n\004Jump\022\036\n\004BPos\030\001 \001(\0132\020."
      "message.Point3F\022\036\n\004EPos\030\002 \001(\0132\020.message."
      "Point3F\022\020\n\010Duration\030\003 \001(\005\022\017\n\007TimePos\030\004 \001"
      "(\005\022\017\n\007UpExDur\030\005 \001(\005\022\021\n\tDownExDur\030\006 \001(\005\022\t"
      "\n\001A\030\007 \001(\005\022\t\n\001B\030\010 \001(\005\032i\n\004Line\022\036\n\004BPos\030\001 \001"
      "(\0132\020.message.Point3F\022\036\n\004EPos\030\002 \001(\0132\020.mes"
      "sage.Point3F\022\020\n\010Duration\030\003 \001(\005\022\017\n\007TimePo"
      "s\030\004 \001(\005\"q\n\014W_C_LoginMap\022$\n\nPacketHead\030\001 "
      "\001(\0132\020.message.Ipacket\022\n\n\002Id\030\002 \001(\003\022\035\n\003Pos"
      "\030\003 \001(\0132\020.message.Point3F\022\020\n\010Rotation\030\004 \001"
      "(\002\"m\n\010W_C_Move\022$\n\nPacketHead\030\001 \001(\0132\020.mes"
      "sage.Ipacket\022\n\n\002Id\030\002 \001(\003\022\035\n\003Pos\030\003 \001(\0132\020."
      "message.Point3F\022\020\n\010Rotation\030\004 \001(\002\"s\n\016W_C"
      "_ADD_SIMOBJ\022$\n\nPacketHead\030\001 \001(\0132\020.messag"
      "e.Ipacket\022\n\n\002Id\030\002 \001(\003\022\035\n\003Pos\030\003 \001(\0132\020.mes"
      "sage.Point3F\022\020\n\010Rotation\030\004 \001(\002\"H\n\020C_W_Lo"
      "ginCopyMap\022$\n\nPacketHead\030\001 \001(\0132\020.message"
      ".Ipacket\022\016\n\006DataId\030\002 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1312);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game.proto", &protobuf_RegisterTypes);
  ::protobuf_message_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_game_2eproto
namespace message {

// ===================================================================

void Point3F::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3F::kXFieldNumber;
const int Point3F::kYFieldNumber;
const int Point3F::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3F::Point3F()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsPoint3F();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.Point3F)
}
Point3F::Point3F(const Point3F& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:message.Point3F)
}

void Point3F::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Point3F::~Point3F() {
  // @@protoc_insertion_point(destructor:message.Point3F)
  SharedDtor();
}

void Point3F::SharedDtor() {
}

void Point3F::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3F::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3F& Point3F::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsPoint3F();
  return *internal_default_instance();
}

Point3F* Point3F::New(::google::protobuf::Arena* arena) const {
  Point3F* n = new Point3F;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3F::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Point3F)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Point3F::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.Point3F)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float X = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.Point3F)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.Point3F)
  return false;
#undef DO_
}

void Point3F::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.Point3F)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float Y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float Z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.Point3F)
}

::google::protobuf::uint8* Point3F::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.Point3F)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float X = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float Y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float Z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Point3F)
  return target;
}

size_t Point3F::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Point3F)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float X = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float Y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float Z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3F::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.Point3F)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3F* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3F>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.Point3F)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.Point3F)
    MergeFrom(*source);
  }
}

void Point3F::MergeFrom(const Point3F& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.Point3F)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Point3F::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.Point3F)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3F::CopyFrom(const Point3F& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Point3F)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3F::IsInitialized() const {
  return true;
}

void Point3F::Swap(Point3F* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3F::InternalSwap(Point3F* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3F::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Move_Move_Normal::InitAsDefaultInstance() {
  ::message::_C_W_Move_Move_Normal_default_instance_._instance.get_mutable()->pos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Move_Move_Normal::kPosFieldNumber;
const int C_W_Move_Move_Normal::kYawFieldNumber;
const int C_W_Move_Move_Normal::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Move_Move_Normal::C_W_Move_Move_Normal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Normal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Move.Move.Normal)
}
C_W_Move_Move_Normal::C_W_Move_Move_Normal(const C_W_Move_Move_Normal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::message::Point3F(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&yaw_, &from.yaw_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&yaw_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:message.C_W_Move.Move.Normal)
}

void C_W_Move_Move_Normal::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(duration_));
  _cached_size_ = 0;
}

C_W_Move_Move_Normal::~C_W_Move_Move_Normal() {
  // @@protoc_insertion_point(destructor:message.C_W_Move.Move.Normal)
  SharedDtor();
}

void C_W_Move_Move_Normal::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void C_W_Move_Move_Normal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Move_Move_Normal::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Move_Move_Normal& C_W_Move_Move_Normal::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Normal();
  return *internal_default_instance();
}

C_W_Move_Move_Normal* C_W_Move_Move_Normal::New(::google::protobuf::Arena* arena) const {
  C_W_Move_Move_Normal* n = new C_W_Move_Move_Normal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Move_Move_Normal::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Move.Move.Normal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&yaw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&yaw_)) + sizeof(duration_));
  _internal_metadata_.Clear();
}

bool C_W_Move_Move_Normal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Move.Move.Normal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Point3F Pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Yaw = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Move.Move.Normal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Move.Move.Normal)
  return false;
#undef DO_
}

void C_W_Move_Move_Normal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Move.Move.Normal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F Pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // float Yaw = 2;
  if (this->yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->yaw(), output);
  }

  // float Duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Move.Move.Normal)
}

::google::protobuf::uint8* C_W_Move_Move_Normal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Move.Move.Normal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F Pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->pos_, deterministic, target);
  }

  // float Yaw = 2;
  if (this->yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->yaw(), target);
  }

  // float Duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Move.Move.Normal)
  return target;
}

size_t C_W_Move_Move_Normal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Move.Move.Normal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Point3F Pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  // float Yaw = 2;
  if (this->yaw() != 0) {
    total_size += 1 + 4;
  }

  // float Duration = 3;
  if (this->duration() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Move_Move_Normal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Move.Move.Normal)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Move_Move_Normal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Move_Move_Normal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Move.Move.Normal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Move.Move.Normal)
    MergeFrom(*source);
  }
}

void C_W_Move_Move_Normal::MergeFrom(const C_W_Move_Move_Normal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Move.Move.Normal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::message::Point3F::MergeFrom(from.pos());
  }
  if (from.yaw() != 0) {
    set_yaw(from.yaw());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void C_W_Move_Move_Normal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Move.Move.Normal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Move_Move_Normal::CopyFrom(const C_W_Move_Move_Normal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Move.Move.Normal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Move_Move_Normal::IsInitialized() const {
  return true;
}

void C_W_Move_Move_Normal::Swap(C_W_Move_Move_Normal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Move_Move_Normal::InternalSwap(C_W_Move_Move_Normal* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(yaw_, other->yaw_);
  swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Move_Move_Normal::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Move_Move_Path::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Move_Move_Path::kPathIdFieldNumber;
const int C_W_Move_Move_Path::kTimePosFieldNumber;
const int C_W_Move_Move_Path::kMountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Move_Move_Path::C_W_Move_Move_Path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Path();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Move.Move.Path)
}
C_W_Move_Move_Path::C_W_Move_Move_Path(const C_W_Move_Move_Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pathid_, &from.pathid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mountid_) -
    reinterpret_cast<char*>(&pathid_)) + sizeof(mountid_));
  // @@protoc_insertion_point(copy_constructor:message.C_W_Move.Move.Path)
}

void C_W_Move_Move_Path::SharedCtor() {
  ::memset(&pathid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mountid_) -
      reinterpret_cast<char*>(&pathid_)) + sizeof(mountid_));
  _cached_size_ = 0;
}

C_W_Move_Move_Path::~C_W_Move_Move_Path() {
  // @@protoc_insertion_point(destructor:message.C_W_Move.Move.Path)
  SharedDtor();
}

void C_W_Move_Move_Path::SharedDtor() {
}

void C_W_Move_Move_Path::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Move_Move_Path::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Move_Move_Path& C_W_Move_Move_Path::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Path();
  return *internal_default_instance();
}

C_W_Move_Move_Path* C_W_Move_Move_Path::New(::google::protobuf::Arena* arena) const {
  C_W_Move_Move_Path* n = new C_W_Move_Move_Path;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Move_Move_Path::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Move.Move.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pathid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mountid_) -
      reinterpret_cast<char*>(&pathid_)) + sizeof(mountid_));
  _internal_metadata_.Clear();
}

bool C_W_Move_Move_Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Move.Move.Path)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PathId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pathid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TimePos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timepos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MountId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Move.Move.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Move.Move.Path)
  return false;
#undef DO_
}

void C_W_Move_Move_Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Move.Move.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PathId = 1;
  if (this->pathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pathid(), output);
  }

  // int32 TimePos = 2;
  if (this->timepos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timepos(), output);
  }

  // int32 MountId = 3;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Move.Move.Path)
}

::google::protobuf::uint8* C_W_Move_Move_Path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Move.Move.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PathId = 1;
  if (this->pathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pathid(), target);
  }

  // int32 TimePos = 2;
  if (this->timepos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timepos(), target);
  }

  // int32 MountId = 3;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Move.Move.Path)
  return target;
}

size_t C_W_Move_Move_Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Move.Move.Path)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PathId = 1;
  if (this->pathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pathid());
  }

  // int32 TimePos = 2;
  if (this->timepos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timepos());
  }

  // int32 MountId = 3;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Move_Move_Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Move.Move.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Move_Move_Path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Move_Move_Path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Move.Move.Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Move.Move.Path)
    MergeFrom(*source);
  }
}

void C_W_Move_Move_Path::MergeFrom(const C_W_Move_Move_Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Move.Move.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pathid() != 0) {
    set_pathid(from.pathid());
  }
  if (from.timepos() != 0) {
    set_timepos(from.timepos());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
}

void C_W_Move_Move_Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Move.Move.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Move_Move_Path::CopyFrom(const C_W_Move_Move_Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Move.Move.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Move_Move_Path::IsInitialized() const {
  return true;
}

void C_W_Move_Move_Path::Swap(C_W_Move_Move_Path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Move_Move_Path::InternalSwap(C_W_Move_Move_Path* other) {
  using std::swap;
  swap(pathid_, other->pathid_);
  swap(timepos_, other->timepos_);
  swap(mountid_, other->mountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Move_Move_Path::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Move_Move_Blink::InitAsDefaultInstance() {
  ::message::_C_W_Move_Move_Blink_default_instance_._instance.get_mutable()->pos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
  ::message::_C_W_Move_Move_Blink_default_instance_._instance.get_mutable()->rpos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Move_Move_Blink::kPosFieldNumber;
const int C_W_Move_Move_Blink::kRPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Move_Move_Blink::C_W_Move_Move_Blink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Blink();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Move.Move.Blink)
}
C_W_Move_Move_Blink::C_W_Move_Move_Blink(const C_W_Move_Move_Blink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::message::Point3F(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rpos()) {
    rpos_ = new ::message::Point3F(*from.rpos_);
  } else {
    rpos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:message.C_W_Move.Move.Blink)
}

void C_W_Move_Move_Blink::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rpos_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(rpos_));
  _cached_size_ = 0;
}

C_W_Move_Move_Blink::~C_W_Move_Move_Blink() {
  // @@protoc_insertion_point(destructor:message.C_W_Move.Move.Blink)
  SharedDtor();
}

void C_W_Move_Move_Blink::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rpos_;
}

void C_W_Move_Move_Blink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Move_Move_Blink::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Move_Move_Blink& C_W_Move_Move_Blink::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Blink();
  return *internal_default_instance();
}

C_W_Move_Move_Blink* C_W_Move_Move_Blink::New(::google::protobuf::Arena* arena) const {
  C_W_Move_Move_Blink* n = new C_W_Move_Move_Blink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Move_Move_Blink::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Move.Move.Blink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rpos_ != NULL) {
    delete rpos_;
  }
  rpos_ = NULL;
  _internal_metadata_.Clear();
}

bool C_W_Move_Move_Blink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Move.Move.Blink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Point3F Pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.Point3F RPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Move.Move.Blink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Move.Move.Blink)
  return false;
#undef DO_
}

void C_W_Move_Move_Blink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Move.Move.Blink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F Pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // .message.Point3F RPos = 2;
  if (this->has_rpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rpos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Move.Move.Blink)
}

::google::protobuf::uint8* C_W_Move_Move_Blink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Move.Move.Blink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F Pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->pos_, deterministic, target);
  }

  // .message.Point3F RPos = 2;
  if (this->has_rpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->rpos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Move.Move.Blink)
  return target;
}

size_t C_W_Move_Move_Blink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Move.Move.Blink)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Point3F Pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  // .message.Point3F RPos = 2;
  if (this->has_rpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rpos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Move_Move_Blink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Move.Move.Blink)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Move_Move_Blink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Move_Move_Blink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Move.Move.Blink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Move.Move.Blink)
    MergeFrom(*source);
  }
}

void C_W_Move_Move_Blink::MergeFrom(const C_W_Move_Move_Blink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Move.Move.Blink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::message::Point3F::MergeFrom(from.pos());
  }
  if (from.has_rpos()) {
    mutable_rpos()->::message::Point3F::MergeFrom(from.rpos());
  }
}

void C_W_Move_Move_Blink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Move.Move.Blink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Move_Move_Blink::CopyFrom(const C_W_Move_Move_Blink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Move.Move.Blink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Move_Move_Blink::IsInitialized() const {
  return true;
}

void C_W_Move_Move_Blink::Swap(C_W_Move_Move_Blink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Move_Move_Blink::InternalSwap(C_W_Move_Move_Blink* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rpos_, other->rpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Move_Move_Blink::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Move_Move_Jump::InitAsDefaultInstance() {
  ::message::_C_W_Move_Move_Jump_default_instance_._instance.get_mutable()->bpos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
  ::message::_C_W_Move_Move_Jump_default_instance_._instance.get_mutable()->epos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Move_Move_Jump::kBPosFieldNumber;
const int C_W_Move_Move_Jump::kEPosFieldNumber;
const int C_W_Move_Move_Jump::kDurationFieldNumber;
const int C_W_Move_Move_Jump::kTimePosFieldNumber;
const int C_W_Move_Move_Jump::kUpExDurFieldNumber;
const int C_W_Move_Move_Jump::kDownExDurFieldNumber;
const int C_W_Move_Move_Jump::kAFieldNumber;
const int C_W_Move_Move_Jump::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Move_Move_Jump::C_W_Move_Move_Jump()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Jump();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Move.Move.Jump)
}
C_W_Move_Move_Jump::C_W_Move_Move_Jump(const C_W_Move_Move_Jump& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpos()) {
    bpos_ = new ::message::Point3F(*from.bpos_);
  } else {
    bpos_ = NULL;
  }
  if (from.has_epos()) {
    epos_ = new ::message::Point3F(*from.epos_);
  } else {
    epos_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:message.C_W_Move.Move.Jump)
}

void C_W_Move_Move_Jump::SharedCtor() {
  ::memset(&bpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&bpos_)) + sizeof(b_));
  _cached_size_ = 0;
}

C_W_Move_Move_Jump::~C_W_Move_Move_Jump() {
  // @@protoc_insertion_point(destructor:message.C_W_Move.Move.Jump)
  SharedDtor();
}

void C_W_Move_Move_Jump::SharedDtor() {
  if (this != internal_default_instance()) delete bpos_;
  if (this != internal_default_instance()) delete epos_;
}

void C_W_Move_Move_Jump::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Move_Move_Jump::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Move_Move_Jump& C_W_Move_Move_Jump::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Jump();
  return *internal_default_instance();
}

C_W_Move_Move_Jump* C_W_Move_Move_Jump::New(::google::protobuf::Arena* arena) const {
  C_W_Move_Move_Jump* n = new C_W_Move_Move_Jump;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Move_Move_Jump::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Move.Move.Jump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bpos_ != NULL) {
    delete bpos_;
  }
  bpos_ = NULL;
  if (GetArenaNoVirtual() == NULL && epos_ != NULL) {
    delete epos_;
  }
  epos_ = NULL;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(b_));
  _internal_metadata_.Clear();
}

bool C_W_Move_Move_Jump::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Move.Move.Jump)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Point3F BPos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.Point3F EPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_epos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TimePos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timepos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 UpExDur = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upexdur_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DownExDur = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &downexdur_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 A = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 B = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Move.Move.Jump)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Move.Move.Jump)
  return false;
#undef DO_
}

void C_W_Move_Move_Jump::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Move.Move.Jump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F BPos = 1;
  if (this->has_bpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bpos_, output);
  }

  // .message.Point3F EPos = 2;
  if (this->has_epos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->epos_, output);
  }

  // int32 Duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->duration(), output);
  }

  // int32 TimePos = 4;
  if (this->timepos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timepos(), output);
  }

  // int32 UpExDur = 5;
  if (this->upexdur() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->upexdur(), output);
  }

  // int32 DownExDur = 6;
  if (this->downexdur() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->downexdur(), output);
  }

  // int32 A = 7;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->a(), output);
  }

  // int32 B = 8;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->b(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Move.Move.Jump)
}

::google::protobuf::uint8* C_W_Move_Move_Jump::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Move.Move.Jump)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F BPos = 1;
  if (this->has_bpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->bpos_, deterministic, target);
  }

  // .message.Point3F EPos = 2;
  if (this->has_epos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->epos_, deterministic, target);
  }

  // int32 Duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->duration(), target);
  }

  // int32 TimePos = 4;
  if (this->timepos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timepos(), target);
  }

  // int32 UpExDur = 5;
  if (this->upexdur() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->upexdur(), target);
  }

  // int32 DownExDur = 6;
  if (this->downexdur() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->downexdur(), target);
  }

  // int32 A = 7;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->a(), target);
  }

  // int32 B = 8;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->b(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Move.Move.Jump)
  return target;
}

size_t C_W_Move_Move_Jump::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Move.Move.Jump)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Point3F BPos = 1;
  if (this->has_bpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpos_);
  }

  // .message.Point3F EPos = 2;
  if (this->has_epos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->epos_);
  }

  // int32 Duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  // int32 TimePos = 4;
  if (this->timepos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timepos());
  }

  // int32 UpExDur = 5;
  if (this->upexdur() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->upexdur());
  }

  // int32 DownExDur = 6;
  if (this->downexdur() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->downexdur());
  }

  // int32 A = 7;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // int32 B = 8;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Move_Move_Jump::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Move.Move.Jump)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Move_Move_Jump* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Move_Move_Jump>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Move.Move.Jump)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Move.Move.Jump)
    MergeFrom(*source);
  }
}

void C_W_Move_Move_Jump::MergeFrom(const C_W_Move_Move_Jump& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Move.Move.Jump)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpos()) {
    mutable_bpos()->::message::Point3F::MergeFrom(from.bpos());
  }
  if (from.has_epos()) {
    mutable_epos()->::message::Point3F::MergeFrom(from.epos());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.timepos() != 0) {
    set_timepos(from.timepos());
  }
  if (from.upexdur() != 0) {
    set_upexdur(from.upexdur());
  }
  if (from.downexdur() != 0) {
    set_downexdur(from.downexdur());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void C_W_Move_Move_Jump::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Move.Move.Jump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Move_Move_Jump::CopyFrom(const C_W_Move_Move_Jump& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Move.Move.Jump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Move_Move_Jump::IsInitialized() const {
  return true;
}

void C_W_Move_Move_Jump::Swap(C_W_Move_Move_Jump* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Move_Move_Jump::InternalSwap(C_W_Move_Move_Jump* other) {
  using std::swap;
  swap(bpos_, other->bpos_);
  swap(epos_, other->epos_);
  swap(duration_, other->duration_);
  swap(timepos_, other->timepos_);
  swap(upexdur_, other->upexdur_);
  swap(downexdur_, other->downexdur_);
  swap(a_, other->a_);
  swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Move_Move_Jump::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Move_Move_Line::InitAsDefaultInstance() {
  ::message::_C_W_Move_Move_Line_default_instance_._instance.get_mutable()->bpos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
  ::message::_C_W_Move_Move_Line_default_instance_._instance.get_mutable()->epos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Move_Move_Line::kBPosFieldNumber;
const int C_W_Move_Move_Line::kEPosFieldNumber;
const int C_W_Move_Move_Line::kDurationFieldNumber;
const int C_W_Move_Move_Line::kTimePosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Move_Move_Line::C_W_Move_Move_Line()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Line();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Move.Move.Line)
}
C_W_Move_Move_Line::C_W_Move_Move_Line(const C_W_Move_Move_Line& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpos()) {
    bpos_ = new ::message::Point3F(*from.bpos_);
  } else {
    bpos_ = NULL;
  }
  if (from.has_epos()) {
    epos_ = new ::message::Point3F(*from.epos_);
  } else {
    epos_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&timepos_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(timepos_));
  // @@protoc_insertion_point(copy_constructor:message.C_W_Move.Move.Line)
}

void C_W_Move_Move_Line::SharedCtor() {
  ::memset(&bpos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timepos_) -
      reinterpret_cast<char*>(&bpos_)) + sizeof(timepos_));
  _cached_size_ = 0;
}

C_W_Move_Move_Line::~C_W_Move_Move_Line() {
  // @@protoc_insertion_point(destructor:message.C_W_Move.Move.Line)
  SharedDtor();
}

void C_W_Move_Move_Line::SharedDtor() {
  if (this != internal_default_instance()) delete bpos_;
  if (this != internal_default_instance()) delete epos_;
}

void C_W_Move_Move_Line::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Move_Move_Line::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Move_Move_Line& C_W_Move_Move_Line::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_Line();
  return *internal_default_instance();
}

C_W_Move_Move_Line* C_W_Move_Move_Line::New(::google::protobuf::Arena* arena) const {
  C_W_Move_Move_Line* n = new C_W_Move_Move_Line;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Move_Move_Line::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Move.Move.Line)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bpos_ != NULL) {
    delete bpos_;
  }
  bpos_ = NULL;
  if (GetArenaNoVirtual() == NULL && epos_ != NULL) {
    delete epos_;
  }
  epos_ = NULL;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timepos_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(timepos_));
  _internal_metadata_.Clear();
}

bool C_W_Move_Move_Line::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Move.Move.Line)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Point3F BPos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.Point3F EPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_epos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TimePos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timepos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Move.Move.Line)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Move.Move.Line)
  return false;
#undef DO_
}

void C_W_Move_Move_Line::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Move.Move.Line)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F BPos = 1;
  if (this->has_bpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bpos_, output);
  }

  // .message.Point3F EPos = 2;
  if (this->has_epos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->epos_, output);
  }

  // int32 Duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->duration(), output);
  }

  // int32 TimePos = 4;
  if (this->timepos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->timepos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Move.Move.Line)
}

::google::protobuf::uint8* C_W_Move_Move_Line::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Move.Move.Line)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Point3F BPos = 1;
  if (this->has_bpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->bpos_, deterministic, target);
  }

  // .message.Point3F EPos = 2;
  if (this->has_epos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->epos_, deterministic, target);
  }

  // int32 Duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->duration(), target);
  }

  // int32 TimePos = 4;
  if (this->timepos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->timepos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Move.Move.Line)
  return target;
}

size_t C_W_Move_Move_Line::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Move.Move.Line)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Point3F BPos = 1;
  if (this->has_bpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpos_);
  }

  // .message.Point3F EPos = 2;
  if (this->has_epos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->epos_);
  }

  // int32 Duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  // int32 TimePos = 4;
  if (this->timepos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timepos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Move_Move_Line::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Move.Move.Line)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Move_Move_Line* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Move_Move_Line>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Move.Move.Line)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Move.Move.Line)
    MergeFrom(*source);
  }
}

void C_W_Move_Move_Line::MergeFrom(const C_W_Move_Move_Line& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Move.Move.Line)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpos()) {
    mutable_bpos()->::message::Point3F::MergeFrom(from.bpos());
  }
  if (from.has_epos()) {
    mutable_epos()->::message::Point3F::MergeFrom(from.epos());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.timepos() != 0) {
    set_timepos(from.timepos());
  }
}

void C_W_Move_Move_Line::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Move.Move.Line)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Move_Move_Line::CopyFrom(const C_W_Move_Move_Line& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Move.Move.Line)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Move_Move_Line::IsInitialized() const {
  return true;
}

void C_W_Move_Move_Line::Swap(C_W_Move_Move_Line* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Move_Move_Line::InternalSwap(C_W_Move_Move_Line* other) {
  using std::swap;
  swap(bpos_, other->bpos_);
  swap(epos_, other->epos_);
  swap(duration_, other->duration_);
  swap(timepos_, other->timepos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Move_Move_Line::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Move_Move::InitAsDefaultInstance() {
  ::message::_C_W_Move_Move_default_instance_._instance.get_mutable()->normal_ = const_cast< ::message::C_W_Move_Move_Normal*>(
      ::message::C_W_Move_Move_Normal::internal_default_instance());
  ::message::_C_W_Move_Move_default_instance_._instance.get_mutable()->path_ = const_cast< ::message::C_W_Move_Move_Path*>(
      ::message::C_W_Move_Move_Path::internal_default_instance());
  ::message::_C_W_Move_Move_default_instance_._instance.get_mutable()->link_ = const_cast< ::message::C_W_Move_Move_Blink*>(
      ::message::C_W_Move_Move_Blink::internal_default_instance());
  ::message::_C_W_Move_Move_default_instance_._instance.get_mutable()->jump_ = const_cast< ::message::C_W_Move_Move_Jump*>(
      ::message::C_W_Move_Move_Jump::internal_default_instance());
  ::message::_C_W_Move_Move_default_instance_._instance.get_mutable()->line_ = const_cast< ::message::C_W_Move_Move_Line*>(
      ::message::C_W_Move_Move_Line::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Move_Move::kModeFieldNumber;
const int C_W_Move_Move::kNormalFieldNumber;
const int C_W_Move_Move::kPathFieldNumber;
const int C_W_Move_Move::kLinkFieldNumber;
const int C_W_Move_Move::kJumpFieldNumber;
const int C_W_Move_Move::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Move_Move::C_W_Move_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Move.Move)
}
C_W_Move_Move::C_W_Move_Move(const C_W_Move_Move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_normal()) {
    normal_ = new ::message::C_W_Move_Move_Normal(*from.normal_);
  } else {
    normal_ = NULL;
  }
  if (from.has_path()) {
    path_ = new ::message::C_W_Move_Move_Path(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_link()) {
    link_ = new ::message::C_W_Move_Move_Blink(*from.link_);
  } else {
    link_ = NULL;
  }
  if (from.has_jump()) {
    jump_ = new ::message::C_W_Move_Move_Jump(*from.jump_);
  } else {
    jump_ = NULL;
  }
  if (from.has_line()) {
    line_ = new ::message::C_W_Move_Move_Line(*from.line_);
  } else {
    line_ = NULL;
  }
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:message.C_W_Move.Move)
}

void C_W_Move_Move::SharedCtor() {
  ::memset(&normal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&normal_)) + sizeof(mode_));
  _cached_size_ = 0;
}

C_W_Move_Move::~C_W_Move_Move() {
  // @@protoc_insertion_point(destructor:message.C_W_Move.Move)
  SharedDtor();
}

void C_W_Move_Move::SharedDtor() {
  if (this != internal_default_instance()) delete normal_;
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete link_;
  if (this != internal_default_instance()) delete jump_;
  if (this != internal_default_instance()) delete line_;
}

void C_W_Move_Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Move_Move::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Move_Move& C_W_Move_Move::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move();
  return *internal_default_instance();
}

C_W_Move_Move* C_W_Move_Move::New(::google::protobuf::Arena* arena) const {
  C_W_Move_Move* n = new C_W_Move_Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Move_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Move.Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && normal_ != NULL) {
    delete normal_;
  }
  normal_ = NULL;
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && link_ != NULL) {
    delete link_;
  }
  link_ = NULL;
  if (GetArenaNoVirtual() == NULL && jump_ != NULL) {
    delete jump_;
  }
  jump_ = NULL;
  if (GetArenaNoVirtual() == NULL && line_ != NULL) {
    delete line_;
  }
  line_ = NULL;
  mode_ = 0;
  _internal_metadata_.Clear();
}

bool C_W_Move_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Move.Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.C_W_Move.Move.Normal normal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_normal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.C_W_Move.Move.Path path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.C_W_Move.Move.Blink link = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_link()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.C_W_Move.Move.Jump jump = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jump()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.C_W_Move.Move.Line line = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Move.Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Move.Move)
  return false;
#undef DO_
}

void C_W_Move_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Move.Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode(), output);
  }

  // .message.C_W_Move.Move.Normal normal = 2;
  if (this->has_normal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->normal_, output);
  }

  // .message.C_W_Move.Move.Path path = 3;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->path_, output);
  }

  // .message.C_W_Move.Move.Blink link = 4;
  if (this->has_link()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->link_, output);
  }

  // .message.C_W_Move.Move.Jump jump = 5;
  if (this->has_jump()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->jump_, output);
  }

  // .message.C_W_Move.Move.Line line = 6;
  if (this->has_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->line_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Move.Move)
}

::google::protobuf::uint8* C_W_Move_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Move.Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode(), target);
  }

  // .message.C_W_Move.Move.Normal normal = 2;
  if (this->has_normal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->normal_, deterministic, target);
  }

  // .message.C_W_Move.Move.Path path = 3;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->path_, deterministic, target);
  }

  // .message.C_W_Move.Move.Blink link = 4;
  if (this->has_link()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->link_, deterministic, target);
  }

  // .message.C_W_Move.Move.Jump jump = 5;
  if (this->has_jump()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->jump_, deterministic, target);
  }

  // .message.C_W_Move.Move.Line line = 6;
  if (this->has_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->line_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Move.Move)
  return target;
}

size_t C_W_Move_Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Move.Move)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.C_W_Move.Move.Normal normal = 2;
  if (this->has_normal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->normal_);
  }

  // .message.C_W_Move.Move.Path path = 3;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->path_);
  }

  // .message.C_W_Move.Move.Blink link = 4;
  if (this->has_link()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->link_);
  }

  // .message.C_W_Move.Move.Jump jump = 5;
  if (this->has_jump()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->jump_);
  }

  // .message.C_W_Move.Move.Line line = 6;
  if (this->has_line()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->line_);
  }

  // int32 Mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Move_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Move.Move)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Move_Move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Move_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Move.Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Move.Move)
    MergeFrom(*source);
  }
}

void C_W_Move_Move::MergeFrom(const C_W_Move_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Move.Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_normal()) {
    mutable_normal()->::message::C_W_Move_Move_Normal::MergeFrom(from.normal());
  }
  if (from.has_path()) {
    mutable_path()->::message::C_W_Move_Move_Path::MergeFrom(from.path());
  }
  if (from.has_link()) {
    mutable_link()->::message::C_W_Move_Move_Blink::MergeFrom(from.link());
  }
  if (from.has_jump()) {
    mutable_jump()->::message::C_W_Move_Move_Jump::MergeFrom(from.jump());
  }
  if (from.has_line()) {
    mutable_line()->::message::C_W_Move_Move_Line::MergeFrom(from.line());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void C_W_Move_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Move.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Move_Move::CopyFrom(const C_W_Move_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Move.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Move_Move::IsInitialized() const {
  return true;
}

void C_W_Move_Move::Swap(C_W_Move_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Move_Move::InternalSwap(C_W_Move_Move* other) {
  using std::swap;
  swap(normal_, other->normal_);
  swap(path_, other->path_);
  swap(link_, other->link_);
  swap(jump_, other->jump_);
  swap(line_, other->line_);
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Move_Move::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Move::InitAsDefaultInstance() {
  ::message::_C_W_Move_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
  ::message::_C_W_Move_default_instance_._instance.get_mutable()->move_ = const_cast< ::message::C_W_Move_Move*>(
      ::message::C_W_Move_Move::internal_default_instance());
}
void C_W_Move::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Move::kPacketHeadFieldNumber;
const int C_W_Move::kMoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Move::C_W_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_Move();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Move)
}
C_W_Move::C_W_Move(const C_W_Move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  if (from.has_move()) {
    move_ = new ::message::C_W_Move_Move(*from.move_);
  } else {
    move_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:message.C_W_Move)
}

void C_W_Move::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&move_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(move_));
  _cached_size_ = 0;
}

C_W_Move::~C_W_Move() {
  // @@protoc_insertion_point(destructor:message.C_W_Move)
  SharedDtor();
}

void C_W_Move::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
  if (this != internal_default_instance()) delete move_;
}

void C_W_Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Move::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Move& C_W_Move::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_Move();
  return *internal_default_instance();
}

C_W_Move* C_W_Move::New(::google::protobuf::Arena* arena) const {
  C_W_Move* n = new C_W_Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  if (GetArenaNoVirtual() == NULL && move_ != NULL) {
    delete move_;
  }
  move_ = NULL;
  _internal_metadata_.Clear();
}

bool C_W_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.C_W_Move.Move move = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_move()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Move)
  return false;
#undef DO_
}

void C_W_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // .message.C_W_Move.Move move = 2;
  if (this->has_move()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->move_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Move)
}

::google::protobuf::uint8* C_W_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // .message.C_W_Move.Move move = 2;
  if (this->has_move()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->move_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Move)
  return target;
}

size_t C_W_Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Move)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // .message.C_W_Move.Move move = 2;
  if (this->has_move()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->move_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Move)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Move)
    MergeFrom(*source);
  }
}

void C_W_Move::MergeFrom(const C_W_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.has_move()) {
    mutable_move()->::message::C_W_Move_Move::MergeFrom(from.move());
  }
}

void C_W_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Move::CopyFrom(const C_W_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Move::IsInitialized() const {
  return true;
}

void C_W_Move::Swap(C_W_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Move::InternalSwap(C_W_Move* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(move_, other->move_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Move::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_LoginMap::InitAsDefaultInstance() {
  ::message::_W_C_LoginMap_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
  ::message::_W_C_LoginMap_default_instance_._instance.get_mutable()->pos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
}
void W_C_LoginMap::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_LoginMap::kPacketHeadFieldNumber;
const int W_C_LoginMap::kIdFieldNumber;
const int W_C_LoginMap::kPosFieldNumber;
const int W_C_LoginMap::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_LoginMap::W_C_LoginMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsW_C_LoginMap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_LoginMap)
}
W_C_LoginMap::W_C_LoginMap(const W_C_LoginMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::message::Point3F(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rotation_));
  // @@protoc_insertion_point(copy_constructor:message.W_C_LoginMap)
}

void W_C_LoginMap::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(rotation_));
  _cached_size_ = 0;
}

W_C_LoginMap::~W_C_LoginMap() {
  // @@protoc_insertion_point(destructor:message.W_C_LoginMap)
  SharedDtor();
}

void W_C_LoginMap::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
  if (this != internal_default_instance()) delete pos_;
}

void W_C_LoginMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_LoginMap::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_LoginMap& W_C_LoginMap::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsW_C_LoginMap();
  return *internal_default_instance();
}

W_C_LoginMap* W_C_LoginMap::New(::google::protobuf::Arena* arena) const {
  W_C_LoginMap* n = new W_C_LoginMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_LoginMap::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_LoginMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rotation_));
  _internal_metadata_.Clear();
}

bool W_C_LoginMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_LoginMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.Point3F Pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_LoginMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_LoginMap)
  return false;
#undef DO_
}

void W_C_LoginMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_LoginMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_LoginMap)
}

::google::protobuf::uint8* W_C_LoginMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_LoginMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->pos_, deterministic, target);
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rotation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_LoginMap)
  return target;
}

size_t W_C_LoginMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_LoginMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_LoginMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_LoginMap)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_LoginMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_LoginMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_LoginMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_LoginMap)
    MergeFrom(*source);
  }
}

void W_C_LoginMap::MergeFrom(const W_C_LoginMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_LoginMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.has_pos()) {
    mutable_pos()->::message::Point3F::MergeFrom(from.pos());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.rotation() != 0) {
    set_rotation(from.rotation());
  }
}

void W_C_LoginMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_LoginMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_LoginMap::CopyFrom(const W_C_LoginMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_LoginMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_LoginMap::IsInitialized() const {
  return true;
}

void W_C_LoginMap::Swap(W_C_LoginMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_LoginMap::InternalSwap(W_C_LoginMap* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(pos_, other->pos_);
  swap(id_, other->id_);
  swap(rotation_, other->rotation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_LoginMap::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_Move::InitAsDefaultInstance() {
  ::message::_W_C_Move_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
  ::message::_W_C_Move_default_instance_._instance.get_mutable()->pos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
}
void W_C_Move::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_Move::kPacketHeadFieldNumber;
const int W_C_Move::kIdFieldNumber;
const int W_C_Move::kPosFieldNumber;
const int W_C_Move::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_Move::W_C_Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsW_C_Move();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_Move)
}
W_C_Move::W_C_Move(const W_C_Move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::message::Point3F(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rotation_));
  // @@protoc_insertion_point(copy_constructor:message.W_C_Move)
}

void W_C_Move::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(rotation_));
  _cached_size_ = 0;
}

W_C_Move::~W_C_Move() {
  // @@protoc_insertion_point(destructor:message.W_C_Move)
  SharedDtor();
}

void W_C_Move::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
  if (this != internal_default_instance()) delete pos_;
}

void W_C_Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_Move::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_Move& W_C_Move::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsW_C_Move();
  return *internal_default_instance();
}

W_C_Move* W_C_Move::New(::google::protobuf::Arena* arena) const {
  W_C_Move* n = new W_C_Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_Move::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rotation_));
  _internal_metadata_.Clear();
}

bool W_C_Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.Point3F Pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_Move)
  return false;
#undef DO_
}

void W_C_Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_Move)
}

::google::protobuf::uint8* W_C_Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_Move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->pos_, deterministic, target);
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rotation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_Move)
  return target;
}

size_t W_C_Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_Move)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_Move)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_Move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_Move)
    MergeFrom(*source);
  }
}

void W_C_Move::MergeFrom(const W_C_Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.has_pos()) {
    mutable_pos()->::message::Point3F::MergeFrom(from.pos());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.rotation() != 0) {
    set_rotation(from.rotation());
  }
}

void W_C_Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_Move::CopyFrom(const W_C_Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_Move::IsInitialized() const {
  return true;
}

void W_C_Move::Swap(W_C_Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_Move::InternalSwap(W_C_Move* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(pos_, other->pos_);
  swap(id_, other->id_);
  swap(rotation_, other->rotation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_Move::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_ADD_SIMOBJ::InitAsDefaultInstance() {
  ::message::_W_C_ADD_SIMOBJ_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
  ::message::_W_C_ADD_SIMOBJ_default_instance_._instance.get_mutable()->pos_ = const_cast< ::message::Point3F*>(
      ::message::Point3F::internal_default_instance());
}
void W_C_ADD_SIMOBJ::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_ADD_SIMOBJ::kPacketHeadFieldNumber;
const int W_C_ADD_SIMOBJ::kIdFieldNumber;
const int W_C_ADD_SIMOBJ::kPosFieldNumber;
const int W_C_ADD_SIMOBJ::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_ADD_SIMOBJ::W_C_ADD_SIMOBJ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsW_C_ADD_SIMOBJ();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_ADD_SIMOBJ)
}
W_C_ADD_SIMOBJ::W_C_ADD_SIMOBJ(const W_C_ADD_SIMOBJ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::message::Point3F(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rotation_));
  // @@protoc_insertion_point(copy_constructor:message.W_C_ADD_SIMOBJ)
}

void W_C_ADD_SIMOBJ::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(rotation_));
  _cached_size_ = 0;
}

W_C_ADD_SIMOBJ::~W_C_ADD_SIMOBJ() {
  // @@protoc_insertion_point(destructor:message.W_C_ADD_SIMOBJ)
  SharedDtor();
}

void W_C_ADD_SIMOBJ::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
  if (this != internal_default_instance()) delete pos_;
}

void W_C_ADD_SIMOBJ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_ADD_SIMOBJ::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_ADD_SIMOBJ& W_C_ADD_SIMOBJ::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsW_C_ADD_SIMOBJ();
  return *internal_default_instance();
}

W_C_ADD_SIMOBJ* W_C_ADD_SIMOBJ::New(::google::protobuf::Arena* arena) const {
  W_C_ADD_SIMOBJ* n = new W_C_ADD_SIMOBJ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_ADD_SIMOBJ::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_ADD_SIMOBJ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rotation_));
  _internal_metadata_.Clear();
}

bool W_C_ADD_SIMOBJ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_ADD_SIMOBJ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .message.Point3F Pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_ADD_SIMOBJ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_ADD_SIMOBJ)
  return false;
#undef DO_
}

void W_C_ADD_SIMOBJ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_ADD_SIMOBJ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_ADD_SIMOBJ)
}

::google::protobuf::uint8* W_C_ADD_SIMOBJ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_ADD_SIMOBJ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->pos_, deterministic, target);
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rotation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_ADD_SIMOBJ)
  return target;
}

size_t W_C_ADD_SIMOBJ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_ADD_SIMOBJ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // .message.Point3F Pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  // int64 Id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // float Rotation = 4;
  if (this->rotation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_ADD_SIMOBJ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_ADD_SIMOBJ)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_ADD_SIMOBJ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_ADD_SIMOBJ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_ADD_SIMOBJ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_ADD_SIMOBJ)
    MergeFrom(*source);
  }
}

void W_C_ADD_SIMOBJ::MergeFrom(const W_C_ADD_SIMOBJ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_ADD_SIMOBJ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.has_pos()) {
    mutable_pos()->::message::Point3F::MergeFrom(from.pos());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.rotation() != 0) {
    set_rotation(from.rotation());
  }
}

void W_C_ADD_SIMOBJ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_ADD_SIMOBJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_ADD_SIMOBJ::CopyFrom(const W_C_ADD_SIMOBJ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_ADD_SIMOBJ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_ADD_SIMOBJ::IsInitialized() const {
  return true;
}

void W_C_ADD_SIMOBJ::Swap(W_C_ADD_SIMOBJ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_ADD_SIMOBJ::InternalSwap(W_C_ADD_SIMOBJ* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(pos_, other->pos_);
  swap(id_, other->id_);
  swap(rotation_, other->rotation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_ADD_SIMOBJ::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_LoginCopyMap::InitAsDefaultInstance() {
  ::message::_C_W_LoginCopyMap_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void C_W_LoginCopyMap::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_LoginCopyMap::kPacketHeadFieldNumber;
const int C_W_LoginCopyMap::kDataIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_LoginCopyMap::C_W_LoginCopyMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsC_W_LoginCopyMap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_LoginCopyMap)
}
C_W_LoginCopyMap::C_W_LoginCopyMap(const C_W_LoginCopyMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  dataid_ = from.dataid_;
  // @@protoc_insertion_point(copy_constructor:message.C_W_LoginCopyMap)
}

void C_W_LoginCopyMap::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dataid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(dataid_));
  _cached_size_ = 0;
}

C_W_LoginCopyMap::~C_W_LoginCopyMap() {
  // @@protoc_insertion_point(destructor:message.C_W_LoginCopyMap)
  SharedDtor();
}

void C_W_LoginCopyMap::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void C_W_LoginCopyMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_LoginCopyMap::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_LoginCopyMap& C_W_LoginCopyMap::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsC_W_LoginCopyMap();
  return *internal_default_instance();
}

C_W_LoginCopyMap* C_W_LoginCopyMap::New(::google::protobuf::Arena* arena) const {
  C_W_LoginCopyMap* n = new C_W_LoginCopyMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_LoginCopyMap::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_LoginCopyMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  dataid_ = 0;
  _internal_metadata_.Clear();
}

bool C_W_LoginCopyMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_LoginCopyMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 DataId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_LoginCopyMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_LoginCopyMap)
  return false;
#undef DO_
}

void C_W_LoginCopyMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_LoginCopyMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int32 DataId = 2;
  if (this->dataid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dataid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_LoginCopyMap)
}

::google::protobuf::uint8* C_W_LoginCopyMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_LoginCopyMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int32 DataId = 2;
  if (this->dataid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dataid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_LoginCopyMap)
  return target;
}

size_t C_W_LoginCopyMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_LoginCopyMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int32 DataId = 2;
  if (this->dataid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dataid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_LoginCopyMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_LoginCopyMap)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_LoginCopyMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_LoginCopyMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_LoginCopyMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_LoginCopyMap)
    MergeFrom(*source);
  }
}

void C_W_LoginCopyMap::MergeFrom(const C_W_LoginCopyMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_LoginCopyMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.dataid() != 0) {
    set_dataid(from.dataid());
  }
}

void C_W_LoginCopyMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_LoginCopyMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_LoginCopyMap::CopyFrom(const C_W_LoginCopyMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_LoginCopyMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_LoginCopyMap::IsInitialized() const {
  return true;
}

void C_W_LoginCopyMap::Swap(C_W_LoginCopyMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_LoginCopyMap::InternalSwap(C_W_LoginCopyMap* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(dataid_, other->dataid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_LoginCopyMap::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message

// @@protoc_insertion_point(global_scope)
