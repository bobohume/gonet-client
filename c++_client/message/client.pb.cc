// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#include "client.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace message {
class C_A_LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_A_LoginRequest>
      _instance;
} _C_A_LoginRequest_default_instance_;
class A_C_LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A_C_LoginResponse>
      _instance;
} _A_C_LoginResponse_default_instance_;
class C_A_RegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_A_RegisterRequest>
      _instance;
} _C_A_RegisterRequest_default_instance_;
class A_C_RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A_C_RegisterResponse>
      _instance;
} _A_C_RegisterResponse_default_instance_;
class C_W_CreatePlayerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_CreatePlayerRequest>
      _instance;
} _C_W_CreatePlayerRequest_default_instance_;
class W_C_CreatePlayerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_CreatePlayerResponse>
      _instance;
} _W_C_CreatePlayerResponse_default_instance_;
class C_W_Game_LoginRequsetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_Game_LoginRequset>
      _instance;
} _C_W_Game_LoginRequset_default_instance_;
class W_C_SelectPlayerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_SelectPlayerResponse>
      _instance;
} _W_C_SelectPlayerResponse_default_instance_;
class C_G_LogoutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_G_LogoutResponse>
      _instance;
} _C_G_LogoutResponse_default_instance_;
class C_W_ChatMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C_W_ChatMessage>
      _instance;
} _C_W_ChatMessage_default_instance_;
class W_C_ChatMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_ChatMessage>
      _instance;
} _W_C_ChatMessage_default_instance_;
class W_C_TestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_Test>
      _instance;
} _W_C_Test_default_instance_;
}  // namespace message
namespace protobuf_client_2eproto {
void InitDefaultsC_A_LoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_C_A_LoginRequest_default_instance_;
    new (ptr) ::message::C_A_LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_A_LoginRequest::InitAsDefaultInstance();
}

void InitDefaultsC_A_LoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_A_LoginRequestImpl);
}

void InitDefaultsA_C_LoginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_A_C_LoginResponse_default_instance_;
    new (ptr) ::message::A_C_LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::A_C_LoginResponse::InitAsDefaultInstance();
}

void InitDefaultsA_C_LoginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA_C_LoginResponseImpl);
}

void InitDefaultsC_A_RegisterRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_C_A_RegisterRequest_default_instance_;
    new (ptr) ::message::C_A_RegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_A_RegisterRequest::InitAsDefaultInstance();
}

void InitDefaultsC_A_RegisterRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_A_RegisterRequestImpl);
}

void InitDefaultsA_C_RegisterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_A_C_RegisterResponse_default_instance_;
    new (ptr) ::message::A_C_RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::A_C_RegisterResponse::InitAsDefaultInstance();
}

void InitDefaultsA_C_RegisterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA_C_RegisterResponseImpl);
}

void InitDefaultsC_W_CreatePlayerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_C_W_CreatePlayerRequest_default_instance_;
    new (ptr) ::message::C_W_CreatePlayerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_CreatePlayerRequest::InitAsDefaultInstance();
}

void InitDefaultsC_W_CreatePlayerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_CreatePlayerRequestImpl);
}

void InitDefaultsW_C_CreatePlayerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_W_C_CreatePlayerResponse_default_instance_;
    new (ptr) ::message::W_C_CreatePlayerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_CreatePlayerResponse::InitAsDefaultInstance();
}

void InitDefaultsW_C_CreatePlayerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_CreatePlayerResponseImpl);
}

void InitDefaultsC_W_Game_LoginRequsetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_C_W_Game_LoginRequset_default_instance_;
    new (ptr) ::message::C_W_Game_LoginRequset();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_Game_LoginRequset::InitAsDefaultInstance();
}

void InitDefaultsC_W_Game_LoginRequset() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_Game_LoginRequsetImpl);
}

void InitDefaultsW_C_SelectPlayerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  protobuf_message_2eproto::InitDefaultsPlayerData();
  {
    void* ptr = &::message::_W_C_SelectPlayerResponse_default_instance_;
    new (ptr) ::message::W_C_SelectPlayerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_SelectPlayerResponse::InitAsDefaultInstance();
}

void InitDefaultsW_C_SelectPlayerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_SelectPlayerResponseImpl);
}

void InitDefaultsC_G_LogoutResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_C_G_LogoutResponse_default_instance_;
    new (ptr) ::message::C_G_LogoutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_G_LogoutResponse::InitAsDefaultInstance();
}

void InitDefaultsC_G_LogoutResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_G_LogoutResponseImpl);
}

void InitDefaultsC_W_ChatMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_C_W_ChatMessage_default_instance_;
    new (ptr) ::message::C_W_ChatMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::C_W_ChatMessage::InitAsDefaultInstance();
}

void InitDefaultsC_W_ChatMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC_W_ChatMessageImpl);
}

void InitDefaultsW_C_ChatMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_W_C_ChatMessage_default_instance_;
    new (ptr) ::message::W_C_ChatMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_ChatMessage::InitAsDefaultInstance();
}

void InitDefaultsW_C_ChatMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_ChatMessageImpl);
}

void InitDefaultsW_C_TestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::message::_W_C_Test_default_instance_;
    new (ptr) ::message::W_C_Test();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_Test::InitAsDefaultInstance();
}

void InitDefaultsW_C_Test() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_TestImpl);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_LoginRequest, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_LoginRequest, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_LoginRequest, buildno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_LoginRequest, socketid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginResponse, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginResponse, socketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginResponse, accountname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_RegisterRequest, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_RegisterRequest, accountname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_A_RegisterRequest, socketid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, socketid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_CreatePlayerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_CreatePlayerRequest, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_CreatePlayerRequest, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_CreatePlayerRequest, sex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Game_LoginRequset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Game_LoginRequset, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_Game_LoginRequset, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_G_LogoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_G_LogoutResponse, packethead_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_ChatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_ChatMessage, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_ChatMessage, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_ChatMessage, recver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_ChatMessage, messagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::C_W_ChatMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, sendername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, recver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, recvername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, messagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_ChatMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_Test, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_Test, recv_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::message::C_A_LoginRequest)},
  { 9, -1, sizeof(::message::A_C_LoginResponse)},
  { 18, -1, sizeof(::message::C_A_RegisterRequest)},
  { 26, -1, sizeof(::message::A_C_RegisterResponse)},
  { 34, -1, sizeof(::message::C_W_CreatePlayerRequest)},
  { 42, -1, sizeof(::message::W_C_CreatePlayerResponse)},
  { 50, -1, sizeof(::message::C_W_Game_LoginRequset)},
  { 57, -1, sizeof(::message::W_C_SelectPlayerResponse)},
  { 65, -1, sizeof(::message::C_G_LogoutResponse)},
  { 71, -1, sizeof(::message::C_W_ChatMessage)},
  { 81, -1, sizeof(::message::W_C_ChatMessage)},
  { 93, -1, sizeof(::message::W_C_Test)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_A_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_A_C_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_A_RegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_A_C_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_CreatePlayerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_CreatePlayerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_Game_LoginRequset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_SelectPlayerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_G_LogoutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_C_W_ChatMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_ChatMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_Test_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "client.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014client.proto\022\007message\032\rmessage.proto\"p"
      "\n\020C_A_LoginRequest\022$\n\nPacketHead\030\001 \001(\0132\020"
      ".message.Ipacket\022\023\n\013AccountName\030\002 \001(\t\022\017\n"
      "\007BuildNo\030\003 \001(\t\022\020\n\010SocketId\030\004 \001(\005\"o\n\021A_C_"
      "LoginResponse\022$\n\nPacketHead\030\001 \001(\0132\020.mess"
      "age.Ipacket\022\r\n\005Error\030\002 \001(\005\022\020\n\010SocketId\030\003"
      " \001(\005\022\023\n\013AccountName\030\004 \001(\t\"b\n\023C_A_Registe"
      "rRequest\022$\n\nPacketHead\030\001 \001(\0132\020.message.I"
      "packet\022\023\n\013AccountName\030\002 \001(\t\022\020\n\010SocketId\030"
      "\003 \001(\005\"]\n\024A_C_RegisterResponse\022$\n\nPacketH"
      "ead\030\001 \001(\0132\020.message.Ipacket\022\r\n\005Error\030\002 \001"
      "(\005\022\020\n\010SocketId\030\003 \001(\005\"`\n\027C_W_CreatePlayer"
      "Request\022$\n\nPacketHead\030\001 \001(\0132\020.message.Ip"
      "acket\022\022\n\nPlayerName\030\002 \001(\t\022\013\n\003Sex\030\003 \001(\005\"a"
      "\n\030W_C_CreatePlayerResponse\022$\n\nPacketHead"
      "\030\001 \001(\0132\020.message.Ipacket\022\r\n\005Error\030\002 \001(\005\022"
      "\020\n\010PlayerId\030\003 \001(\003\"O\n\025C_W_Game_LoginRequs"
      "et\022$\n\nPacketHead\030\001 \001(\0132\020.message.Ipacket"
      "\022\020\n\010PlayerId\030\002 \001(\003\"|\n\030W_C_SelectPlayerRe"
      "sponse\022$\n\nPacketHead\030\001 \001(\0132\020.message.Ipa"
      "cket\022\021\n\tAccountId\030\002 \001(\003\022\'\n\nPlayerData\030\003 "
      "\003(\0132\023.message.PlayerData\":\n\022C_G_LogoutRe"
      "sponse\022$\n\nPacketHead\030\001 \001(\0132\020.message.Ipa"
      "cket\"}\n\017C_W_ChatMessage\022$\n\nPacketHead\030\001 "
      "\001(\0132\020.message.Ipacket\022\016\n\006Sender\030\002 \001(\003\022\016\n"
      "\006Recver\030\003 \001(\003\022\023\n\013MessageType\030\004 \001(\005\022\017\n\007Me"
      "ssage\030\005 \001(\t\"\245\001\n\017W_C_ChatMessage\022$\n\nPacke"
      "tHead\030\001 \001(\0132\020.message.Ipacket\022\016\n\006Sender\030"
      "\002 \001(\003\022\022\n\nSenderName\030\003 \001(\t\022\016\n\006Recver\030\004 \001("
      "\003\022\022\n\nRecverName\030\005 \001(\t\022\023\n\013MessageType\030\006 \001"
      "(\005\022\017\n\007Message\030\007 \001(\t\"\030\n\010W_C_Test\022\014\n\004Recv\030"
      "\001 \003(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1253);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client.proto", &protobuf_RegisterTypes);
  ::protobuf_message_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_client_2eproto
namespace message {

// ===================================================================

void C_A_LoginRequest::InitAsDefaultInstance() {
  ::message::_C_A_LoginRequest_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void C_A_LoginRequest::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_A_LoginRequest::kPacketHeadFieldNumber;
const int C_A_LoginRequest::kAccountNameFieldNumber;
const int C_A_LoginRequest::kBuildNoFieldNumber;
const int C_A_LoginRequest::kSocketIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_A_LoginRequest::C_A_LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsC_A_LoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_A_LoginRequest)
}
C_A_LoginRequest::C_A_LoginRequest(const C_A_LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  buildno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buildno().size() > 0) {
    buildno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buildno_);
  }
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  socketid_ = from.socketid_;
  // @@protoc_insertion_point(copy_constructor:message.C_A_LoginRequest)
}

void C_A_LoginRequest::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buildno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(socketid_));
  _cached_size_ = 0;
}

C_A_LoginRequest::~C_A_LoginRequest() {
  // @@protoc_insertion_point(destructor:message.C_A_LoginRequest)
  SharedDtor();
}

void C_A_LoginRequest::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buildno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packethead_;
}

void C_A_LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_A_LoginRequest::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_A_LoginRequest& C_A_LoginRequest::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsC_A_LoginRequest();
  return *internal_default_instance();
}

C_A_LoginRequest* C_A_LoginRequest::New(::google::protobuf::Arena* arena) const {
  C_A_LoginRequest* n = new C_A_LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_A_LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_A_LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buildno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  socketid_ = 0;
  _internal_metadata_.Clear();
}

bool C_A_LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_A_LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AccountName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.C_A_LoginRequest.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BuildNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buildno().data(), static_cast<int>(this->buildno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.C_A_LoginRequest.BuildNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SocketId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_A_LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_A_LoginRequest)
  return false;
#undef DO_
}

void C_A_LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_A_LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_A_LoginRequest.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // string BuildNo = 3;
  if (this->buildno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buildno().data(), static_cast<int>(this->buildno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_A_LoginRequest.BuildNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->buildno(), output);
  }

  // int32 SocketId = 4;
  if (this->socketid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->socketid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_A_LoginRequest)
}

::google::protobuf::uint8* C_A_LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_A_LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_A_LoginRequest.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // string BuildNo = 3;
  if (this->buildno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buildno().data(), static_cast<int>(this->buildno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_A_LoginRequest.BuildNo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->buildno(), target);
  }

  // int32 SocketId = 4;
  if (this->socketid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->socketid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_A_LoginRequest)
  return target;
}

size_t C_A_LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_A_LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // string BuildNo = 3;
  if (this->buildno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buildno());
  }

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int32 SocketId = 4;
  if (this->socketid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_A_LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_A_LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const C_A_LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_A_LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_A_LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_A_LoginRequest)
    MergeFrom(*source);
  }
}

void C_A_LoginRequest::MergeFrom(const C_A_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_A_LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.buildno().size() > 0) {

    buildno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buildno_);
  }
  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.socketid() != 0) {
    set_socketid(from.socketid());
  }
}

void C_A_LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_A_LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_A_LoginRequest::CopyFrom(const C_A_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_A_LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_A_LoginRequest::IsInitialized() const {
  return true;
}

void C_A_LoginRequest::Swap(C_A_LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_A_LoginRequest::InternalSwap(C_A_LoginRequest* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  buildno_.Swap(&other->buildno_);
  swap(packethead_, other->packethead_);
  swap(socketid_, other->socketid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_A_LoginRequest::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A_C_LoginResponse::InitAsDefaultInstance() {
  ::message::_A_C_LoginResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void A_C_LoginResponse::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A_C_LoginResponse::kPacketHeadFieldNumber;
const int A_C_LoginResponse::kErrorFieldNumber;
const int A_C_LoginResponse::kSocketIdFieldNumber;
const int A_C_LoginResponse::kAccountNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A_C_LoginResponse::A_C_LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsA_C_LoginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.A_C_LoginResponse)
}
A_C_LoginResponse::A_C_LoginResponse(const A_C_LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&socketid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  // @@protoc_insertion_point(copy_constructor:message.A_C_LoginResponse)
}

void A_C_LoginResponse::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(socketid_));
  _cached_size_ = 0;
}

A_C_LoginResponse::~A_C_LoginResponse() {
  // @@protoc_insertion_point(destructor:message.A_C_LoginResponse)
  SharedDtor();
}

void A_C_LoginResponse::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packethead_;
}

void A_C_LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A_C_LoginResponse::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A_C_LoginResponse& A_C_LoginResponse::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsA_C_LoginResponse();
  return *internal_default_instance();
}

A_C_LoginResponse* A_C_LoginResponse::New(::google::protobuf::Arena* arena) const {
  A_C_LoginResponse* n = new A_C_LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A_C_LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.A_C_LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  _internal_metadata_.Clear();
}

bool A_C_LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.A_C_LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SocketId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AccountName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.A_C_LoginResponse.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.A_C_LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.A_C_LoginResponse)
  return false;
#undef DO_
}

void A_C_LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.A_C_LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->socketid(), output);
  }

  // string AccountName = 4;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.A_C_LoginResponse.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->accountname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.A_C_LoginResponse)
}

::google::protobuf::uint8* A_C_LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.A_C_LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->socketid(), target);
  }

  // string AccountName = 4;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.A_C_LoginResponse.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->accountname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.A_C_LoginResponse)
  return target;
}

size_t A_C_LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.A_C_LoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string AccountName = 4;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A_C_LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.A_C_LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const A_C_LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A_C_LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.A_C_LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.A_C_LoginResponse)
    MergeFrom(*source);
  }
}

void A_C_LoginResponse::MergeFrom(const A_C_LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.A_C_LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.socketid() != 0) {
    set_socketid(from.socketid());
  }
}

void A_C_LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.A_C_LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A_C_LoginResponse::CopyFrom(const A_C_LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.A_C_LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A_C_LoginResponse::IsInitialized() const {
  return true;
}

void A_C_LoginResponse::Swap(A_C_LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A_C_LoginResponse::InternalSwap(A_C_LoginResponse* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  swap(packethead_, other->packethead_);
  swap(error_, other->error_);
  swap(socketid_, other->socketid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A_C_LoginResponse::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_A_RegisterRequest::InitAsDefaultInstance() {
  ::message::_C_A_RegisterRequest_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void C_A_RegisterRequest::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_A_RegisterRequest::kPacketHeadFieldNumber;
const int C_A_RegisterRequest::kAccountNameFieldNumber;
const int C_A_RegisterRequest::kSocketIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_A_RegisterRequest::C_A_RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsC_A_RegisterRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_A_RegisterRequest)
}
C_A_RegisterRequest::C_A_RegisterRequest(const C_A_RegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accountname().size() > 0) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  socketid_ = from.socketid_;
  // @@protoc_insertion_point(copy_constructor:message.C_A_RegisterRequest)
}

void C_A_RegisterRequest::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(socketid_));
  _cached_size_ = 0;
}

C_A_RegisterRequest::~C_A_RegisterRequest() {
  // @@protoc_insertion_point(destructor:message.C_A_RegisterRequest)
  SharedDtor();
}

void C_A_RegisterRequest::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packethead_;
}

void C_A_RegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_A_RegisterRequest::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_A_RegisterRequest& C_A_RegisterRequest::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsC_A_RegisterRequest();
  return *internal_default_instance();
}

C_A_RegisterRequest* C_A_RegisterRequest::New(::google::protobuf::Arena* arena) const {
  C_A_RegisterRequest* n = new C_A_RegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_A_RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_A_RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  socketid_ = 0;
  _internal_metadata_.Clear();
}

bool C_A_RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_A_RegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AccountName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.C_A_RegisterRequest.AccountName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SocketId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_A_RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_A_RegisterRequest)
  return false;
#undef DO_
}

void C_A_RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_A_RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_A_RegisterRequest.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->socketid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_A_RegisterRequest)
}

::google::protobuf::uint8* C_A_RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_A_RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_A_RegisterRequest.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->socketid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_A_RegisterRequest)
  return target;
}

size_t C_A_RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_A_RegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string AccountName = 2;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_A_RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_A_RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const C_A_RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_A_RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_A_RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_A_RegisterRequest)
    MergeFrom(*source);
  }
}

void C_A_RegisterRequest::MergeFrom(const C_A_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_A_RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.socketid() != 0) {
    set_socketid(from.socketid());
  }
}

void C_A_RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_A_RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_A_RegisterRequest::CopyFrom(const C_A_RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_A_RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_A_RegisterRequest::IsInitialized() const {
  return true;
}

void C_A_RegisterRequest::Swap(C_A_RegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_A_RegisterRequest::InternalSwap(C_A_RegisterRequest* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  swap(packethead_, other->packethead_);
  swap(socketid_, other->socketid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_A_RegisterRequest::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A_C_RegisterResponse::InitAsDefaultInstance() {
  ::message::_A_C_RegisterResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void A_C_RegisterResponse::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A_C_RegisterResponse::kPacketHeadFieldNumber;
const int A_C_RegisterResponse::kErrorFieldNumber;
const int A_C_RegisterResponse::kSocketIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A_C_RegisterResponse::A_C_RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsA_C_RegisterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.A_C_RegisterResponse)
}
A_C_RegisterResponse::A_C_RegisterResponse(const A_C_RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&socketid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  // @@protoc_insertion_point(copy_constructor:message.A_C_RegisterResponse)
}

void A_C_RegisterResponse::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(socketid_));
  _cached_size_ = 0;
}

A_C_RegisterResponse::~A_C_RegisterResponse() {
  // @@protoc_insertion_point(destructor:message.A_C_RegisterResponse)
  SharedDtor();
}

void A_C_RegisterResponse::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void A_C_RegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A_C_RegisterResponse::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A_C_RegisterResponse& A_C_RegisterResponse::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsA_C_RegisterResponse();
  return *internal_default_instance();
}

A_C_RegisterResponse* A_C_RegisterResponse::New(::google::protobuf::Arena* arena) const {
  A_C_RegisterResponse* n = new A_C_RegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A_C_RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.A_C_RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  _internal_metadata_.Clear();
}

bool A_C_RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.A_C_RegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SocketId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.A_C_RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.A_C_RegisterResponse)
  return false;
#undef DO_
}

void A_C_RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.A_C_RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->socketid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.A_C_RegisterResponse)
}

::google::protobuf::uint8* A_C_RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.A_C_RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->socketid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.A_C_RegisterResponse)
  return target;
}

size_t A_C_RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.A_C_RegisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  // int32 SocketId = 3;
  if (this->socketid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A_C_RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.A_C_RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const A_C_RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A_C_RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.A_C_RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.A_C_RegisterResponse)
    MergeFrom(*source);
  }
}

void A_C_RegisterResponse::MergeFrom(const A_C_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.A_C_RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.socketid() != 0) {
    set_socketid(from.socketid());
  }
}

void A_C_RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.A_C_RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A_C_RegisterResponse::CopyFrom(const A_C_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.A_C_RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A_C_RegisterResponse::IsInitialized() const {
  return true;
}

void A_C_RegisterResponse::Swap(A_C_RegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A_C_RegisterResponse::InternalSwap(A_C_RegisterResponse* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(error_, other->error_);
  swap(socketid_, other->socketid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A_C_RegisterResponse::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_CreatePlayerRequest::InitAsDefaultInstance() {
  ::message::_C_W_CreatePlayerRequest_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void C_W_CreatePlayerRequest::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_CreatePlayerRequest::kPacketHeadFieldNumber;
const int C_W_CreatePlayerRequest::kPlayerNameFieldNumber;
const int C_W_CreatePlayerRequest::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_CreatePlayerRequest::C_W_CreatePlayerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsC_W_CreatePlayerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_CreatePlayerRequest)
}
C_W_CreatePlayerRequest::C_W_CreatePlayerRequest(const C_W_CreatePlayerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  sex_ = from.sex_;
  // @@protoc_insertion_point(copy_constructor:message.C_W_CreatePlayerRequest)
}

void C_W_CreatePlayerRequest::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sex_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(sex_));
  _cached_size_ = 0;
}

C_W_CreatePlayerRequest::~C_W_CreatePlayerRequest() {
  // @@protoc_insertion_point(destructor:message.C_W_CreatePlayerRequest)
  SharedDtor();
}

void C_W_CreatePlayerRequest::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packethead_;
}

void C_W_CreatePlayerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_CreatePlayerRequest::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_CreatePlayerRequest& C_W_CreatePlayerRequest::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsC_W_CreatePlayerRequest();
  return *internal_default_instance();
}

C_W_CreatePlayerRequest* C_W_CreatePlayerRequest::New(::google::protobuf::Arena* arena) const {
  C_W_CreatePlayerRequest* n = new C_W_CreatePlayerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_CreatePlayerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_CreatePlayerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  sex_ = 0;
  _internal_metadata_.Clear();
}

bool C_W_CreatePlayerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_CreatePlayerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PlayerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), static_cast<int>(this->playername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.C_W_CreatePlayerRequest.PlayerName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_CreatePlayerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_CreatePlayerRequest)
  return false;
#undef DO_
}

void C_W_CreatePlayerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_CreatePlayerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // string PlayerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_W_CreatePlayerRequest.PlayerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playername(), output);
  }

  // int32 Sex = 3;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_CreatePlayerRequest)
}

::google::protobuf::uint8* C_W_CreatePlayerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_CreatePlayerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // string PlayerName = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_W_CreatePlayerRequest.PlayerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playername(), target);
  }

  // int32 Sex = 3;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_CreatePlayerRequest)
  return target;
}

size_t C_W_CreatePlayerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_CreatePlayerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerName = 2;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int32 Sex = 3;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_CreatePlayerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_CreatePlayerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_CreatePlayerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_CreatePlayerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_CreatePlayerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_CreatePlayerRequest)
    MergeFrom(*source);
  }
}

void C_W_CreatePlayerRequest::MergeFrom(const C_W_CreatePlayerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_CreatePlayerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
}

void C_W_CreatePlayerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_CreatePlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_CreatePlayerRequest::CopyFrom(const C_W_CreatePlayerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_CreatePlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_CreatePlayerRequest::IsInitialized() const {
  return true;
}

void C_W_CreatePlayerRequest::Swap(C_W_CreatePlayerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_CreatePlayerRequest::InternalSwap(C_W_CreatePlayerRequest* other) {
  using std::swap;
  playername_.Swap(&other->playername_);
  swap(packethead_, other->packethead_);
  swap(sex_, other->sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_CreatePlayerRequest::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_CreatePlayerResponse::InitAsDefaultInstance() {
  ::message::_W_C_CreatePlayerResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void W_C_CreatePlayerResponse::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_CreatePlayerResponse::kPacketHeadFieldNumber;
const int W_C_CreatePlayerResponse::kErrorFieldNumber;
const int W_C_CreatePlayerResponse::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_CreatePlayerResponse::W_C_CreatePlayerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsW_C_CreatePlayerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_CreatePlayerResponse)
}
W_C_CreatePlayerResponse::W_C_CreatePlayerResponse(const W_C_CreatePlayerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:message.W_C_CreatePlayerResponse)
}

void W_C_CreatePlayerResponse::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(error_));
  _cached_size_ = 0;
}

W_C_CreatePlayerResponse::~W_C_CreatePlayerResponse() {
  // @@protoc_insertion_point(destructor:message.W_C_CreatePlayerResponse)
  SharedDtor();
}

void W_C_CreatePlayerResponse::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void W_C_CreatePlayerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_CreatePlayerResponse::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_CreatePlayerResponse& W_C_CreatePlayerResponse::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsW_C_CreatePlayerResponse();
  return *internal_default_instance();
}

W_C_CreatePlayerResponse* W_C_CreatePlayerResponse::New(::google::protobuf::Arena* arena) const {
  W_C_CreatePlayerResponse* n = new W_C_CreatePlayerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_CreatePlayerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_CreatePlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

bool W_C_CreatePlayerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_CreatePlayerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PlayerId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_CreatePlayerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_CreatePlayerResponse)
  return false;
#undef DO_
}

void W_C_CreatePlayerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_CreatePlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }

  // int64 PlayerId = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_CreatePlayerResponse)
}

::google::protobuf::uint8* W_C_CreatePlayerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_CreatePlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }

  // int64 PlayerId = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_CreatePlayerResponse)
  return target;
}

size_t W_C_CreatePlayerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_CreatePlayerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int64 PlayerId = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playerid());
  }

  // int32 Error = 2;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_CreatePlayerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_CreatePlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_CreatePlayerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_CreatePlayerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_CreatePlayerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_CreatePlayerResponse)
    MergeFrom(*source);
  }
}

void W_C_CreatePlayerResponse::MergeFrom(const W_C_CreatePlayerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_CreatePlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void W_C_CreatePlayerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_CreatePlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_CreatePlayerResponse::CopyFrom(const W_C_CreatePlayerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_CreatePlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_CreatePlayerResponse::IsInitialized() const {
  return true;
}

void W_C_CreatePlayerResponse::Swap(W_C_CreatePlayerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_CreatePlayerResponse::InternalSwap(W_C_CreatePlayerResponse* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(playerid_, other->playerid_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_CreatePlayerResponse::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_Game_LoginRequset::InitAsDefaultInstance() {
  ::message::_C_W_Game_LoginRequset_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void C_W_Game_LoginRequset::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_Game_LoginRequset::kPacketHeadFieldNumber;
const int C_W_Game_LoginRequset::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_Game_LoginRequset::C_W_Game_LoginRequset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsC_W_Game_LoginRequset();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_Game_LoginRequset)
}
C_W_Game_LoginRequset::C_W_Game_LoginRequset(const C_W_Game_LoginRequset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:message.C_W_Game_LoginRequset)
}

void C_W_Game_LoginRequset::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(playerid_));
  _cached_size_ = 0;
}

C_W_Game_LoginRequset::~C_W_Game_LoginRequset() {
  // @@protoc_insertion_point(destructor:message.C_W_Game_LoginRequset)
  SharedDtor();
}

void C_W_Game_LoginRequset::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void C_W_Game_LoginRequset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_Game_LoginRequset::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_Game_LoginRequset& C_W_Game_LoginRequset::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsC_W_Game_LoginRequset();
  return *internal_default_instance();
}

C_W_Game_LoginRequset* C_W_Game_LoginRequset::New(::google::protobuf::Arena* arena) const {
  C_W_Game_LoginRequset* n = new C_W_Game_LoginRequset;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_Game_LoginRequset::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_Game_LoginRequset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  playerid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool C_W_Game_LoginRequset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_Game_LoginRequset)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 PlayerId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_Game_LoginRequset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_Game_LoginRequset)
  return false;
#undef DO_
}

void C_W_Game_LoginRequset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_Game_LoginRequset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int64 PlayerId = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_Game_LoginRequset)
}

::google::protobuf::uint8* C_W_Game_LoginRequset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_Game_LoginRequset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int64 PlayerId = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_Game_LoginRequset)
  return target;
}

size_t C_W_Game_LoginRequset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_Game_LoginRequset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int64 PlayerId = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_Game_LoginRequset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_Game_LoginRequset)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_Game_LoginRequset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_Game_LoginRequset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_Game_LoginRequset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_Game_LoginRequset)
    MergeFrom(*source);
  }
}

void C_W_Game_LoginRequset::MergeFrom(const C_W_Game_LoginRequset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_Game_LoginRequset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void C_W_Game_LoginRequset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_Game_LoginRequset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_Game_LoginRequset::CopyFrom(const C_W_Game_LoginRequset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_Game_LoginRequset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_Game_LoginRequset::IsInitialized() const {
  return true;
}

void C_W_Game_LoginRequset::Swap(C_W_Game_LoginRequset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_Game_LoginRequset::InternalSwap(C_W_Game_LoginRequset* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_Game_LoginRequset::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_SelectPlayerResponse::InitAsDefaultInstance() {
  ::message::_W_C_SelectPlayerResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void W_C_SelectPlayerResponse::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
void W_C_SelectPlayerResponse::clear_playerdata() {
  playerdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_SelectPlayerResponse::kPacketHeadFieldNumber;
const int W_C_SelectPlayerResponse::kAccountIdFieldNumber;
const int W_C_SelectPlayerResponse::kPlayerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_SelectPlayerResponse::W_C_SelectPlayerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsW_C_SelectPlayerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_SelectPlayerResponse)
}
W_C_SelectPlayerResponse::W_C_SelectPlayerResponse(const W_C_SelectPlayerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playerdata_(from.playerdata_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:message.W_C_SelectPlayerResponse)
}

void W_C_SelectPlayerResponse::SharedCtor() {
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(accountid_));
  _cached_size_ = 0;
}

W_C_SelectPlayerResponse::~W_C_SelectPlayerResponse() {
  // @@protoc_insertion_point(destructor:message.W_C_SelectPlayerResponse)
  SharedDtor();
}

void W_C_SelectPlayerResponse::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void W_C_SelectPlayerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_SelectPlayerResponse::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_SelectPlayerResponse& W_C_SelectPlayerResponse::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsW_C_SelectPlayerResponse();
  return *internal_default_instance();
}

W_C_SelectPlayerResponse* W_C_SelectPlayerResponse::New(::google::protobuf::Arena* arena) const {
  W_C_SelectPlayerResponse* n = new W_C_SelectPlayerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_SelectPlayerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_SelectPlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerdata_.Clear();
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  accountid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool W_C_SelectPlayerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_SelectPlayerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 AccountId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .message.PlayerData PlayerData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_SelectPlayerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_SelectPlayerResponse)
  return false;
#undef DO_
}

void W_C_SelectPlayerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_SelectPlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int64 AccountId = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->accountid(), output);
  }

  // repeated .message.PlayerData PlayerData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->playerdata(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_SelectPlayerResponse)
}

::google::protobuf::uint8* W_C_SelectPlayerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_SelectPlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int64 AccountId = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->accountid(), target);
  }

  // repeated .message.PlayerData PlayerData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->playerdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_SelectPlayerResponse)
  return target;
}

size_t W_C_SelectPlayerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_SelectPlayerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .message.PlayerData PlayerData = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->playerdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->playerdata(static_cast<int>(i)));
    }
  }

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int64 AccountId = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_SelectPlayerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_SelectPlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_SelectPlayerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_SelectPlayerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_SelectPlayerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_SelectPlayerResponse)
    MergeFrom(*source);
  }
}

void W_C_SelectPlayerResponse::MergeFrom(const W_C_SelectPlayerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_SelectPlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerdata_.MergeFrom(from.playerdata_);
  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void W_C_SelectPlayerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_SelectPlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_SelectPlayerResponse::CopyFrom(const W_C_SelectPlayerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_SelectPlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_SelectPlayerResponse::IsInitialized() const {
  return true;
}

void W_C_SelectPlayerResponse::Swap(W_C_SelectPlayerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_SelectPlayerResponse::InternalSwap(W_C_SelectPlayerResponse* other) {
  using std::swap;
  playerdata_.InternalSwap(&other->playerdata_);
  swap(packethead_, other->packethead_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_SelectPlayerResponse::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_G_LogoutResponse::InitAsDefaultInstance() {
  ::message::_C_G_LogoutResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void C_G_LogoutResponse::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_G_LogoutResponse::kPacketHeadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_G_LogoutResponse::C_G_LogoutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsC_G_LogoutResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_G_LogoutResponse)
}
C_G_LogoutResponse::C_G_LogoutResponse(const C_G_LogoutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:message.C_G_LogoutResponse)
}

void C_G_LogoutResponse::SharedCtor() {
  packethead_ = NULL;
  _cached_size_ = 0;
}

C_G_LogoutResponse::~C_G_LogoutResponse() {
  // @@protoc_insertion_point(destructor:message.C_G_LogoutResponse)
  SharedDtor();
}

void C_G_LogoutResponse::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void C_G_LogoutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_G_LogoutResponse::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_G_LogoutResponse& C_G_LogoutResponse::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsC_G_LogoutResponse();
  return *internal_default_instance();
}

C_G_LogoutResponse* C_G_LogoutResponse::New(::google::protobuf::Arena* arena) const {
  C_G_LogoutResponse* n = new C_G_LogoutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_G_LogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_G_LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  _internal_metadata_.Clear();
}

bool C_G_LogoutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_G_LogoutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_G_LogoutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_G_LogoutResponse)
  return false;
#undef DO_
}

void C_G_LogoutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_G_LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_G_LogoutResponse)
}

::google::protobuf::uint8* C_G_LogoutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_G_LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_G_LogoutResponse)
  return target;
}

size_t C_G_LogoutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_G_LogoutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_G_LogoutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_G_LogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const C_G_LogoutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_G_LogoutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_G_LogoutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_G_LogoutResponse)
    MergeFrom(*source);
  }
}

void C_G_LogoutResponse::MergeFrom(const C_G_LogoutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_G_LogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
}

void C_G_LogoutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_G_LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_G_LogoutResponse::CopyFrom(const C_G_LogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_G_LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_G_LogoutResponse::IsInitialized() const {
  return true;
}

void C_G_LogoutResponse::Swap(C_G_LogoutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_G_LogoutResponse::InternalSwap(C_G_LogoutResponse* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_G_LogoutResponse::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void C_W_ChatMessage::InitAsDefaultInstance() {
  ::message::_C_W_ChatMessage_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void C_W_ChatMessage::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_W_ChatMessage::kPacketHeadFieldNumber;
const int C_W_ChatMessage::kSenderFieldNumber;
const int C_W_ChatMessage::kRecverFieldNumber;
const int C_W_ChatMessage::kMessageTypeFieldNumber;
const int C_W_ChatMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_W_ChatMessage::C_W_ChatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsC_W_ChatMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.C_W_ChatMessage)
}
C_W_ChatMessage::C_W_ChatMessage(const C_W_ChatMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&sender_, &from.sender_,
    static_cast<size_t>(reinterpret_cast<char*>(&messagetype_) -
    reinterpret_cast<char*>(&sender_)) + sizeof(messagetype_));
  // @@protoc_insertion_point(copy_constructor:message.C_W_ChatMessage)
}

void C_W_ChatMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagetype_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(messagetype_));
  _cached_size_ = 0;
}

C_W_ChatMessage::~C_W_ChatMessage() {
  // @@protoc_insertion_point(destructor:message.C_W_ChatMessage)
  SharedDtor();
}

void C_W_ChatMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packethead_;
}

void C_W_ChatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_W_ChatMessage::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_W_ChatMessage& C_W_ChatMessage::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsC_W_ChatMessage();
  return *internal_default_instance();
}

C_W_ChatMessage* C_W_ChatMessage::New(::google::protobuf::Arena* arena) const {
  C_W_ChatMessage* n = new C_W_ChatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_W_ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.C_W_ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  ::memset(&sender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagetype_) -
      reinterpret_cast<char*>(&sender_)) + sizeof(messagetype_));
  _internal_metadata_.Clear();
}

bool C_W_ChatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.C_W_ChatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Sender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Recver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &recver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MessageType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messagetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Message = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.C_W_ChatMessage.Message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.C_W_ChatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.C_W_ChatMessage)
  return false;
#undef DO_
}

void C_W_ChatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.C_W_ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int64 Sender = 2;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sender(), output);
  }

  // int64 Recver = 3;
  if (this->recver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->recver(), output);
  }

  // int32 MessageType = 4;
  if (this->messagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->messagetype(), output);
  }

  // string Message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_W_ChatMessage.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.C_W_ChatMessage)
}

::google::protobuf::uint8* C_W_ChatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.C_W_ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int64 Sender = 2;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sender(), target);
  }

  // int64 Recver = 3;
  if (this->recver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->recver(), target);
  }

  // int32 MessageType = 4;
  if (this->messagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->messagetype(), target);
  }

  // string Message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.C_W_ChatMessage.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.C_W_ChatMessage)
  return target;
}

size_t C_W_ChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.C_W_ChatMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Message = 5;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int64 Sender = 2;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sender());
  }

  // int64 Recver = 3;
  if (this->recver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->recver());
  }

  // int32 MessageType = 4;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messagetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_W_ChatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.C_W_ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const C_W_ChatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_W_ChatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.C_W_ChatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.C_W_ChatMessage)
    MergeFrom(*source);
  }
}

void C_W_ChatMessage::MergeFrom(const C_W_ChatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.C_W_ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.recver() != 0) {
    set_recver(from.recver());
  }
  if (from.messagetype() != 0) {
    set_messagetype(from.messagetype());
  }
}

void C_W_ChatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.C_W_ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_W_ChatMessage::CopyFrom(const C_W_ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.C_W_ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_W_ChatMessage::IsInitialized() const {
  return true;
}

void C_W_ChatMessage::Swap(C_W_ChatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_W_ChatMessage::InternalSwap(C_W_ChatMessage* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(packethead_, other->packethead_);
  swap(sender_, other->sender_);
  swap(recver_, other->recver_);
  swap(messagetype_, other->messagetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_W_ChatMessage::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_ChatMessage::InitAsDefaultInstance() {
  ::message::_W_C_ChatMessage_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
void W_C_ChatMessage::clear_packethead() {
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_ChatMessage::kPacketHeadFieldNumber;
const int W_C_ChatMessage::kSenderFieldNumber;
const int W_C_ChatMessage::kSenderNameFieldNumber;
const int W_C_ChatMessage::kRecverFieldNumber;
const int W_C_ChatMessage::kRecverNameFieldNumber;
const int W_C_ChatMessage::kMessageTypeFieldNumber;
const int W_C_ChatMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_ChatMessage::W_C_ChatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsW_C_ChatMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_ChatMessage)
}
W_C_ChatMessage::W_C_ChatMessage(const W_C_ChatMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendername().size() > 0) {
    sendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendername_);
  }
  recvername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recvername().size() > 0) {
    recvername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvername_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&sender_, &from.sender_,
    static_cast<size_t>(reinterpret_cast<char*>(&messagetype_) -
    reinterpret_cast<char*>(&sender_)) + sizeof(messagetype_));
  // @@protoc_insertion_point(copy_constructor:message.W_C_ChatMessage)
}

void W_C_ChatMessage::SharedCtor() {
  sendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagetype_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(messagetype_));
  _cached_size_ = 0;
}

W_C_ChatMessage::~W_C_ChatMessage() {
  // @@protoc_insertion_point(destructor:message.W_C_ChatMessage)
  SharedDtor();
}

void W_C_ChatMessage::SharedDtor() {
  sendername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packethead_;
}

void W_C_ChatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_ChatMessage::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_ChatMessage& W_C_ChatMessage::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsW_C_ChatMessage();
  return *internal_default_instance();
}

W_C_ChatMessage* W_C_ChatMessage::New(::google::protobuf::Arena* arena) const {
  W_C_ChatMessage* n = new W_C_ChatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_ChatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && packethead_ != NULL) {
    delete packethead_;
  }
  packethead_ = NULL;
  ::memset(&sender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&messagetype_) -
      reinterpret_cast<char*>(&sender_)) + sizeof(messagetype_));
  _internal_metadata_.Clear();
}

bool W_C_ChatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_ChatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Sender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SenderName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendername().data(), static_cast<int>(this->sendername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.W_C_ChatMessage.SenderName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Recver = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &recver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RecverName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recvername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recvername().data(), static_cast<int>(this->recvername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.W_C_ChatMessage.RecverName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 MessageType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messagetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Message = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "message.W_C_ChatMessage.Message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_ChatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_ChatMessage)
  return false;
#undef DO_
}

void W_C_ChatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // int64 Sender = 2;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sender(), output);
  }

  // string SenderName = 3;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), static_cast<int>(this->sendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.W_C_ChatMessage.SenderName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sendername(), output);
  }

  // int64 Recver = 4;
  if (this->recver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->recver(), output);
  }

  // string RecverName = 5;
  if (this->recvername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recvername().data(), static_cast<int>(this->recvername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.W_C_ChatMessage.RecverName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->recvername(), output);
  }

  // int32 MessageType = 6;
  if (this->messagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->messagetype(), output);
  }

  // string Message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.W_C_ChatMessage.Message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_ChatMessage)
}

::google::protobuf::uint8* W_C_ChatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_ChatMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // int64 Sender = 2;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sender(), target);
  }

  // string SenderName = 3;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), static_cast<int>(this->sendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.W_C_ChatMessage.SenderName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sendername(), target);
  }

  // int64 Recver = 4;
  if (this->recver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->recver(), target);
  }

  // string RecverName = 5;
  if (this->recvername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recvername().data(), static_cast<int>(this->recvername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.W_C_ChatMessage.RecverName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->recvername(), target);
  }

  // int32 MessageType = 6;
  if (this->messagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->messagetype(), target);
  }

  // string Message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "message.W_C_ChatMessage.Message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_ChatMessage)
  return target;
}

size_t W_C_ChatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_ChatMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SenderName = 3;
  if (this->sendername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendername());
  }

  // string RecverName = 5;
  if (this->recvername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recvername());
  }

  // string Message = 7;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .message.Ipacket PacketHead = 1;
  if (this->has_packethead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  // int64 Sender = 2;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sender());
  }

  // int64 Recver = 4;
  if (this->recver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->recver());
  }

  // int32 MessageType = 6;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messagetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_ChatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_ChatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_ChatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_ChatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_ChatMessage)
    MergeFrom(*source);
  }
}

void W_C_ChatMessage::MergeFrom(const W_C_ChatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_ChatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sendername().size() > 0) {

    sendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendername_);
  }
  if (from.recvername().size() > 0) {

    recvername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvername_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_packethead()) {
    mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.recver() != 0) {
    set_recver(from.recver());
  }
  if (from.messagetype() != 0) {
    set_messagetype(from.messagetype());
  }
}

void W_C_ChatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_ChatMessage::CopyFrom(const W_C_ChatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_ChatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_ChatMessage::IsInitialized() const {
  return true;
}

void W_C_ChatMessage::Swap(W_C_ChatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_ChatMessage::InternalSwap(W_C_ChatMessage* other) {
  using std::swap;
  sendername_.Swap(&other->sendername_);
  recvername_.Swap(&other->recvername_);
  message_.Swap(&other->message_);
  swap(packethead_, other->packethead_);
  swap(sender_, other->sender_);
  swap(recver_, other->recver_);
  swap(messagetype_, other->messagetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_ChatMessage::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_Test::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_Test::kRecvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_Test::W_C_Test()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_client_2eproto::InitDefaultsW_C_Test();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_Test)
}
W_C_Test::W_C_Test(const W_C_Test& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recv_(from.recv_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:message.W_C_Test)
}

void W_C_Test::SharedCtor() {
  _cached_size_ = 0;
}

W_C_Test::~W_C_Test() {
  // @@protoc_insertion_point(destructor:message.W_C_Test)
  SharedDtor();
}

void W_C_Test::SharedDtor() {
}

void W_C_Test::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_Test::descriptor() {
  ::protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_Test& W_C_Test::default_instance() {
  ::protobuf_client_2eproto::InitDefaultsW_C_Test();
  return *internal_default_instance();
}

W_C_Test* W_C_Test::New(::google::protobuf::Arena* arena) const {
  W_C_Test* n = new W_C_Test;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_Test::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_Test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recv_.Clear();
  _internal_metadata_.Clear();
}

bool W_C_Test::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_Test)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 Recv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_recv())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_recv())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_Test)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_Test)
  return false;
#undef DO_
}

void W_C_Test::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_Test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 Recv = 1;
  if (this->recv_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _recv_cached_byte_size_));
  }
  for (int i = 0, n = this->recv_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->recv(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_Test)
}

::google::protobuf::uint8* W_C_Test::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_Test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 Recv = 1;
  if (this->recv_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _recv_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->recv_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_Test)
  return target;
}

size_t W_C_Test::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_Test)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 Recv = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->recv_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _recv_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_Test::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_Test)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_Test* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_Test>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_Test)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_Test)
    MergeFrom(*source);
  }
}

void W_C_Test::MergeFrom(const W_C_Test& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_Test)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recv_.MergeFrom(from.recv_);
}

void W_C_Test::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_Test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_Test::CopyFrom(const W_C_Test& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_Test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_Test::IsInitialized() const {
  return true;
}

void W_C_Test::Swap(W_C_Test* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_Test::InternalSwap(W_C_Test* other) {
  using std::swap;
  recv_.InternalSwap(&other->recv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_Test::GetMetadata() const {
  protobuf_client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message

// @@protoc_insertion_point(global_scope)
