// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPoint3FImpl();
void InitDefaultsPoint3F();
void InitDefaultsC_W_Move_Move_NormalImpl();
void InitDefaultsC_W_Move_Move_Normal();
void InitDefaultsC_W_Move_Move_PathImpl();
void InitDefaultsC_W_Move_Move_Path();
void InitDefaultsC_W_Move_Move_BlinkImpl();
void InitDefaultsC_W_Move_Move_Blink();
void InitDefaultsC_W_Move_Move_JumpImpl();
void InitDefaultsC_W_Move_Move_Jump();
void InitDefaultsC_W_Move_Move_LineImpl();
void InitDefaultsC_W_Move_Move_Line();
void InitDefaultsC_W_Move_MoveImpl();
void InitDefaultsC_W_Move_Move();
void InitDefaultsC_W_MoveImpl();
void InitDefaultsC_W_Move();
void InitDefaultsW_C_LoginMapImpl();
void InitDefaultsW_C_LoginMap();
void InitDefaultsW_C_MoveImpl();
void InitDefaultsW_C_Move();
void InitDefaultsW_C_ADD_SIMOBJImpl();
void InitDefaultsW_C_ADD_SIMOBJ();
void InitDefaultsC_W_LoginCopyMapImpl();
void InitDefaultsC_W_LoginCopyMap();
inline void InitDefaults() {
  InitDefaultsPoint3F();
  InitDefaultsC_W_Move_Move_Normal();
  InitDefaultsC_W_Move_Move_Path();
  InitDefaultsC_W_Move_Move_Blink();
  InitDefaultsC_W_Move_Move_Jump();
  InitDefaultsC_W_Move_Move_Line();
  InitDefaultsC_W_Move_Move();
  InitDefaultsC_W_Move();
  InitDefaultsW_C_LoginMap();
  InitDefaultsW_C_Move();
  InitDefaultsW_C_ADD_SIMOBJ();
  InitDefaultsC_W_LoginCopyMap();
}
}  // namespace protobuf_game_2eproto
namespace message {
class C_W_LoginCopyMap;
class C_W_LoginCopyMapDefaultTypeInternal;
extern C_W_LoginCopyMapDefaultTypeInternal _C_W_LoginCopyMap_default_instance_;
class C_W_Move;
class C_W_MoveDefaultTypeInternal;
extern C_W_MoveDefaultTypeInternal _C_W_Move_default_instance_;
class C_W_Move_Move;
class C_W_Move_MoveDefaultTypeInternal;
extern C_W_Move_MoveDefaultTypeInternal _C_W_Move_Move_default_instance_;
class C_W_Move_Move_Blink;
class C_W_Move_Move_BlinkDefaultTypeInternal;
extern C_W_Move_Move_BlinkDefaultTypeInternal _C_W_Move_Move_Blink_default_instance_;
class C_W_Move_Move_Jump;
class C_W_Move_Move_JumpDefaultTypeInternal;
extern C_W_Move_Move_JumpDefaultTypeInternal _C_W_Move_Move_Jump_default_instance_;
class C_W_Move_Move_Line;
class C_W_Move_Move_LineDefaultTypeInternal;
extern C_W_Move_Move_LineDefaultTypeInternal _C_W_Move_Move_Line_default_instance_;
class C_W_Move_Move_Normal;
class C_W_Move_Move_NormalDefaultTypeInternal;
extern C_W_Move_Move_NormalDefaultTypeInternal _C_W_Move_Move_Normal_default_instance_;
class C_W_Move_Move_Path;
class C_W_Move_Move_PathDefaultTypeInternal;
extern C_W_Move_Move_PathDefaultTypeInternal _C_W_Move_Move_Path_default_instance_;
class Point3F;
class Point3FDefaultTypeInternal;
extern Point3FDefaultTypeInternal _Point3F_default_instance_;
class W_C_ADD_SIMOBJ;
class W_C_ADD_SIMOBJDefaultTypeInternal;
extern W_C_ADD_SIMOBJDefaultTypeInternal _W_C_ADD_SIMOBJ_default_instance_;
class W_C_LoginMap;
class W_C_LoginMapDefaultTypeInternal;
extern W_C_LoginMapDefaultTypeInternal _W_C_LoginMap_default_instance_;
class W_C_Move;
class W_C_MoveDefaultTypeInternal;
extern W_C_MoveDefaultTypeInternal _W_C_Move_default_instance_;
}  // namespace message
namespace message {

// ===================================================================

class Point3F : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Point3F) */ {
 public:
  Point3F();
  virtual ~Point3F();

  Point3F(const Point3F& from);

  inline Point3F& operator=(const Point3F& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3F(Point3F&& from) noexcept
    : Point3F() {
    *this = ::std::move(from);
  }

  inline Point3F& operator=(Point3F&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3F& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point3F* internal_default_instance() {
    return reinterpret_cast<const Point3F*>(
               &_Point3F_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Point3F* other);
  friend void swap(Point3F& a, Point3F& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3F* New() const PROTOBUF_FINAL { return New(NULL); }

  Point3F* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3F& from);
  void MergeFrom(const Point3F& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3F* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float Z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:message.Point3F)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsPoint3FImpl();
};
// -------------------------------------------------------------------

class C_W_Move_Move_Normal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Move.Move.Normal) */ {
 public:
  C_W_Move_Move_Normal();
  virtual ~C_W_Move_Move_Normal();

  C_W_Move_Move_Normal(const C_W_Move_Move_Normal& from);

  inline C_W_Move_Move_Normal& operator=(const C_W_Move_Move_Normal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Move_Move_Normal(C_W_Move_Move_Normal&& from) noexcept
    : C_W_Move_Move_Normal() {
    *this = ::std::move(from);
  }

  inline C_W_Move_Move_Normal& operator=(C_W_Move_Move_Normal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Move_Move_Normal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Move_Move_Normal* internal_default_instance() {
    return reinterpret_cast<const C_W_Move_Move_Normal*>(
               &_C_W_Move_Move_Normal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(C_W_Move_Move_Normal* other);
  friend void swap(C_W_Move_Move_Normal& a, C_W_Move_Move_Normal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Move_Move_Normal* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Move_Move_Normal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Move_Move_Normal& from);
  void MergeFrom(const C_W_Move_Move_Normal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Move_Move_Normal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Point3F Pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // float Yaw = 2;
  void clear_yaw();
  static const int kYawFieldNumber = 2;
  float yaw() const;
  void set_yaw(float value);

  // float Duration = 3;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:message.C_W_Move.Move.Normal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Point3F* pos_;
  float yaw_;
  float duration_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_NormalImpl();
};
// -------------------------------------------------------------------

class C_W_Move_Move_Path : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Move.Move.Path) */ {
 public:
  C_W_Move_Move_Path();
  virtual ~C_W_Move_Move_Path();

  C_W_Move_Move_Path(const C_W_Move_Move_Path& from);

  inline C_W_Move_Move_Path& operator=(const C_W_Move_Move_Path& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Move_Move_Path(C_W_Move_Move_Path&& from) noexcept
    : C_W_Move_Move_Path() {
    *this = ::std::move(from);
  }

  inline C_W_Move_Move_Path& operator=(C_W_Move_Move_Path&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Move_Move_Path& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Move_Move_Path* internal_default_instance() {
    return reinterpret_cast<const C_W_Move_Move_Path*>(
               &_C_W_Move_Move_Path_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(C_W_Move_Move_Path* other);
  friend void swap(C_W_Move_Move_Path& a, C_W_Move_Move_Path& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Move_Move_Path* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Move_Move_Path* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Move_Move_Path& from);
  void MergeFrom(const C_W_Move_Move_Path& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Move_Move_Path* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 PathId = 1;
  void clear_pathid();
  static const int kPathIdFieldNumber = 1;
  ::google::protobuf::int32 pathid() const;
  void set_pathid(::google::protobuf::int32 value);

  // int32 TimePos = 2;
  void clear_timepos();
  static const int kTimePosFieldNumber = 2;
  ::google::protobuf::int32 timepos() const;
  void set_timepos(::google::protobuf::int32 value);

  // int32 MountId = 3;
  void clear_mountid();
  static const int kMountIdFieldNumber = 3;
  ::google::protobuf::int32 mountid() const;
  void set_mountid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_Move.Move.Path)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 pathid_;
  ::google::protobuf::int32 timepos_;
  ::google::protobuf::int32 mountid_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_PathImpl();
};
// -------------------------------------------------------------------

class C_W_Move_Move_Blink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Move.Move.Blink) */ {
 public:
  C_W_Move_Move_Blink();
  virtual ~C_W_Move_Move_Blink();

  C_W_Move_Move_Blink(const C_W_Move_Move_Blink& from);

  inline C_W_Move_Move_Blink& operator=(const C_W_Move_Move_Blink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Move_Move_Blink(C_W_Move_Move_Blink&& from) noexcept
    : C_W_Move_Move_Blink() {
    *this = ::std::move(from);
  }

  inline C_W_Move_Move_Blink& operator=(C_W_Move_Move_Blink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Move_Move_Blink& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Move_Move_Blink* internal_default_instance() {
    return reinterpret_cast<const C_W_Move_Move_Blink*>(
               &_C_W_Move_Move_Blink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(C_W_Move_Move_Blink* other);
  friend void swap(C_W_Move_Move_Blink& a, C_W_Move_Move_Blink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Move_Move_Blink* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Move_Move_Blink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Move_Move_Blink& from);
  void MergeFrom(const C_W_Move_Move_Blink& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Move_Move_Blink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Point3F Pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // .message.Point3F RPos = 2;
  bool has_rpos() const;
  void clear_rpos();
  static const int kRPosFieldNumber = 2;
  const ::message::Point3F& rpos() const;
  ::message::Point3F* release_rpos();
  ::message::Point3F* mutable_rpos();
  void set_allocated_rpos(::message::Point3F* rpos);

  // @@protoc_insertion_point(class_scope:message.C_W_Move.Move.Blink)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Point3F* pos_;
  ::message::Point3F* rpos_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_BlinkImpl();
};
// -------------------------------------------------------------------

class C_W_Move_Move_Jump : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Move.Move.Jump) */ {
 public:
  C_W_Move_Move_Jump();
  virtual ~C_W_Move_Move_Jump();

  C_W_Move_Move_Jump(const C_W_Move_Move_Jump& from);

  inline C_W_Move_Move_Jump& operator=(const C_W_Move_Move_Jump& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Move_Move_Jump(C_W_Move_Move_Jump&& from) noexcept
    : C_W_Move_Move_Jump() {
    *this = ::std::move(from);
  }

  inline C_W_Move_Move_Jump& operator=(C_W_Move_Move_Jump&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Move_Move_Jump& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Move_Move_Jump* internal_default_instance() {
    return reinterpret_cast<const C_W_Move_Move_Jump*>(
               &_C_W_Move_Move_Jump_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(C_W_Move_Move_Jump* other);
  friend void swap(C_W_Move_Move_Jump& a, C_W_Move_Move_Jump& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Move_Move_Jump* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Move_Move_Jump* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Move_Move_Jump& from);
  void MergeFrom(const C_W_Move_Move_Jump& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Move_Move_Jump* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Point3F BPos = 1;
  bool has_bpos() const;
  void clear_bpos();
  static const int kBPosFieldNumber = 1;
  const ::message::Point3F& bpos() const;
  ::message::Point3F* release_bpos();
  ::message::Point3F* mutable_bpos();
  void set_allocated_bpos(::message::Point3F* bpos);

  // .message.Point3F EPos = 2;
  bool has_epos() const;
  void clear_epos();
  static const int kEPosFieldNumber = 2;
  const ::message::Point3F& epos() const;
  ::message::Point3F* release_epos();
  ::message::Point3F* mutable_epos();
  void set_allocated_epos(::message::Point3F* epos);

  // int32 Duration = 3;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // int32 TimePos = 4;
  void clear_timepos();
  static const int kTimePosFieldNumber = 4;
  ::google::protobuf::int32 timepos() const;
  void set_timepos(::google::protobuf::int32 value);

  // int32 UpExDur = 5;
  void clear_upexdur();
  static const int kUpExDurFieldNumber = 5;
  ::google::protobuf::int32 upexdur() const;
  void set_upexdur(::google::protobuf::int32 value);

  // int32 DownExDur = 6;
  void clear_downexdur();
  static const int kDownExDurFieldNumber = 6;
  ::google::protobuf::int32 downexdur() const;
  void set_downexdur(::google::protobuf::int32 value);

  // int32 A = 7;
  void clear_a();
  static const int kAFieldNumber = 7;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // int32 B = 8;
  void clear_b();
  static const int kBFieldNumber = 8;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_Move.Move.Jump)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Point3F* bpos_;
  ::message::Point3F* epos_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 timepos_;
  ::google::protobuf::int32 upexdur_;
  ::google::protobuf::int32 downexdur_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_JumpImpl();
};
// -------------------------------------------------------------------

class C_W_Move_Move_Line : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Move.Move.Line) */ {
 public:
  C_W_Move_Move_Line();
  virtual ~C_W_Move_Move_Line();

  C_W_Move_Move_Line(const C_W_Move_Move_Line& from);

  inline C_W_Move_Move_Line& operator=(const C_W_Move_Move_Line& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Move_Move_Line(C_W_Move_Move_Line&& from) noexcept
    : C_W_Move_Move_Line() {
    *this = ::std::move(from);
  }

  inline C_W_Move_Move_Line& operator=(C_W_Move_Move_Line&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Move_Move_Line& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Move_Move_Line* internal_default_instance() {
    return reinterpret_cast<const C_W_Move_Move_Line*>(
               &_C_W_Move_Move_Line_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(C_W_Move_Move_Line* other);
  friend void swap(C_W_Move_Move_Line& a, C_W_Move_Move_Line& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Move_Move_Line* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Move_Move_Line* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Move_Move_Line& from);
  void MergeFrom(const C_W_Move_Move_Line& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Move_Move_Line* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Point3F BPos = 1;
  bool has_bpos() const;
  void clear_bpos();
  static const int kBPosFieldNumber = 1;
  const ::message::Point3F& bpos() const;
  ::message::Point3F* release_bpos();
  ::message::Point3F* mutable_bpos();
  void set_allocated_bpos(::message::Point3F* bpos);

  // .message.Point3F EPos = 2;
  bool has_epos() const;
  void clear_epos();
  static const int kEPosFieldNumber = 2;
  const ::message::Point3F& epos() const;
  ::message::Point3F* release_epos();
  ::message::Point3F* mutable_epos();
  void set_allocated_epos(::message::Point3F* epos);

  // int32 Duration = 3;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // int32 TimePos = 4;
  void clear_timepos();
  static const int kTimePosFieldNumber = 4;
  ::google::protobuf::int32 timepos() const;
  void set_timepos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_Move.Move.Line)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Point3F* bpos_;
  ::message::Point3F* epos_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 timepos_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_Move_Move_LineImpl();
};
// -------------------------------------------------------------------

class C_W_Move_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Move.Move) */ {
 public:
  C_W_Move_Move();
  virtual ~C_W_Move_Move();

  C_W_Move_Move(const C_W_Move_Move& from);

  inline C_W_Move_Move& operator=(const C_W_Move_Move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Move_Move(C_W_Move_Move&& from) noexcept
    : C_W_Move_Move() {
    *this = ::std::move(from);
  }

  inline C_W_Move_Move& operator=(C_W_Move_Move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Move_Move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Move_Move* internal_default_instance() {
    return reinterpret_cast<const C_W_Move_Move*>(
               &_C_W_Move_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(C_W_Move_Move* other);
  friend void swap(C_W_Move_Move& a, C_W_Move_Move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Move_Move* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Move_Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Move_Move& from);
  void MergeFrom(const C_W_Move_Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Move_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef C_W_Move_Move_Normal Normal;
  typedef C_W_Move_Move_Path Path;
  typedef C_W_Move_Move_Blink Blink;
  typedef C_W_Move_Move_Jump Jump;
  typedef C_W_Move_Move_Line Line;

  // accessors -------------------------------------------------------

  // .message.C_W_Move.Move.Normal normal = 2;
  bool has_normal() const;
  void clear_normal();
  static const int kNormalFieldNumber = 2;
  const ::message::C_W_Move_Move_Normal& normal() const;
  ::message::C_W_Move_Move_Normal* release_normal();
  ::message::C_W_Move_Move_Normal* mutable_normal();
  void set_allocated_normal(::message::C_W_Move_Move_Normal* normal);

  // .message.C_W_Move.Move.Path path = 3;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 3;
  const ::message::C_W_Move_Move_Path& path() const;
  ::message::C_W_Move_Move_Path* release_path();
  ::message::C_W_Move_Move_Path* mutable_path();
  void set_allocated_path(::message::C_W_Move_Move_Path* path);

  // .message.C_W_Move.Move.Blink link = 4;
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 4;
  const ::message::C_W_Move_Move_Blink& link() const;
  ::message::C_W_Move_Move_Blink* release_link();
  ::message::C_W_Move_Move_Blink* mutable_link();
  void set_allocated_link(::message::C_W_Move_Move_Blink* link);

  // .message.C_W_Move.Move.Jump jump = 5;
  bool has_jump() const;
  void clear_jump();
  static const int kJumpFieldNumber = 5;
  const ::message::C_W_Move_Move_Jump& jump() const;
  ::message::C_W_Move_Move_Jump* release_jump();
  ::message::C_W_Move_Move_Jump* mutable_jump();
  void set_allocated_jump(::message::C_W_Move_Move_Jump* jump);

  // .message.C_W_Move.Move.Line line = 6;
  bool has_line() const;
  void clear_line();
  static const int kLineFieldNumber = 6;
  const ::message::C_W_Move_Move_Line& line() const;
  ::message::C_W_Move_Move_Line* release_line();
  ::message::C_W_Move_Move_Line* mutable_line();
  void set_allocated_line(::message::C_W_Move_Move_Line* line);

  // int32 Mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_Move.Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::C_W_Move_Move_Normal* normal_;
  ::message::C_W_Move_Move_Path* path_;
  ::message::C_W_Move_Move_Blink* link_;
  ::message::C_W_Move_Move_Jump* jump_;
  ::message::C_W_Move_Move_Line* line_;
  ::google::protobuf::int32 mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_Move_MoveImpl();
};
// -------------------------------------------------------------------

class C_W_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Move) */ {
 public:
  C_W_Move();
  virtual ~C_W_Move();

  C_W_Move(const C_W_Move& from);

  inline C_W_Move& operator=(const C_W_Move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Move(C_W_Move&& from) noexcept
    : C_W_Move() {
    *this = ::std::move(from);
  }

  inline C_W_Move& operator=(C_W_Move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Move* internal_default_instance() {
    return reinterpret_cast<const C_W_Move*>(
               &_C_W_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(C_W_Move* other);
  friend void swap(C_W_Move& a, C_W_Move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Move* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Move& from);
  void MergeFrom(const C_W_Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef C_W_Move_Move Move;

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // .message.C_W_Move.Move move = 2;
  bool has_move() const;
  void clear_move();
  static const int kMoveFieldNumber = 2;
  const ::message::C_W_Move_Move& move() const;
  ::message::C_W_Move_Move* release_move();
  ::message::C_W_Move_Move* mutable_move();
  void set_allocated_move(::message::C_W_Move_Move* move);

  // @@protoc_insertion_point(class_scope:message.C_W_Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::message::C_W_Move_Move* move_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_MoveImpl();
};
// -------------------------------------------------------------------

class W_C_LoginMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_LoginMap) */ {
 public:
  W_C_LoginMap();
  virtual ~W_C_LoginMap();

  W_C_LoginMap(const W_C_LoginMap& from);

  inline W_C_LoginMap& operator=(const W_C_LoginMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_LoginMap(W_C_LoginMap&& from) noexcept
    : W_C_LoginMap() {
    *this = ::std::move(from);
  }

  inline W_C_LoginMap& operator=(W_C_LoginMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_LoginMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_LoginMap* internal_default_instance() {
    return reinterpret_cast<const W_C_LoginMap*>(
               &_W_C_LoginMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(W_C_LoginMap* other);
  friend void swap(W_C_LoginMap& a, W_C_LoginMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_LoginMap* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_LoginMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_LoginMap& from);
  void MergeFrom(const W_C_LoginMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_LoginMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // .message.Point3F Pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // int64 Id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // float Rotation = 4;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  float rotation() const;
  void set_rotation(float value);

  // @@protoc_insertion_point(class_scope:message.W_C_LoginMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::message::Point3F* pos_;
  ::google::protobuf::int64 id_;
  float rotation_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsW_C_LoginMapImpl();
};
// -------------------------------------------------------------------

class W_C_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_Move) */ {
 public:
  W_C_Move();
  virtual ~W_C_Move();

  W_C_Move(const W_C_Move& from);

  inline W_C_Move& operator=(const W_C_Move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_Move(W_C_Move&& from) noexcept
    : W_C_Move() {
    *this = ::std::move(from);
  }

  inline W_C_Move& operator=(W_C_Move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_Move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_Move* internal_default_instance() {
    return reinterpret_cast<const W_C_Move*>(
               &_W_C_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(W_C_Move* other);
  friend void swap(W_C_Move& a, W_C_Move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_Move* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_Move& from);
  void MergeFrom(const W_C_Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // .message.Point3F Pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // int64 Id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // float Rotation = 4;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  float rotation() const;
  void set_rotation(float value);

  // @@protoc_insertion_point(class_scope:message.W_C_Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::message::Point3F* pos_;
  ::google::protobuf::int64 id_;
  float rotation_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsW_C_MoveImpl();
};
// -------------------------------------------------------------------

class W_C_ADD_SIMOBJ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_ADD_SIMOBJ) */ {
 public:
  W_C_ADD_SIMOBJ();
  virtual ~W_C_ADD_SIMOBJ();

  W_C_ADD_SIMOBJ(const W_C_ADD_SIMOBJ& from);

  inline W_C_ADD_SIMOBJ& operator=(const W_C_ADD_SIMOBJ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_ADD_SIMOBJ(W_C_ADD_SIMOBJ&& from) noexcept
    : W_C_ADD_SIMOBJ() {
    *this = ::std::move(from);
  }

  inline W_C_ADD_SIMOBJ& operator=(W_C_ADD_SIMOBJ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_ADD_SIMOBJ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_ADD_SIMOBJ* internal_default_instance() {
    return reinterpret_cast<const W_C_ADD_SIMOBJ*>(
               &_W_C_ADD_SIMOBJ_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(W_C_ADD_SIMOBJ* other);
  friend void swap(W_C_ADD_SIMOBJ& a, W_C_ADD_SIMOBJ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_ADD_SIMOBJ* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_ADD_SIMOBJ* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_ADD_SIMOBJ& from);
  void MergeFrom(const W_C_ADD_SIMOBJ& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_ADD_SIMOBJ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // .message.Point3F Pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // int64 Id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // float Rotation = 4;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  float rotation() const;
  void set_rotation(float value);

  // @@protoc_insertion_point(class_scope:message.W_C_ADD_SIMOBJ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::message::Point3F* pos_;
  ::google::protobuf::int64 id_;
  float rotation_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsW_C_ADD_SIMOBJImpl();
};
// -------------------------------------------------------------------

class C_W_LoginCopyMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_LoginCopyMap) */ {
 public:
  C_W_LoginCopyMap();
  virtual ~C_W_LoginCopyMap();

  C_W_LoginCopyMap(const C_W_LoginCopyMap& from);

  inline C_W_LoginCopyMap& operator=(const C_W_LoginCopyMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_LoginCopyMap(C_W_LoginCopyMap&& from) noexcept
    : C_W_LoginCopyMap() {
    *this = ::std::move(from);
  }

  inline C_W_LoginCopyMap& operator=(C_W_LoginCopyMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_LoginCopyMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_LoginCopyMap* internal_default_instance() {
    return reinterpret_cast<const C_W_LoginCopyMap*>(
               &_C_W_LoginCopyMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(C_W_LoginCopyMap* other);
  friend void swap(C_W_LoginCopyMap& a, C_W_LoginCopyMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_LoginCopyMap* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_LoginCopyMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_LoginCopyMap& from);
  void MergeFrom(const C_W_LoginCopyMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_LoginCopyMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int32 DataId = 2;
  void clear_dataid();
  static const int kDataIdFieldNumber = 2;
  ::google::protobuf::int32 dataid() const;
  void set_dataid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_LoginCopyMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 dataid_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_W_LoginCopyMapImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point3F

// float X = 1;
inline void Point3F::clear_x() {
  x_ = 0;
}
inline float Point3F::x() const {
  // @@protoc_insertion_point(field_get:message.Point3F.X)
  return x_;
}
inline void Point3F::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:message.Point3F.X)
}

// float Y = 2;
inline void Point3F::clear_y() {
  y_ = 0;
}
inline float Point3F::y() const {
  // @@protoc_insertion_point(field_get:message.Point3F.Y)
  return y_;
}
inline void Point3F::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:message.Point3F.Y)
}

// float Z = 3;
inline void Point3F::clear_z() {
  z_ = 0;
}
inline float Point3F::z() const {
  // @@protoc_insertion_point(field_get:message.Point3F.Z)
  return z_;
}
inline void Point3F::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:message.Point3F.Z)
}

// -------------------------------------------------------------------

// C_W_Move_Move_Normal

// .message.Point3F Pos = 1;
inline bool C_W_Move_Move_Normal::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void C_W_Move_Move_Normal::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& C_W_Move_Move_Normal::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Normal.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_W_Move_Move_Normal::release_pos() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.Normal.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_W_Move_Move_Normal::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.Normal.Pos)
  return pos_;
}
inline void C_W_Move_Move_Normal::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.Normal.Pos)
}

// float Yaw = 2;
inline void C_W_Move_Move_Normal::clear_yaw() {
  yaw_ = 0;
}
inline float C_W_Move_Move_Normal::yaw() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Normal.Yaw)
  return yaw_;
}
inline void C_W_Move_Move_Normal::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Normal.Yaw)
}

// float Duration = 3;
inline void C_W_Move_Move_Normal::clear_duration() {
  duration_ = 0;
}
inline float C_W_Move_Move_Normal::duration() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Normal.Duration)
  return duration_;
}
inline void C_W_Move_Move_Normal::set_duration(float value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Normal.Duration)
}

// -------------------------------------------------------------------

// C_W_Move_Move_Path

// int32 PathId = 1;
inline void C_W_Move_Move_Path::clear_pathid() {
  pathid_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Path::pathid() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Path.PathId)
  return pathid_;
}
inline void C_W_Move_Move_Path::set_pathid(::google::protobuf::int32 value) {
  
  pathid_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Path.PathId)
}

// int32 TimePos = 2;
inline void C_W_Move_Move_Path::clear_timepos() {
  timepos_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Path::timepos() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Path.TimePos)
  return timepos_;
}
inline void C_W_Move_Move_Path::set_timepos(::google::protobuf::int32 value) {
  
  timepos_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Path.TimePos)
}

// int32 MountId = 3;
inline void C_W_Move_Move_Path::clear_mountid() {
  mountid_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Path::mountid() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Path.MountId)
  return mountid_;
}
inline void C_W_Move_Move_Path::set_mountid(::google::protobuf::int32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Path.MountId)
}

// -------------------------------------------------------------------

// C_W_Move_Move_Blink

// .message.Point3F Pos = 1;
inline bool C_W_Move_Move_Blink::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void C_W_Move_Move_Blink::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& C_W_Move_Move_Blink::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Blink.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_W_Move_Move_Blink::release_pos() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.Blink.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_W_Move_Move_Blink::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.Blink.Pos)
  return pos_;
}
inline void C_W_Move_Move_Blink::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.Blink.Pos)
}

// .message.Point3F RPos = 2;
inline bool C_W_Move_Move_Blink::has_rpos() const {
  return this != internal_default_instance() && rpos_ != NULL;
}
inline void C_W_Move_Move_Blink::clear_rpos() {
  if (GetArenaNoVirtual() == NULL && rpos_ != NULL) {
    delete rpos_;
  }
  rpos_ = NULL;
}
inline const ::message::Point3F& C_W_Move_Move_Blink::rpos() const {
  const ::message::Point3F* p = rpos_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Blink.RPos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_W_Move_Move_Blink::release_rpos() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.Blink.RPos)
  
  ::message::Point3F* temp = rpos_;
  rpos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_W_Move_Move_Blink::mutable_rpos() {
  
  if (rpos_ == NULL) {
    rpos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.Blink.RPos)
  return rpos_;
}
inline void C_W_Move_Move_Blink::set_allocated_rpos(::message::Point3F* rpos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rpos_;
  }
  if (rpos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rpos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rpos, submessage_arena);
    }
    
  } else {
    
  }
  rpos_ = rpos;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.Blink.RPos)
}

// -------------------------------------------------------------------

// C_W_Move_Move_Jump

// .message.Point3F BPos = 1;
inline bool C_W_Move_Move_Jump::has_bpos() const {
  return this != internal_default_instance() && bpos_ != NULL;
}
inline void C_W_Move_Move_Jump::clear_bpos() {
  if (GetArenaNoVirtual() == NULL && bpos_ != NULL) {
    delete bpos_;
  }
  bpos_ = NULL;
}
inline const ::message::Point3F& C_W_Move_Move_Jump::bpos() const {
  const ::message::Point3F* p = bpos_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.BPos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_W_Move_Move_Jump::release_bpos() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.Jump.BPos)
  
  ::message::Point3F* temp = bpos_;
  bpos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_W_Move_Move_Jump::mutable_bpos() {
  
  if (bpos_ == NULL) {
    bpos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.Jump.BPos)
  return bpos_;
}
inline void C_W_Move_Move_Jump::set_allocated_bpos(::message::Point3F* bpos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bpos_;
  }
  if (bpos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpos, submessage_arena);
    }
    
  } else {
    
  }
  bpos_ = bpos;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.Jump.BPos)
}

// .message.Point3F EPos = 2;
inline bool C_W_Move_Move_Jump::has_epos() const {
  return this != internal_default_instance() && epos_ != NULL;
}
inline void C_W_Move_Move_Jump::clear_epos() {
  if (GetArenaNoVirtual() == NULL && epos_ != NULL) {
    delete epos_;
  }
  epos_ = NULL;
}
inline const ::message::Point3F& C_W_Move_Move_Jump::epos() const {
  const ::message::Point3F* p = epos_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.EPos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_W_Move_Move_Jump::release_epos() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.Jump.EPos)
  
  ::message::Point3F* temp = epos_;
  epos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_W_Move_Move_Jump::mutable_epos() {
  
  if (epos_ == NULL) {
    epos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.Jump.EPos)
  return epos_;
}
inline void C_W_Move_Move_Jump::set_allocated_epos(::message::Point3F* epos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete epos_;
  }
  if (epos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      epos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, epos, submessage_arena);
    }
    
  } else {
    
  }
  epos_ = epos;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.Jump.EPos)
}

// int32 Duration = 3;
inline void C_W_Move_Move_Jump::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Jump::duration() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.Duration)
  return duration_;
}
inline void C_W_Move_Move_Jump::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Jump.Duration)
}

// int32 TimePos = 4;
inline void C_W_Move_Move_Jump::clear_timepos() {
  timepos_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Jump::timepos() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.TimePos)
  return timepos_;
}
inline void C_W_Move_Move_Jump::set_timepos(::google::protobuf::int32 value) {
  
  timepos_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Jump.TimePos)
}

// int32 UpExDur = 5;
inline void C_W_Move_Move_Jump::clear_upexdur() {
  upexdur_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Jump::upexdur() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.UpExDur)
  return upexdur_;
}
inline void C_W_Move_Move_Jump::set_upexdur(::google::protobuf::int32 value) {
  
  upexdur_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Jump.UpExDur)
}

// int32 DownExDur = 6;
inline void C_W_Move_Move_Jump::clear_downexdur() {
  downexdur_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Jump::downexdur() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.DownExDur)
  return downexdur_;
}
inline void C_W_Move_Move_Jump::set_downexdur(::google::protobuf::int32 value) {
  
  downexdur_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Jump.DownExDur)
}

// int32 A = 7;
inline void C_W_Move_Move_Jump::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Jump::a() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.A)
  return a_;
}
inline void C_W_Move_Move_Jump::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Jump.A)
}

// int32 B = 8;
inline void C_W_Move_Move_Jump::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Jump::b() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Jump.B)
  return b_;
}
inline void C_W_Move_Move_Jump::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Jump.B)
}

// -------------------------------------------------------------------

// C_W_Move_Move_Line

// .message.Point3F BPos = 1;
inline bool C_W_Move_Move_Line::has_bpos() const {
  return this != internal_default_instance() && bpos_ != NULL;
}
inline void C_W_Move_Move_Line::clear_bpos() {
  if (GetArenaNoVirtual() == NULL && bpos_ != NULL) {
    delete bpos_;
  }
  bpos_ = NULL;
}
inline const ::message::Point3F& C_W_Move_Move_Line::bpos() const {
  const ::message::Point3F* p = bpos_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Line.BPos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_W_Move_Move_Line::release_bpos() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.Line.BPos)
  
  ::message::Point3F* temp = bpos_;
  bpos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_W_Move_Move_Line::mutable_bpos() {
  
  if (bpos_ == NULL) {
    bpos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.Line.BPos)
  return bpos_;
}
inline void C_W_Move_Move_Line::set_allocated_bpos(::message::Point3F* bpos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bpos_;
  }
  if (bpos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpos, submessage_arena);
    }
    
  } else {
    
  }
  bpos_ = bpos;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.Line.BPos)
}

// .message.Point3F EPos = 2;
inline bool C_W_Move_Move_Line::has_epos() const {
  return this != internal_default_instance() && epos_ != NULL;
}
inline void C_W_Move_Move_Line::clear_epos() {
  if (GetArenaNoVirtual() == NULL && epos_ != NULL) {
    delete epos_;
  }
  epos_ = NULL;
}
inline const ::message::Point3F& C_W_Move_Move_Line::epos() const {
  const ::message::Point3F* p = epos_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Line.EPos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_W_Move_Move_Line::release_epos() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.Line.EPos)
  
  ::message::Point3F* temp = epos_;
  epos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_W_Move_Move_Line::mutable_epos() {
  
  if (epos_ == NULL) {
    epos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.Line.EPos)
  return epos_;
}
inline void C_W_Move_Move_Line::set_allocated_epos(::message::Point3F* epos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete epos_;
  }
  if (epos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      epos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, epos, submessage_arena);
    }
    
  } else {
    
  }
  epos_ = epos;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.Line.EPos)
}

// int32 Duration = 3;
inline void C_W_Move_Move_Line::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Line::duration() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Line.Duration)
  return duration_;
}
inline void C_W_Move_Move_Line::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Line.Duration)
}

// int32 TimePos = 4;
inline void C_W_Move_Move_Line::clear_timepos() {
  timepos_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move_Line::timepos() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Line.TimePos)
  return timepos_;
}
inline void C_W_Move_Move_Line::set_timepos(::google::protobuf::int32 value) {
  
  timepos_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Line.TimePos)
}

// -------------------------------------------------------------------

// C_W_Move_Move

// int32 Mode = 1;
inline void C_W_Move_Move::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 C_W_Move_Move::mode() const {
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.Mode)
  return mode_;
}
inline void C_W_Move_Move::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Move.Move.Mode)
}

// .message.C_W_Move.Move.Normal normal = 2;
inline bool C_W_Move_Move::has_normal() const {
  return this != internal_default_instance() && normal_ != NULL;
}
inline void C_W_Move_Move::clear_normal() {
  if (GetArenaNoVirtual() == NULL && normal_ != NULL) {
    delete normal_;
  }
  normal_ = NULL;
}
inline const ::message::C_W_Move_Move_Normal& C_W_Move_Move::normal() const {
  const ::message::C_W_Move_Move_Normal* p = normal_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.normal)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_W_Move_Move_Normal*>(
      &::message::_C_W_Move_Move_Normal_default_instance_);
}
inline ::message::C_W_Move_Move_Normal* C_W_Move_Move::release_normal() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.normal)
  
  ::message::C_W_Move_Move_Normal* temp = normal_;
  normal_ = NULL;
  return temp;
}
inline ::message::C_W_Move_Move_Normal* C_W_Move_Move::mutable_normal() {
  
  if (normal_ == NULL) {
    normal_ = new ::message::C_W_Move_Move_Normal;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.normal)
  return normal_;
}
inline void C_W_Move_Move::set_allocated_normal(::message::C_W_Move_Move_Normal* normal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete normal_;
  }
  if (normal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      normal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    
  } else {
    
  }
  normal_ = normal;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.normal)
}

// .message.C_W_Move.Move.Path path = 3;
inline bool C_W_Move_Move::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void C_W_Move_Move::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
inline const ::message::C_W_Move_Move_Path& C_W_Move_Move::path() const {
  const ::message::C_W_Move_Move_Path* p = path_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.path)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_W_Move_Move_Path*>(
      &::message::_C_W_Move_Move_Path_default_instance_);
}
inline ::message::C_W_Move_Move_Path* C_W_Move_Move::release_path() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.path)
  
  ::message::C_W_Move_Move_Path* temp = path_;
  path_ = NULL;
  return temp;
}
inline ::message::C_W_Move_Move_Path* C_W_Move_Move::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::message::C_W_Move_Move_Path;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.path)
  return path_;
}
inline void C_W_Move_Move::set_allocated_path(::message::C_W_Move_Move_Path* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete path_;
  }
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.path)
}

// .message.C_W_Move.Move.Blink link = 4;
inline bool C_W_Move_Move::has_link() const {
  return this != internal_default_instance() && link_ != NULL;
}
inline void C_W_Move_Move::clear_link() {
  if (GetArenaNoVirtual() == NULL && link_ != NULL) {
    delete link_;
  }
  link_ = NULL;
}
inline const ::message::C_W_Move_Move_Blink& C_W_Move_Move::link() const {
  const ::message::C_W_Move_Move_Blink* p = link_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.link)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_W_Move_Move_Blink*>(
      &::message::_C_W_Move_Move_Blink_default_instance_);
}
inline ::message::C_W_Move_Move_Blink* C_W_Move_Move::release_link() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.link)
  
  ::message::C_W_Move_Move_Blink* temp = link_;
  link_ = NULL;
  return temp;
}
inline ::message::C_W_Move_Move_Blink* C_W_Move_Move::mutable_link() {
  
  if (link_ == NULL) {
    link_ = new ::message::C_W_Move_Move_Blink;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.link)
  return link_;
}
inline void C_W_Move_Move::set_allocated_link(::message::C_W_Move_Move_Blink* link) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete link_;
  }
  if (link) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      link = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, link, submessage_arena);
    }
    
  } else {
    
  }
  link_ = link;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.link)
}

// .message.C_W_Move.Move.Jump jump = 5;
inline bool C_W_Move_Move::has_jump() const {
  return this != internal_default_instance() && jump_ != NULL;
}
inline void C_W_Move_Move::clear_jump() {
  if (GetArenaNoVirtual() == NULL && jump_ != NULL) {
    delete jump_;
  }
  jump_ = NULL;
}
inline const ::message::C_W_Move_Move_Jump& C_W_Move_Move::jump() const {
  const ::message::C_W_Move_Move_Jump* p = jump_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.jump)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_W_Move_Move_Jump*>(
      &::message::_C_W_Move_Move_Jump_default_instance_);
}
inline ::message::C_W_Move_Move_Jump* C_W_Move_Move::release_jump() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.jump)
  
  ::message::C_W_Move_Move_Jump* temp = jump_;
  jump_ = NULL;
  return temp;
}
inline ::message::C_W_Move_Move_Jump* C_W_Move_Move::mutable_jump() {
  
  if (jump_ == NULL) {
    jump_ = new ::message::C_W_Move_Move_Jump;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.jump)
  return jump_;
}
inline void C_W_Move_Move::set_allocated_jump(::message::C_W_Move_Move_Jump* jump) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete jump_;
  }
  if (jump) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jump = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jump, submessage_arena);
    }
    
  } else {
    
  }
  jump_ = jump;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.jump)
}

// .message.C_W_Move.Move.Line line = 6;
inline bool C_W_Move_Move::has_line() const {
  return this != internal_default_instance() && line_ != NULL;
}
inline void C_W_Move_Move::clear_line() {
  if (GetArenaNoVirtual() == NULL && line_ != NULL) {
    delete line_;
  }
  line_ = NULL;
}
inline const ::message::C_W_Move_Move_Line& C_W_Move_Move::line() const {
  const ::message::C_W_Move_Move_Line* p = line_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.Move.line)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_W_Move_Move_Line*>(
      &::message::_C_W_Move_Move_Line_default_instance_);
}
inline ::message::C_W_Move_Move_Line* C_W_Move_Move::release_line() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.Move.line)
  
  ::message::C_W_Move_Move_Line* temp = line_;
  line_ = NULL;
  return temp;
}
inline ::message::C_W_Move_Move_Line* C_W_Move_Move::mutable_line() {
  
  if (line_ == NULL) {
    line_ = new ::message::C_W_Move_Move_Line;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.Move.line)
  return line_;
}
inline void C_W_Move_Move::set_allocated_line(::message::C_W_Move_Move_Line* line) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete line_;
  }
  if (line) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      line = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, line, submessage_arena);
    }
    
  } else {
    
  }
  line_ = line;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.Move.line)
}

// -------------------------------------------------------------------

// C_W_Move

// .message.Ipacket PacketHead = 1;
inline bool C_W_Move::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_W_Move::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_Move::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_Move::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.PacketHead)
  return packethead_;
}
inline void C_W_Move::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.PacketHead)
}

// .message.C_W_Move.Move move = 2;
inline bool C_W_Move::has_move() const {
  return this != internal_default_instance() && move_ != NULL;
}
inline void C_W_Move::clear_move() {
  if (GetArenaNoVirtual() == NULL && move_ != NULL) {
    delete move_;
  }
  move_ = NULL;
}
inline const ::message::C_W_Move_Move& C_W_Move::move() const {
  const ::message::C_W_Move_Move* p = move_;
  // @@protoc_insertion_point(field_get:message.C_W_Move.move)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_W_Move_Move*>(
      &::message::_C_W_Move_Move_default_instance_);
}
inline ::message::C_W_Move_Move* C_W_Move::release_move() {
  // @@protoc_insertion_point(field_release:message.C_W_Move.move)
  
  ::message::C_W_Move_Move* temp = move_;
  move_ = NULL;
  return temp;
}
inline ::message::C_W_Move_Move* C_W_Move::mutable_move() {
  
  if (move_ == NULL) {
    move_ = new ::message::C_W_Move_Move;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Move.move)
  return move_;
}
inline void C_W_Move::set_allocated_move(::message::C_W_Move_Move* move) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete move_;
  }
  if (move) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      move = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, move, submessage_arena);
    }
    
  } else {
    
  }
  move_ = move;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Move.move)
}

// -------------------------------------------------------------------

// W_C_LoginMap

// .message.Ipacket PacketHead = 1;
inline bool W_C_LoginMap::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& W_C_LoginMap::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_LoginMap.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_LoginMap::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_LoginMap.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_LoginMap::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_LoginMap.PacketHead)
  return packethead_;
}
inline void W_C_LoginMap::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_LoginMap.PacketHead)
}

// int64 Id = 2;
inline void W_C_LoginMap::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 W_C_LoginMap::id() const {
  // @@protoc_insertion_point(field_get:message.W_C_LoginMap.Id)
  return id_;
}
inline void W_C_LoginMap::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_LoginMap.Id)
}

// .message.Point3F Pos = 3;
inline bool W_C_LoginMap::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void W_C_LoginMap::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& W_C_LoginMap::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.W_C_LoginMap.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* W_C_LoginMap::release_pos() {
  // @@protoc_insertion_point(field_release:message.W_C_LoginMap.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* W_C_LoginMap::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_LoginMap.Pos)
  return pos_;
}
inline void W_C_LoginMap::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_LoginMap.Pos)
}

// float Rotation = 4;
inline void W_C_LoginMap::clear_rotation() {
  rotation_ = 0;
}
inline float W_C_LoginMap::rotation() const {
  // @@protoc_insertion_point(field_get:message.W_C_LoginMap.Rotation)
  return rotation_;
}
inline void W_C_LoginMap::set_rotation(float value) {
  
  rotation_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_LoginMap.Rotation)
}

// -------------------------------------------------------------------

// W_C_Move

// .message.Ipacket PacketHead = 1;
inline bool W_C_Move::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& W_C_Move::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_Move.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_Move::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_Move.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_Move::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_Move.PacketHead)
  return packethead_;
}
inline void W_C_Move::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_Move.PacketHead)
}

// int64 Id = 2;
inline void W_C_Move::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 W_C_Move::id() const {
  // @@protoc_insertion_point(field_get:message.W_C_Move.Id)
  return id_;
}
inline void W_C_Move::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_Move.Id)
}

// .message.Point3F Pos = 3;
inline bool W_C_Move::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void W_C_Move::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& W_C_Move::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.W_C_Move.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* W_C_Move::release_pos() {
  // @@protoc_insertion_point(field_release:message.W_C_Move.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* W_C_Move::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_Move.Pos)
  return pos_;
}
inline void W_C_Move::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_Move.Pos)
}

// float Rotation = 4;
inline void W_C_Move::clear_rotation() {
  rotation_ = 0;
}
inline float W_C_Move::rotation() const {
  // @@protoc_insertion_point(field_get:message.W_C_Move.Rotation)
  return rotation_;
}
inline void W_C_Move::set_rotation(float value) {
  
  rotation_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_Move.Rotation)
}

// -------------------------------------------------------------------

// W_C_ADD_SIMOBJ

// .message.Ipacket PacketHead = 1;
inline bool W_C_ADD_SIMOBJ::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& W_C_ADD_SIMOBJ::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_ADD_SIMOBJ.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_ADD_SIMOBJ::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_ADD_SIMOBJ.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_ADD_SIMOBJ::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_ADD_SIMOBJ.PacketHead)
  return packethead_;
}
inline void W_C_ADD_SIMOBJ::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_ADD_SIMOBJ.PacketHead)
}

// int64 Id = 2;
inline void W_C_ADD_SIMOBJ::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 W_C_ADD_SIMOBJ::id() const {
  // @@protoc_insertion_point(field_get:message.W_C_ADD_SIMOBJ.Id)
  return id_;
}
inline void W_C_ADD_SIMOBJ::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_ADD_SIMOBJ.Id)
}

// .message.Point3F Pos = 3;
inline bool W_C_ADD_SIMOBJ::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void W_C_ADD_SIMOBJ::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& W_C_ADD_SIMOBJ::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.W_C_ADD_SIMOBJ.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* W_C_ADD_SIMOBJ::release_pos() {
  // @@protoc_insertion_point(field_release:message.W_C_ADD_SIMOBJ.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* W_C_ADD_SIMOBJ::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_ADD_SIMOBJ.Pos)
  return pos_;
}
inline void W_C_ADD_SIMOBJ::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_ADD_SIMOBJ.Pos)
}

// float Rotation = 4;
inline void W_C_ADD_SIMOBJ::clear_rotation() {
  rotation_ = 0;
}
inline float W_C_ADD_SIMOBJ::rotation() const {
  // @@protoc_insertion_point(field_get:message.W_C_ADD_SIMOBJ.Rotation)
  return rotation_;
}
inline void W_C_ADD_SIMOBJ::set_rotation(float value) {
  
  rotation_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_ADD_SIMOBJ.Rotation)
}

// -------------------------------------------------------------------

// C_W_LoginCopyMap

// .message.Ipacket PacketHead = 1;
inline bool C_W_LoginCopyMap::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_W_LoginCopyMap::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_LoginCopyMap.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_LoginCopyMap::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_LoginCopyMap.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_LoginCopyMap::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_LoginCopyMap.PacketHead)
  return packethead_;
}
inline void C_W_LoginCopyMap::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_LoginCopyMap.PacketHead)
}

// int32 DataId = 2;
inline void C_W_LoginCopyMap::clear_dataid() {
  dataid_ = 0;
}
inline ::google::protobuf::int32 C_W_LoginCopyMap::dataid() const {
  // @@protoc_insertion_point(field_get:message.C_W_LoginCopyMap.DataId)
  return dataid_;
}
inline void C_W_LoginCopyMap::set_dataid(::google::protobuf::int32 value) {
  
  dataid_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_LoginCopyMap.DataId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
