// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPoint3FImpl();
void InitDefaultsPoint3F();
void InitDefaultsC_Z_Move_Move_NormalImpl();
void InitDefaultsC_Z_Move_Move_Normal();
void InitDefaultsC_Z_Move_MoveImpl();
void InitDefaultsC_Z_Move_Move();
void InitDefaultsC_Z_MoveImpl();
void InitDefaultsC_Z_Move();
void InitDefaultsC_Z_SkillImpl();
void InitDefaultsC_Z_Skill();
void InitDefaultsZ_C_LoginMapImpl();
void InitDefaultsZ_C_LoginMap();
void InitDefaultsZ_C_ENTITY_Entity_DataMask_NpcDataMaskImpl();
void InitDefaultsZ_C_ENTITY_Entity_DataMask_NpcDataMask();
void InitDefaultsZ_C_ENTITY_Entity_DataMask_SpellDataMaskImpl();
void InitDefaultsZ_C_ENTITY_Entity_DataMask_SpellDataMask();
void InitDefaultsZ_C_ENTITY_Entity_DataMaskImpl();
void InitDefaultsZ_C_ENTITY_Entity_DataMask();
void InitDefaultsZ_C_ENTITY_Entity_MoveMaskImpl();
void InitDefaultsZ_C_ENTITY_Entity_MoveMask();
void InitDefaultsZ_C_ENTITY_Entity_StatsMaskImpl();
void InitDefaultsZ_C_ENTITY_Entity_StatsMask();
void InitDefaultsZ_C_ENTITY_EntityImpl();
void InitDefaultsZ_C_ENTITY_Entity();
void InitDefaultsZ_C_ENTITYImpl();
void InitDefaultsZ_C_ENTITY();
void InitDefaultsC_Z_LoginCopyMapImpl();
void InitDefaultsC_Z_LoginCopyMap();
inline void InitDefaults() {
  InitDefaultsPoint3F();
  InitDefaultsC_Z_Move_Move_Normal();
  InitDefaultsC_Z_Move_Move();
  InitDefaultsC_Z_Move();
  InitDefaultsC_Z_Skill();
  InitDefaultsZ_C_LoginMap();
  InitDefaultsZ_C_ENTITY_Entity_DataMask_NpcDataMask();
  InitDefaultsZ_C_ENTITY_Entity_DataMask_SpellDataMask();
  InitDefaultsZ_C_ENTITY_Entity_DataMask();
  InitDefaultsZ_C_ENTITY_Entity_MoveMask();
  InitDefaultsZ_C_ENTITY_Entity_StatsMask();
  InitDefaultsZ_C_ENTITY_Entity();
  InitDefaultsZ_C_ENTITY();
  InitDefaultsC_Z_LoginCopyMap();
}
}  // namespace protobuf_game_2eproto
namespace message {
class C_Z_LoginCopyMap;
class C_Z_LoginCopyMapDefaultTypeInternal;
extern C_Z_LoginCopyMapDefaultTypeInternal _C_Z_LoginCopyMap_default_instance_;
class C_Z_Move;
class C_Z_MoveDefaultTypeInternal;
extern C_Z_MoveDefaultTypeInternal _C_Z_Move_default_instance_;
class C_Z_Move_Move;
class C_Z_Move_MoveDefaultTypeInternal;
extern C_Z_Move_MoveDefaultTypeInternal _C_Z_Move_Move_default_instance_;
class C_Z_Move_Move_Normal;
class C_Z_Move_Move_NormalDefaultTypeInternal;
extern C_Z_Move_Move_NormalDefaultTypeInternal _C_Z_Move_Move_Normal_default_instance_;
class C_Z_Skill;
class C_Z_SkillDefaultTypeInternal;
extern C_Z_SkillDefaultTypeInternal _C_Z_Skill_default_instance_;
class Point3F;
class Point3FDefaultTypeInternal;
extern Point3FDefaultTypeInternal _Point3F_default_instance_;
class Z_C_ENTITY;
class Z_C_ENTITYDefaultTypeInternal;
extern Z_C_ENTITYDefaultTypeInternal _Z_C_ENTITY_default_instance_;
class Z_C_ENTITY_Entity;
class Z_C_ENTITY_EntityDefaultTypeInternal;
extern Z_C_ENTITY_EntityDefaultTypeInternal _Z_C_ENTITY_Entity_default_instance_;
class Z_C_ENTITY_Entity_DataMask;
class Z_C_ENTITY_Entity_DataMaskDefaultTypeInternal;
extern Z_C_ENTITY_Entity_DataMaskDefaultTypeInternal _Z_C_ENTITY_Entity_DataMask_default_instance_;
class Z_C_ENTITY_Entity_DataMask_NpcDataMask;
class Z_C_ENTITY_Entity_DataMask_NpcDataMaskDefaultTypeInternal;
extern Z_C_ENTITY_Entity_DataMask_NpcDataMaskDefaultTypeInternal _Z_C_ENTITY_Entity_DataMask_NpcDataMask_default_instance_;
class Z_C_ENTITY_Entity_DataMask_SpellDataMask;
class Z_C_ENTITY_Entity_DataMask_SpellDataMaskDefaultTypeInternal;
extern Z_C_ENTITY_Entity_DataMask_SpellDataMaskDefaultTypeInternal _Z_C_ENTITY_Entity_DataMask_SpellDataMask_default_instance_;
class Z_C_ENTITY_Entity_MoveMask;
class Z_C_ENTITY_Entity_MoveMaskDefaultTypeInternal;
extern Z_C_ENTITY_Entity_MoveMaskDefaultTypeInternal _Z_C_ENTITY_Entity_MoveMask_default_instance_;
class Z_C_ENTITY_Entity_StatsMask;
class Z_C_ENTITY_Entity_StatsMaskDefaultTypeInternal;
extern Z_C_ENTITY_Entity_StatsMaskDefaultTypeInternal _Z_C_ENTITY_Entity_StatsMask_default_instance_;
class Z_C_LoginMap;
class Z_C_LoginMapDefaultTypeInternal;
extern Z_C_LoginMapDefaultTypeInternal _Z_C_LoginMap_default_instance_;
}  // namespace message
namespace message {

// ===================================================================

class Point3F : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Point3F) */ {
 public:
  Point3F();
  virtual ~Point3F();

  Point3F(const Point3F& from);

  inline Point3F& operator=(const Point3F& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3F(Point3F&& from) noexcept
    : Point3F() {
    *this = ::std::move(from);
  }

  inline Point3F& operator=(Point3F&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3F& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point3F* internal_default_instance() {
    return reinterpret_cast<const Point3F*>(
               &_Point3F_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Point3F* other);
  friend void swap(Point3F& a, Point3F& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3F* New() const PROTOBUF_FINAL { return New(NULL); }

  Point3F* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3F& from);
  void MergeFrom(const Point3F& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3F* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float X = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float Y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float Z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:message.Point3F)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsPoint3FImpl();
};
// -------------------------------------------------------------------

class C_Z_Move_Move_Normal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_Z_Move.Move.Normal) */ {
 public:
  C_Z_Move_Move_Normal();
  virtual ~C_Z_Move_Move_Normal();

  C_Z_Move_Move_Normal(const C_Z_Move_Move_Normal& from);

  inline C_Z_Move_Move_Normal& operator=(const C_Z_Move_Move_Normal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_Z_Move_Move_Normal(C_Z_Move_Move_Normal&& from) noexcept
    : C_Z_Move_Move_Normal() {
    *this = ::std::move(from);
  }

  inline C_Z_Move_Move_Normal& operator=(C_Z_Move_Move_Normal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Z_Move_Move_Normal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_Z_Move_Move_Normal* internal_default_instance() {
    return reinterpret_cast<const C_Z_Move_Move_Normal*>(
               &_C_Z_Move_Move_Normal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(C_Z_Move_Move_Normal* other);
  friend void swap(C_Z_Move_Move_Normal& a, C_Z_Move_Move_Normal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_Z_Move_Move_Normal* New() const PROTOBUF_FINAL { return New(NULL); }

  C_Z_Move_Move_Normal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_Z_Move_Move_Normal& from);
  void MergeFrom(const C_Z_Move_Move_Normal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_Z_Move_Move_Normal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Point3F Pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // float Yaw = 2;
  void clear_yaw();
  static const int kYawFieldNumber = 2;
  float yaw() const;
  void set_yaw(float value);

  // float Duration = 3;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:message.C_Z_Move.Move.Normal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Point3F* pos_;
  float yaw_;
  float duration_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_Z_Move_Move_NormalImpl();
};
// -------------------------------------------------------------------

class C_Z_Move_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_Z_Move.Move) */ {
 public:
  C_Z_Move_Move();
  virtual ~C_Z_Move_Move();

  C_Z_Move_Move(const C_Z_Move_Move& from);

  inline C_Z_Move_Move& operator=(const C_Z_Move_Move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_Z_Move_Move(C_Z_Move_Move&& from) noexcept
    : C_Z_Move_Move() {
    *this = ::std::move(from);
  }

  inline C_Z_Move_Move& operator=(C_Z_Move_Move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Z_Move_Move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_Z_Move_Move* internal_default_instance() {
    return reinterpret_cast<const C_Z_Move_Move*>(
               &_C_Z_Move_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(C_Z_Move_Move* other);
  friend void swap(C_Z_Move_Move& a, C_Z_Move_Move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_Z_Move_Move* New() const PROTOBUF_FINAL { return New(NULL); }

  C_Z_Move_Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_Z_Move_Move& from);
  void MergeFrom(const C_Z_Move_Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_Z_Move_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef C_Z_Move_Move_Normal Normal;

  // accessors -------------------------------------------------------

  // .message.C_Z_Move.Move.Normal normal = 2;
  bool has_normal() const;
  void clear_normal();
  static const int kNormalFieldNumber = 2;
  const ::message::C_Z_Move_Move_Normal& normal() const;
  ::message::C_Z_Move_Move_Normal* release_normal();
  ::message::C_Z_Move_Move_Normal* mutable_normal();
  void set_allocated_normal(::message::C_Z_Move_Move_Normal* normal);

  // int32 Mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_Z_Move.Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::C_Z_Move_Move_Normal* normal_;
  ::google::protobuf::int32 mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_Z_Move_MoveImpl();
};
// -------------------------------------------------------------------

class C_Z_Move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_Z_Move) */ {
 public:
  C_Z_Move();
  virtual ~C_Z_Move();

  C_Z_Move(const C_Z_Move& from);

  inline C_Z_Move& operator=(const C_Z_Move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_Z_Move(C_Z_Move&& from) noexcept
    : C_Z_Move() {
    *this = ::std::move(from);
  }

  inline C_Z_Move& operator=(C_Z_Move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Z_Move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_Z_Move* internal_default_instance() {
    return reinterpret_cast<const C_Z_Move*>(
               &_C_Z_Move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(C_Z_Move* other);
  friend void swap(C_Z_Move& a, C_Z_Move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_Z_Move* New() const PROTOBUF_FINAL { return New(NULL); }

  C_Z_Move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_Z_Move& from);
  void MergeFrom(const C_Z_Move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_Z_Move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef C_Z_Move_Move Move;

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // .message.C_Z_Move.Move move = 2;
  bool has_move() const;
  void clear_move();
  static const int kMoveFieldNumber = 2;
  const ::message::C_Z_Move_Move& move() const;
  ::message::C_Z_Move_Move* release_move();
  ::message::C_Z_Move_Move* mutable_move();
  void set_allocated_move(::message::C_Z_Move_Move* move);

  // @@protoc_insertion_point(class_scope:message.C_Z_Move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::message::C_Z_Move_Move* move_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_Z_MoveImpl();
};
// -------------------------------------------------------------------

class C_Z_Skill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_Z_Skill) */ {
 public:
  C_Z_Skill();
  virtual ~C_Z_Skill();

  C_Z_Skill(const C_Z_Skill& from);

  inline C_Z_Skill& operator=(const C_Z_Skill& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_Z_Skill(C_Z_Skill&& from) noexcept
    : C_Z_Skill() {
    *this = ::std::move(from);
  }

  inline C_Z_Skill& operator=(C_Z_Skill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Z_Skill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_Z_Skill* internal_default_instance() {
    return reinterpret_cast<const C_Z_Skill*>(
               &_C_Z_Skill_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(C_Z_Skill* other);
  friend void swap(C_Z_Skill& a, C_Z_Skill& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_Z_Skill* New() const PROTOBUF_FINAL { return New(NULL); }

  C_Z_Skill* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_Z_Skill& from);
  void MergeFrom(const C_Z_Skill& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_Z_Skill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int64 TargetId = 3;
  void clear_targetid();
  static const int kTargetIdFieldNumber = 3;
  ::google::protobuf::int64 targetid() const;
  void set_targetid(::google::protobuf::int64 value);

  // int32 SkillId = 2;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  ::google::protobuf::int32 skillid() const;
  void set_skillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_Z_Skill)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int64 targetid_;
  ::google::protobuf::int32 skillid_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_Z_SkillImpl();
};
// -------------------------------------------------------------------

class Z_C_LoginMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_LoginMap) */ {
 public:
  Z_C_LoginMap();
  virtual ~Z_C_LoginMap();

  Z_C_LoginMap(const Z_C_LoginMap& from);

  inline Z_C_LoginMap& operator=(const Z_C_LoginMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_LoginMap(Z_C_LoginMap&& from) noexcept
    : Z_C_LoginMap() {
    *this = ::std::move(from);
  }

  inline Z_C_LoginMap& operator=(Z_C_LoginMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_LoginMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_LoginMap* internal_default_instance() {
    return reinterpret_cast<const Z_C_LoginMap*>(
               &_Z_C_LoginMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Z_C_LoginMap* other);
  friend void swap(Z_C_LoginMap& a, Z_C_LoginMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_LoginMap* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_LoginMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_LoginMap& from);
  void MergeFrom(const Z_C_LoginMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_LoginMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // .message.Point3F Pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // int64 Id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // float Rotation = 4;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  float rotation() const;
  void set_rotation(float value);

  // @@protoc_insertion_point(class_scope:message.Z_C_LoginMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::message::Point3F* pos_;
  ::google::protobuf::int64 id_;
  float rotation_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_LoginMapImpl();
};
// -------------------------------------------------------------------

class Z_C_ENTITY_Entity_DataMask_NpcDataMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_ENTITY.Entity.DataMask.NpcDataMask) */ {
 public:
  Z_C_ENTITY_Entity_DataMask_NpcDataMask();
  virtual ~Z_C_ENTITY_Entity_DataMask_NpcDataMask();

  Z_C_ENTITY_Entity_DataMask_NpcDataMask(const Z_C_ENTITY_Entity_DataMask_NpcDataMask& from);

  inline Z_C_ENTITY_Entity_DataMask_NpcDataMask& operator=(const Z_C_ENTITY_Entity_DataMask_NpcDataMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_ENTITY_Entity_DataMask_NpcDataMask(Z_C_ENTITY_Entity_DataMask_NpcDataMask&& from) noexcept
    : Z_C_ENTITY_Entity_DataMask_NpcDataMask() {
    *this = ::std::move(from);
  }

  inline Z_C_ENTITY_Entity_DataMask_NpcDataMask& operator=(Z_C_ENTITY_Entity_DataMask_NpcDataMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_ENTITY_Entity_DataMask_NpcDataMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_ENTITY_Entity_DataMask_NpcDataMask* internal_default_instance() {
    return reinterpret_cast<const Z_C_ENTITY_Entity_DataMask_NpcDataMask*>(
               &_Z_C_ENTITY_Entity_DataMask_NpcDataMask_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Z_C_ENTITY_Entity_DataMask_NpcDataMask* other);
  friend void swap(Z_C_ENTITY_Entity_DataMask_NpcDataMask& a, Z_C_ENTITY_Entity_DataMask_NpcDataMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_ENTITY_Entity_DataMask_NpcDataMask* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_ENTITY_Entity_DataMask_NpcDataMask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_ENTITY_Entity_DataMask_NpcDataMask& from);
  void MergeFrom(const Z_C_ENTITY_Entity_DataMask_NpcDataMask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_ENTITY_Entity_DataMask_NpcDataMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 DataId = 1;
  void clear_dataid();
  static const int kDataIdFieldNumber = 1;
  ::google::protobuf::int32 dataid() const;
  void set_dataid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.Z_C_ENTITY.Entity.DataMask.NpcDataMask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dataid_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_ENTITY_Entity_DataMask_NpcDataMaskImpl();
};
// -------------------------------------------------------------------

class Z_C_ENTITY_Entity_DataMask_SpellDataMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask) */ {
 public:
  Z_C_ENTITY_Entity_DataMask_SpellDataMask();
  virtual ~Z_C_ENTITY_Entity_DataMask_SpellDataMask();

  Z_C_ENTITY_Entity_DataMask_SpellDataMask(const Z_C_ENTITY_Entity_DataMask_SpellDataMask& from);

  inline Z_C_ENTITY_Entity_DataMask_SpellDataMask& operator=(const Z_C_ENTITY_Entity_DataMask_SpellDataMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_ENTITY_Entity_DataMask_SpellDataMask(Z_C_ENTITY_Entity_DataMask_SpellDataMask&& from) noexcept
    : Z_C_ENTITY_Entity_DataMask_SpellDataMask() {
    *this = ::std::move(from);
  }

  inline Z_C_ENTITY_Entity_DataMask_SpellDataMask& operator=(Z_C_ENTITY_Entity_DataMask_SpellDataMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_ENTITY_Entity_DataMask_SpellDataMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_ENTITY_Entity_DataMask_SpellDataMask* internal_default_instance() {
    return reinterpret_cast<const Z_C_ENTITY_Entity_DataMask_SpellDataMask*>(
               &_Z_C_ENTITY_Entity_DataMask_SpellDataMask_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Z_C_ENTITY_Entity_DataMask_SpellDataMask* other);
  friend void swap(Z_C_ENTITY_Entity_DataMask_SpellDataMask& a, Z_C_ENTITY_Entity_DataMask_SpellDataMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_ENTITY_Entity_DataMask_SpellDataMask* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_ENTITY_Entity_DataMask_SpellDataMask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_ENTITY_Entity_DataMask_SpellDataMask& from);
  void MergeFrom(const Z_C_ENTITY_Entity_DataMask_SpellDataMask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_ENTITY_Entity_DataMask_SpellDataMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 DataId = 1;
  void clear_dataid();
  static const int kDataIdFieldNumber = 1;
  ::google::protobuf::int32 dataid() const;
  void set_dataid(::google::protobuf::int32 value);

  // int32 LifeTime = 2;
  void clear_lifetime();
  static const int kLifeTimeFieldNumber = 2;
  ::google::protobuf::int32 lifetime() const;
  void set_lifetime(::google::protobuf::int32 value);

  // int32 FlySpeed = 3;
  void clear_flyspeed();
  static const int kFlySpeedFieldNumber = 3;
  ::google::protobuf::int32 flyspeed() const;
  void set_flyspeed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dataid_;
  ::google::protobuf::int32 lifetime_;
  ::google::protobuf::int32 flyspeed_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_ENTITY_Entity_DataMask_SpellDataMaskImpl();
};
// -------------------------------------------------------------------

class Z_C_ENTITY_Entity_DataMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_ENTITY.Entity.DataMask) */ {
 public:
  Z_C_ENTITY_Entity_DataMask();
  virtual ~Z_C_ENTITY_Entity_DataMask();

  Z_C_ENTITY_Entity_DataMask(const Z_C_ENTITY_Entity_DataMask& from);

  inline Z_C_ENTITY_Entity_DataMask& operator=(const Z_C_ENTITY_Entity_DataMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_ENTITY_Entity_DataMask(Z_C_ENTITY_Entity_DataMask&& from) noexcept
    : Z_C_ENTITY_Entity_DataMask() {
    *this = ::std::move(from);
  }

  inline Z_C_ENTITY_Entity_DataMask& operator=(Z_C_ENTITY_Entity_DataMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_ENTITY_Entity_DataMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_ENTITY_Entity_DataMask* internal_default_instance() {
    return reinterpret_cast<const Z_C_ENTITY_Entity_DataMask*>(
               &_Z_C_ENTITY_Entity_DataMask_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Z_C_ENTITY_Entity_DataMask* other);
  friend void swap(Z_C_ENTITY_Entity_DataMask& a, Z_C_ENTITY_Entity_DataMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_ENTITY_Entity_DataMask* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_ENTITY_Entity_DataMask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_ENTITY_Entity_DataMask& from);
  void MergeFrom(const Z_C_ENTITY_Entity_DataMask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_ENTITY_Entity_DataMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Z_C_ENTITY_Entity_DataMask_NpcDataMask NpcDataMask;
  typedef Z_C_ENTITY_Entity_DataMask_SpellDataMask SpellDataMask;

  // accessors -------------------------------------------------------

  // .message.Z_C_ENTITY.Entity.DataMask.NpcDataMask NpcData = 3;
  bool has_npcdata() const;
  void clear_npcdata();
  static const int kNpcDataFieldNumber = 3;
  const ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask& npcdata() const;
  ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* release_npcdata();
  ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* mutable_npcdata();
  void set_allocated_npcdata(::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* npcdata);

  // .message.Z_C_ENTITY.Entity.DataMask.SpellDataMask SpellData = 4;
  bool has_spelldata() const;
  void clear_spelldata();
  static const int kSpellDataFieldNumber = 4;
  const ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask& spelldata() const;
  ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* release_spelldata();
  ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* mutable_spelldata();
  void set_allocated_spelldata(::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* spelldata);

  // int32 Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // bool RemoveFlag = 2;
  void clear_removeflag();
  static const int kRemoveFlagFieldNumber = 2;
  bool removeflag() const;
  void set_removeflag(bool value);

  // @@protoc_insertion_point(class_scope:message.Z_C_ENTITY.Entity.DataMask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* npcdata_;
  ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* spelldata_;
  ::google::protobuf::int32 type_;
  bool removeflag_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_ENTITY_Entity_DataMaskImpl();
};
// -------------------------------------------------------------------

class Z_C_ENTITY_Entity_MoveMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_ENTITY.Entity.MoveMask) */ {
 public:
  Z_C_ENTITY_Entity_MoveMask();
  virtual ~Z_C_ENTITY_Entity_MoveMask();

  Z_C_ENTITY_Entity_MoveMask(const Z_C_ENTITY_Entity_MoveMask& from);

  inline Z_C_ENTITY_Entity_MoveMask& operator=(const Z_C_ENTITY_Entity_MoveMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_ENTITY_Entity_MoveMask(Z_C_ENTITY_Entity_MoveMask&& from) noexcept
    : Z_C_ENTITY_Entity_MoveMask() {
    *this = ::std::move(from);
  }

  inline Z_C_ENTITY_Entity_MoveMask& operator=(Z_C_ENTITY_Entity_MoveMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_ENTITY_Entity_MoveMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_ENTITY_Entity_MoveMask* internal_default_instance() {
    return reinterpret_cast<const Z_C_ENTITY_Entity_MoveMask*>(
               &_Z_C_ENTITY_Entity_MoveMask_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Z_C_ENTITY_Entity_MoveMask* other);
  friend void swap(Z_C_ENTITY_Entity_MoveMask& a, Z_C_ENTITY_Entity_MoveMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_ENTITY_Entity_MoveMask* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_ENTITY_Entity_MoveMask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_ENTITY_Entity_MoveMask& from);
  void MergeFrom(const Z_C_ENTITY_Entity_MoveMask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_ENTITY_Entity_MoveMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Point3F Pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::message::Point3F& pos() const;
  ::message::Point3F* release_pos();
  ::message::Point3F* mutable_pos();
  void set_allocated_pos(::message::Point3F* pos);

  // float Rotation = 2;
  void clear_rotation();
  static const int kRotationFieldNumber = 2;
  float rotation() const;
  void set_rotation(float value);

  // bool ForceUpdateFlag = 3;
  void clear_forceupdateflag();
  static const int kForceUpdateFlagFieldNumber = 3;
  bool forceupdateflag() const;
  void set_forceupdateflag(bool value);

  // @@protoc_insertion_point(class_scope:message.Z_C_ENTITY.Entity.MoveMask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Point3F* pos_;
  float rotation_;
  bool forceupdateflag_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_ENTITY_Entity_MoveMaskImpl();
};
// -------------------------------------------------------------------

class Z_C_ENTITY_Entity_StatsMask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_ENTITY.Entity.StatsMask) */ {
 public:
  Z_C_ENTITY_Entity_StatsMask();
  virtual ~Z_C_ENTITY_Entity_StatsMask();

  Z_C_ENTITY_Entity_StatsMask(const Z_C_ENTITY_Entity_StatsMask& from);

  inline Z_C_ENTITY_Entity_StatsMask& operator=(const Z_C_ENTITY_Entity_StatsMask& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_ENTITY_Entity_StatsMask(Z_C_ENTITY_Entity_StatsMask&& from) noexcept
    : Z_C_ENTITY_Entity_StatsMask() {
    *this = ::std::move(from);
  }

  inline Z_C_ENTITY_Entity_StatsMask& operator=(Z_C_ENTITY_Entity_StatsMask&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_ENTITY_Entity_StatsMask& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_ENTITY_Entity_StatsMask* internal_default_instance() {
    return reinterpret_cast<const Z_C_ENTITY_Entity_StatsMask*>(
               &_Z_C_ENTITY_Entity_StatsMask_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Z_C_ENTITY_Entity_StatsMask* other);
  friend void swap(Z_C_ENTITY_Entity_StatsMask& a, Z_C_ENTITY_Entity_StatsMask& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_ENTITY_Entity_StatsMask* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_ENTITY_Entity_StatsMask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_ENTITY_Entity_StatsMask& from);
  void MergeFrom(const Z_C_ENTITY_Entity_StatsMask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_ENTITY_Entity_StatsMask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 HP = 1;
  void clear_hp();
  static const int kHPFieldNumber = 1;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // int32 MP = 2;
  void clear_mp();
  static const int kMPFieldNumber = 2;
  ::google::protobuf::int32 mp() const;
  void set_mp(::google::protobuf::int32 value);

  // int32 MaxHP = 3;
  void clear_maxhp();
  static const int kMaxHPFieldNumber = 3;
  ::google::protobuf::int32 maxhp() const;
  void set_maxhp(::google::protobuf::int32 value);

  // int32 MaxMP = 4;
  void clear_maxmp();
  static const int kMaxMPFieldNumber = 4;
  ::google::protobuf::int32 maxmp() const;
  void set_maxmp(::google::protobuf::int32 value);

  // int32 PhyDamage = 5;
  void clear_phydamage();
  static const int kPhyDamageFieldNumber = 5;
  ::google::protobuf::int32 phydamage() const;
  void set_phydamage(::google::protobuf::int32 value);

  // int32 PhyDefence = 6;
  void clear_phydefence();
  static const int kPhyDefenceFieldNumber = 6;
  ::google::protobuf::int32 phydefence() const;
  void set_phydefence(::google::protobuf::int32 value);

  // int32 SplDamage = 7;
  void clear_spldamage();
  static const int kSplDamageFieldNumber = 7;
  ::google::protobuf::int32 spldamage() const;
  void set_spldamage(::google::protobuf::int32 value);

  // int32 SplDefence = 8;
  void clear_spldefence();
  static const int kSplDefenceFieldNumber = 8;
  ::google::protobuf::int32 spldefence() const;
  void set_spldefence(::google::protobuf::int32 value);

  // int32 Heal = 9;
  void clear_heal();
  static const int kHealFieldNumber = 9;
  ::google::protobuf::int32 heal() const;
  void set_heal(::google::protobuf::int32 value);

  // int32 CriticalTimes = 10;
  void clear_criticaltimes();
  static const int kCriticalTimesFieldNumber = 10;
  ::google::protobuf::int32 criticaltimes() const;
  void set_criticaltimes(::google::protobuf::int32 value);

  // int32 Critical = 11;
  void clear_critical();
  static const int kCriticalFieldNumber = 11;
  ::google::protobuf::int32 critical() const;
  void set_critical(::google::protobuf::int32 value);

  // int32 AntiCriticalTimes = 12;
  void clear_anticriticaltimes();
  static const int kAntiCriticalTimesFieldNumber = 12;
  ::google::protobuf::int32 anticriticaltimes() const;
  void set_anticriticaltimes(::google::protobuf::int32 value);

  // int32 AntiCritical = 13;
  void clear_anticritical();
  static const int kAntiCriticalFieldNumber = 13;
  ::google::protobuf::int32 anticritical() const;
  void set_anticritical(::google::protobuf::int32 value);

  // int32 Dodge = 14;
  void clear_dodge();
  static const int kDodgeFieldNumber = 14;
  ::google::protobuf::int32 dodge() const;
  void set_dodge(::google::protobuf::int32 value);

  // int32 Hit = 15;
  void clear_hit();
  static const int kHitFieldNumber = 15;
  ::google::protobuf::int32 hit() const;
  void set_hit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.Z_C_ENTITY.Entity.StatsMask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 mp_;
  ::google::protobuf::int32 maxhp_;
  ::google::protobuf::int32 maxmp_;
  ::google::protobuf::int32 phydamage_;
  ::google::protobuf::int32 phydefence_;
  ::google::protobuf::int32 spldamage_;
  ::google::protobuf::int32 spldefence_;
  ::google::protobuf::int32 heal_;
  ::google::protobuf::int32 criticaltimes_;
  ::google::protobuf::int32 critical_;
  ::google::protobuf::int32 anticriticaltimes_;
  ::google::protobuf::int32 anticritical_;
  ::google::protobuf::int32 dodge_;
  ::google::protobuf::int32 hit_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_ENTITY_Entity_StatsMaskImpl();
};
// -------------------------------------------------------------------

class Z_C_ENTITY_Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_ENTITY.Entity) */ {
 public:
  Z_C_ENTITY_Entity();
  virtual ~Z_C_ENTITY_Entity();

  Z_C_ENTITY_Entity(const Z_C_ENTITY_Entity& from);

  inline Z_C_ENTITY_Entity& operator=(const Z_C_ENTITY_Entity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_ENTITY_Entity(Z_C_ENTITY_Entity&& from) noexcept
    : Z_C_ENTITY_Entity() {
    *this = ::std::move(from);
  }

  inline Z_C_ENTITY_Entity& operator=(Z_C_ENTITY_Entity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_ENTITY_Entity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_ENTITY_Entity* internal_default_instance() {
    return reinterpret_cast<const Z_C_ENTITY_Entity*>(
               &_Z_C_ENTITY_Entity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Z_C_ENTITY_Entity* other);
  friend void swap(Z_C_ENTITY_Entity& a, Z_C_ENTITY_Entity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_ENTITY_Entity* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_ENTITY_Entity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_ENTITY_Entity& from);
  void MergeFrom(const Z_C_ENTITY_Entity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_ENTITY_Entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Z_C_ENTITY_Entity_DataMask DataMask;
  typedef Z_C_ENTITY_Entity_MoveMask MoveMask;
  typedef Z_C_ENTITY_Entity_StatsMask StatsMask;

  // accessors -------------------------------------------------------

  // .message.Z_C_ENTITY.Entity.DataMask Data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::message::Z_C_ENTITY_Entity_DataMask& data() const;
  ::message::Z_C_ENTITY_Entity_DataMask* release_data();
  ::message::Z_C_ENTITY_Entity_DataMask* mutable_data();
  void set_allocated_data(::message::Z_C_ENTITY_Entity_DataMask* data);

  // .message.Z_C_ENTITY.Entity.MoveMask Move = 3;
  bool has_move() const;
  void clear_move();
  static const int kMoveFieldNumber = 3;
  const ::message::Z_C_ENTITY_Entity_MoveMask& move() const;
  ::message::Z_C_ENTITY_Entity_MoveMask* release_move();
  ::message::Z_C_ENTITY_Entity_MoveMask* mutable_move();
  void set_allocated_move(::message::Z_C_ENTITY_Entity_MoveMask* move);

  // .message.Z_C_ENTITY.Entity.StatsMask Stats = 4;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 4;
  const ::message::Z_C_ENTITY_Entity_StatsMask& stats() const;
  ::message::Z_C_ENTITY_Entity_StatsMask* release_stats();
  ::message::Z_C_ENTITY_Entity_StatsMask* mutable_stats();
  void set_allocated_stats(::message::Z_C_ENTITY_Entity_StatsMask* stats);

  // int64 Id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:message.Z_C_ENTITY.Entity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Z_C_ENTITY_Entity_DataMask* data_;
  ::message::Z_C_ENTITY_Entity_MoveMask* move_;
  ::message::Z_C_ENTITY_Entity_StatsMask* stats_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_ENTITY_EntityImpl();
};
// -------------------------------------------------------------------

class Z_C_ENTITY : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Z_C_ENTITY) */ {
 public:
  Z_C_ENTITY();
  virtual ~Z_C_ENTITY();

  Z_C_ENTITY(const Z_C_ENTITY& from);

  inline Z_C_ENTITY& operator=(const Z_C_ENTITY& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Z_C_ENTITY(Z_C_ENTITY&& from) noexcept
    : Z_C_ENTITY() {
    *this = ::std::move(from);
  }

  inline Z_C_ENTITY& operator=(Z_C_ENTITY&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Z_C_ENTITY& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Z_C_ENTITY* internal_default_instance() {
    return reinterpret_cast<const Z_C_ENTITY*>(
               &_Z_C_ENTITY_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Z_C_ENTITY* other);
  friend void swap(Z_C_ENTITY& a, Z_C_ENTITY& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Z_C_ENTITY* New() const PROTOBUF_FINAL { return New(NULL); }

  Z_C_ENTITY* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Z_C_ENTITY& from);
  void MergeFrom(const Z_C_ENTITY& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Z_C_ENTITY* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Z_C_ENTITY_Entity Entity;

  // accessors -------------------------------------------------------

  // repeated .message.Z_C_ENTITY.Entity EntityInfo = 2;
  int entityinfo_size() const;
  void clear_entityinfo();
  static const int kEntityInfoFieldNumber = 2;
  const ::message::Z_C_ENTITY_Entity& entityinfo(int index) const;
  ::message::Z_C_ENTITY_Entity* mutable_entityinfo(int index);
  ::message::Z_C_ENTITY_Entity* add_entityinfo();
  ::google::protobuf::RepeatedPtrField< ::message::Z_C_ENTITY_Entity >*
      mutable_entityinfo();
  const ::google::protobuf::RepeatedPtrField< ::message::Z_C_ENTITY_Entity >&
      entityinfo() const;

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // @@protoc_insertion_point(class_scope:message.Z_C_ENTITY)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::message::Z_C_ENTITY_Entity > entityinfo_;
  ::message::Ipacket* packethead_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsZ_C_ENTITYImpl();
};
// -------------------------------------------------------------------

class C_Z_LoginCopyMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_Z_LoginCopyMap) */ {
 public:
  C_Z_LoginCopyMap();
  virtual ~C_Z_LoginCopyMap();

  C_Z_LoginCopyMap(const C_Z_LoginCopyMap& from);

  inline C_Z_LoginCopyMap& operator=(const C_Z_LoginCopyMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_Z_LoginCopyMap(C_Z_LoginCopyMap&& from) noexcept
    : C_Z_LoginCopyMap() {
    *this = ::std::move(from);
  }

  inline C_Z_LoginCopyMap& operator=(C_Z_LoginCopyMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Z_LoginCopyMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_Z_LoginCopyMap* internal_default_instance() {
    return reinterpret_cast<const C_Z_LoginCopyMap*>(
               &_C_Z_LoginCopyMap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(C_Z_LoginCopyMap* other);
  friend void swap(C_Z_LoginCopyMap& a, C_Z_LoginCopyMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_Z_LoginCopyMap* New() const PROTOBUF_FINAL { return New(NULL); }

  C_Z_LoginCopyMap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_Z_LoginCopyMap& from);
  void MergeFrom(const C_Z_LoginCopyMap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_Z_LoginCopyMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // int32 DataId = 2;
  void clear_dataid();
  static const int kDataIdFieldNumber = 2;
  ::google::protobuf::int32 dataid() const;
  void set_dataid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_Z_LoginCopyMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 dataid_;
  mutable int _cached_size_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsC_Z_LoginCopyMapImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point3F

// float X = 1;
inline void Point3F::clear_x() {
  x_ = 0;
}
inline float Point3F::x() const {
  // @@protoc_insertion_point(field_get:message.Point3F.X)
  return x_;
}
inline void Point3F::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:message.Point3F.X)
}

// float Y = 2;
inline void Point3F::clear_y() {
  y_ = 0;
}
inline float Point3F::y() const {
  // @@protoc_insertion_point(field_get:message.Point3F.Y)
  return y_;
}
inline void Point3F::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:message.Point3F.Y)
}

// float Z = 3;
inline void Point3F::clear_z() {
  z_ = 0;
}
inline float Point3F::z() const {
  // @@protoc_insertion_point(field_get:message.Point3F.Z)
  return z_;
}
inline void Point3F::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:message.Point3F.Z)
}

// -------------------------------------------------------------------

// C_Z_Move_Move_Normal

// .message.Point3F Pos = 1;
inline bool C_Z_Move_Move_Normal::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void C_Z_Move_Move_Normal::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& C_Z_Move_Move_Normal::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.C_Z_Move.Move.Normal.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* C_Z_Move_Move_Normal::release_pos() {
  // @@protoc_insertion_point(field_release:message.C_Z_Move.Move.Normal.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* C_Z_Move_Move_Normal::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.C_Z_Move.Move.Normal.Pos)
  return pos_;
}
inline void C_Z_Move_Move_Normal::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.C_Z_Move.Move.Normal.Pos)
}

// float Yaw = 2;
inline void C_Z_Move_Move_Normal::clear_yaw() {
  yaw_ = 0;
}
inline float C_Z_Move_Move_Normal::yaw() const {
  // @@protoc_insertion_point(field_get:message.C_Z_Move.Move.Normal.Yaw)
  return yaw_;
}
inline void C_Z_Move_Move_Normal::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:message.C_Z_Move.Move.Normal.Yaw)
}

// float Duration = 3;
inline void C_Z_Move_Move_Normal::clear_duration() {
  duration_ = 0;
}
inline float C_Z_Move_Move_Normal::duration() const {
  // @@protoc_insertion_point(field_get:message.C_Z_Move.Move.Normal.Duration)
  return duration_;
}
inline void C_Z_Move_Move_Normal::set_duration(float value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:message.C_Z_Move.Move.Normal.Duration)
}

// -------------------------------------------------------------------

// C_Z_Move_Move

// int32 Mode = 1;
inline void C_Z_Move_Move::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 C_Z_Move_Move::mode() const {
  // @@protoc_insertion_point(field_get:message.C_Z_Move.Move.Mode)
  return mode_;
}
inline void C_Z_Move_Move::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:message.C_Z_Move.Move.Mode)
}

// .message.C_Z_Move.Move.Normal normal = 2;
inline bool C_Z_Move_Move::has_normal() const {
  return this != internal_default_instance() && normal_ != NULL;
}
inline void C_Z_Move_Move::clear_normal() {
  if (GetArenaNoVirtual() == NULL && normal_ != NULL) {
    delete normal_;
  }
  normal_ = NULL;
}
inline const ::message::C_Z_Move_Move_Normal& C_Z_Move_Move::normal() const {
  const ::message::C_Z_Move_Move_Normal* p = normal_;
  // @@protoc_insertion_point(field_get:message.C_Z_Move.Move.normal)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_Z_Move_Move_Normal*>(
      &::message::_C_Z_Move_Move_Normal_default_instance_);
}
inline ::message::C_Z_Move_Move_Normal* C_Z_Move_Move::release_normal() {
  // @@protoc_insertion_point(field_release:message.C_Z_Move.Move.normal)
  
  ::message::C_Z_Move_Move_Normal* temp = normal_;
  normal_ = NULL;
  return temp;
}
inline ::message::C_Z_Move_Move_Normal* C_Z_Move_Move::mutable_normal() {
  
  if (normal_ == NULL) {
    normal_ = new ::message::C_Z_Move_Move_Normal;
  }
  // @@protoc_insertion_point(field_mutable:message.C_Z_Move.Move.normal)
  return normal_;
}
inline void C_Z_Move_Move::set_allocated_normal(::message::C_Z_Move_Move_Normal* normal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete normal_;
  }
  if (normal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      normal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    
  } else {
    
  }
  normal_ = normal;
  // @@protoc_insertion_point(field_set_allocated:message.C_Z_Move.Move.normal)
}

// -------------------------------------------------------------------

// C_Z_Move

// .message.Ipacket PacketHead = 1;
inline bool C_Z_Move::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_Z_Move::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_Z_Move.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_Z_Move::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_Z_Move.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_Z_Move::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_Z_Move.PacketHead)
  return packethead_;
}
inline void C_Z_Move::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_Z_Move.PacketHead)
}

// .message.C_Z_Move.Move move = 2;
inline bool C_Z_Move::has_move() const {
  return this != internal_default_instance() && move_ != NULL;
}
inline void C_Z_Move::clear_move() {
  if (GetArenaNoVirtual() == NULL && move_ != NULL) {
    delete move_;
  }
  move_ = NULL;
}
inline const ::message::C_Z_Move_Move& C_Z_Move::move() const {
  const ::message::C_Z_Move_Move* p = move_;
  // @@protoc_insertion_point(field_get:message.C_Z_Move.move)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_Z_Move_Move*>(
      &::message::_C_Z_Move_Move_default_instance_);
}
inline ::message::C_Z_Move_Move* C_Z_Move::release_move() {
  // @@protoc_insertion_point(field_release:message.C_Z_Move.move)
  
  ::message::C_Z_Move_Move* temp = move_;
  move_ = NULL;
  return temp;
}
inline ::message::C_Z_Move_Move* C_Z_Move::mutable_move() {
  
  if (move_ == NULL) {
    move_ = new ::message::C_Z_Move_Move;
  }
  // @@protoc_insertion_point(field_mutable:message.C_Z_Move.move)
  return move_;
}
inline void C_Z_Move::set_allocated_move(::message::C_Z_Move_Move* move) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete move_;
  }
  if (move) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      move = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, move, submessage_arena);
    }
    
  } else {
    
  }
  move_ = move;
  // @@protoc_insertion_point(field_set_allocated:message.C_Z_Move.move)
}

// -------------------------------------------------------------------

// C_Z_Skill

// .message.Ipacket PacketHead = 1;
inline bool C_Z_Skill::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_Z_Skill::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_Z_Skill.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_Z_Skill::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_Z_Skill.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_Z_Skill::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_Z_Skill.PacketHead)
  return packethead_;
}
inline void C_Z_Skill::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_Z_Skill.PacketHead)
}

// int32 SkillId = 2;
inline void C_Z_Skill::clear_skillid() {
  skillid_ = 0;
}
inline ::google::protobuf::int32 C_Z_Skill::skillid() const {
  // @@protoc_insertion_point(field_get:message.C_Z_Skill.SkillId)
  return skillid_;
}
inline void C_Z_Skill::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:message.C_Z_Skill.SkillId)
}

// int64 TargetId = 3;
inline void C_Z_Skill::clear_targetid() {
  targetid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 C_Z_Skill::targetid() const {
  // @@protoc_insertion_point(field_get:message.C_Z_Skill.TargetId)
  return targetid_;
}
inline void C_Z_Skill::set_targetid(::google::protobuf::int64 value) {
  
  targetid_ = value;
  // @@protoc_insertion_point(field_set:message.C_Z_Skill.TargetId)
}

// -------------------------------------------------------------------

// Z_C_LoginMap

// .message.Ipacket PacketHead = 1;
inline bool Z_C_LoginMap::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& Z_C_LoginMap::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.Z_C_LoginMap.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* Z_C_LoginMap::release_packethead() {
  // @@protoc_insertion_point(field_release:message.Z_C_LoginMap.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* Z_C_LoginMap::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_LoginMap.PacketHead)
  return packethead_;
}
inline void Z_C_LoginMap::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_LoginMap.PacketHead)
}

// int64 Id = 2;
inline void Z_C_LoginMap::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Z_C_LoginMap::id() const {
  // @@protoc_insertion_point(field_get:message.Z_C_LoginMap.Id)
  return id_;
}
inline void Z_C_LoginMap::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_LoginMap.Id)
}

// .message.Point3F Pos = 3;
inline bool Z_C_LoginMap::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void Z_C_LoginMap::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& Z_C_LoginMap::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.Z_C_LoginMap.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* Z_C_LoginMap::release_pos() {
  // @@protoc_insertion_point(field_release:message.Z_C_LoginMap.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* Z_C_LoginMap::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_LoginMap.Pos)
  return pos_;
}
inline void Z_C_LoginMap::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_LoginMap.Pos)
}

// float Rotation = 4;
inline void Z_C_LoginMap::clear_rotation() {
  rotation_ = 0;
}
inline float Z_C_LoginMap::rotation() const {
  // @@protoc_insertion_point(field_get:message.Z_C_LoginMap.Rotation)
  return rotation_;
}
inline void Z_C_LoginMap::set_rotation(float value) {
  
  rotation_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_LoginMap.Rotation)
}

// -------------------------------------------------------------------

// Z_C_ENTITY_Entity_DataMask_NpcDataMask

// int32 DataId = 1;
inline void Z_C_ENTITY_Entity_DataMask_NpcDataMask::clear_dataid() {
  dataid_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_DataMask_NpcDataMask::dataid() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.NpcDataMask.DataId)
  return dataid_;
}
inline void Z_C_ENTITY_Entity_DataMask_NpcDataMask::set_dataid(::google::protobuf::int32 value) {
  
  dataid_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.DataMask.NpcDataMask.DataId)
}

// -------------------------------------------------------------------

// Z_C_ENTITY_Entity_DataMask_SpellDataMask

// int32 DataId = 1;
inline void Z_C_ENTITY_Entity_DataMask_SpellDataMask::clear_dataid() {
  dataid_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_DataMask_SpellDataMask::dataid() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask.DataId)
  return dataid_;
}
inline void Z_C_ENTITY_Entity_DataMask_SpellDataMask::set_dataid(::google::protobuf::int32 value) {
  
  dataid_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask.DataId)
}

// int32 LifeTime = 2;
inline void Z_C_ENTITY_Entity_DataMask_SpellDataMask::clear_lifetime() {
  lifetime_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_DataMask_SpellDataMask::lifetime() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask.LifeTime)
  return lifetime_;
}
inline void Z_C_ENTITY_Entity_DataMask_SpellDataMask::set_lifetime(::google::protobuf::int32 value) {
  
  lifetime_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask.LifeTime)
}

// int32 FlySpeed = 3;
inline void Z_C_ENTITY_Entity_DataMask_SpellDataMask::clear_flyspeed() {
  flyspeed_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_DataMask_SpellDataMask::flyspeed() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask.FlySpeed)
  return flyspeed_;
}
inline void Z_C_ENTITY_Entity_DataMask_SpellDataMask::set_flyspeed(::google::protobuf::int32 value) {
  
  flyspeed_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.DataMask.SpellDataMask.FlySpeed)
}

// -------------------------------------------------------------------

// Z_C_ENTITY_Entity_DataMask

// int32 Type = 1;
inline void Z_C_ENTITY_Entity_DataMask::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_DataMask::type() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.Type)
  return type_;
}
inline void Z_C_ENTITY_Entity_DataMask::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.DataMask.Type)
}

// bool RemoveFlag = 2;
inline void Z_C_ENTITY_Entity_DataMask::clear_removeflag() {
  removeflag_ = false;
}
inline bool Z_C_ENTITY_Entity_DataMask::removeflag() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.RemoveFlag)
  return removeflag_;
}
inline void Z_C_ENTITY_Entity_DataMask::set_removeflag(bool value) {
  
  removeflag_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.DataMask.RemoveFlag)
}

// .message.Z_C_ENTITY.Entity.DataMask.NpcDataMask NpcData = 3;
inline bool Z_C_ENTITY_Entity_DataMask::has_npcdata() const {
  return this != internal_default_instance() && npcdata_ != NULL;
}
inline void Z_C_ENTITY_Entity_DataMask::clear_npcdata() {
  if (GetArenaNoVirtual() == NULL && npcdata_ != NULL) {
    delete npcdata_;
  }
  npcdata_ = NULL;
}
inline const ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask& Z_C_ENTITY_Entity_DataMask::npcdata() const {
  const ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* p = npcdata_;
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.NpcData)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask*>(
      &::message::_Z_C_ENTITY_Entity_DataMask_NpcDataMask_default_instance_);
}
inline ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* Z_C_ENTITY_Entity_DataMask::release_npcdata() {
  // @@protoc_insertion_point(field_release:message.Z_C_ENTITY.Entity.DataMask.NpcData)
  
  ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* temp = npcdata_;
  npcdata_ = NULL;
  return temp;
}
inline ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* Z_C_ENTITY_Entity_DataMask::mutable_npcdata() {
  
  if (npcdata_ == NULL) {
    npcdata_ = new ::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.Entity.DataMask.NpcData)
  return npcdata_;
}
inline void Z_C_ENTITY_Entity_DataMask::set_allocated_npcdata(::message::Z_C_ENTITY_Entity_DataMask_NpcDataMask* npcdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete npcdata_;
  }
  if (npcdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      npcdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, npcdata, submessage_arena);
    }
    
  } else {
    
  }
  npcdata_ = npcdata;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_ENTITY.Entity.DataMask.NpcData)
}

// .message.Z_C_ENTITY.Entity.DataMask.SpellDataMask SpellData = 4;
inline bool Z_C_ENTITY_Entity_DataMask::has_spelldata() const {
  return this != internal_default_instance() && spelldata_ != NULL;
}
inline void Z_C_ENTITY_Entity_DataMask::clear_spelldata() {
  if (GetArenaNoVirtual() == NULL && spelldata_ != NULL) {
    delete spelldata_;
  }
  spelldata_ = NULL;
}
inline const ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask& Z_C_ENTITY_Entity_DataMask::spelldata() const {
  const ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* p = spelldata_;
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.DataMask.SpellData)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask*>(
      &::message::_Z_C_ENTITY_Entity_DataMask_SpellDataMask_default_instance_);
}
inline ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* Z_C_ENTITY_Entity_DataMask::release_spelldata() {
  // @@protoc_insertion_point(field_release:message.Z_C_ENTITY.Entity.DataMask.SpellData)
  
  ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* temp = spelldata_;
  spelldata_ = NULL;
  return temp;
}
inline ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* Z_C_ENTITY_Entity_DataMask::mutable_spelldata() {
  
  if (spelldata_ == NULL) {
    spelldata_ = new ::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.Entity.DataMask.SpellData)
  return spelldata_;
}
inline void Z_C_ENTITY_Entity_DataMask::set_allocated_spelldata(::message::Z_C_ENTITY_Entity_DataMask_SpellDataMask* spelldata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete spelldata_;
  }
  if (spelldata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      spelldata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, spelldata, submessage_arena);
    }
    
  } else {
    
  }
  spelldata_ = spelldata;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_ENTITY.Entity.DataMask.SpellData)
}

// -------------------------------------------------------------------

// Z_C_ENTITY_Entity_MoveMask

// .message.Point3F Pos = 1;
inline bool Z_C_ENTITY_Entity_MoveMask::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void Z_C_ENTITY_Entity_MoveMask::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
}
inline const ::message::Point3F& Z_C_ENTITY_Entity_MoveMask::pos() const {
  const ::message::Point3F* p = pos_;
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.MoveMask.Pos)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Point3F*>(
      &::message::_Point3F_default_instance_);
}
inline ::message::Point3F* Z_C_ENTITY_Entity_MoveMask::release_pos() {
  // @@protoc_insertion_point(field_release:message.Z_C_ENTITY.Entity.MoveMask.Pos)
  
  ::message::Point3F* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline ::message::Point3F* Z_C_ENTITY_Entity_MoveMask::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::message::Point3F;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.Entity.MoveMask.Pos)
  return pos_;
}
inline void Z_C_ENTITY_Entity_MoveMask::set_allocated_pos(::message::Point3F* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_ENTITY.Entity.MoveMask.Pos)
}

// float Rotation = 2;
inline void Z_C_ENTITY_Entity_MoveMask::clear_rotation() {
  rotation_ = 0;
}
inline float Z_C_ENTITY_Entity_MoveMask::rotation() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.MoveMask.Rotation)
  return rotation_;
}
inline void Z_C_ENTITY_Entity_MoveMask::set_rotation(float value) {
  
  rotation_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.MoveMask.Rotation)
}

// bool ForceUpdateFlag = 3;
inline void Z_C_ENTITY_Entity_MoveMask::clear_forceupdateflag() {
  forceupdateflag_ = false;
}
inline bool Z_C_ENTITY_Entity_MoveMask::forceupdateflag() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.MoveMask.ForceUpdateFlag)
  return forceupdateflag_;
}
inline void Z_C_ENTITY_Entity_MoveMask::set_forceupdateflag(bool value) {
  
  forceupdateflag_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.MoveMask.ForceUpdateFlag)
}

// -------------------------------------------------------------------

// Z_C_ENTITY_Entity_StatsMask

// int32 HP = 1;
inline void Z_C_ENTITY_Entity_StatsMask::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::hp() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.HP)
  return hp_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.HP)
}

// int32 MP = 2;
inline void Z_C_ENTITY_Entity_StatsMask::clear_mp() {
  mp_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::mp() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.MP)
  return mp_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_mp(::google::protobuf::int32 value) {
  
  mp_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.MP)
}

// int32 MaxHP = 3;
inline void Z_C_ENTITY_Entity_StatsMask::clear_maxhp() {
  maxhp_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::maxhp() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.MaxHP)
  return maxhp_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_maxhp(::google::protobuf::int32 value) {
  
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.MaxHP)
}

// int32 MaxMP = 4;
inline void Z_C_ENTITY_Entity_StatsMask::clear_maxmp() {
  maxmp_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::maxmp() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.MaxMP)
  return maxmp_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_maxmp(::google::protobuf::int32 value) {
  
  maxmp_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.MaxMP)
}

// int32 PhyDamage = 5;
inline void Z_C_ENTITY_Entity_StatsMask::clear_phydamage() {
  phydamage_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::phydamage() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.PhyDamage)
  return phydamage_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_phydamage(::google::protobuf::int32 value) {
  
  phydamage_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.PhyDamage)
}

// int32 PhyDefence = 6;
inline void Z_C_ENTITY_Entity_StatsMask::clear_phydefence() {
  phydefence_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::phydefence() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.PhyDefence)
  return phydefence_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_phydefence(::google::protobuf::int32 value) {
  
  phydefence_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.PhyDefence)
}

// int32 SplDamage = 7;
inline void Z_C_ENTITY_Entity_StatsMask::clear_spldamage() {
  spldamage_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::spldamage() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.SplDamage)
  return spldamage_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_spldamage(::google::protobuf::int32 value) {
  
  spldamage_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.SplDamage)
}

// int32 SplDefence = 8;
inline void Z_C_ENTITY_Entity_StatsMask::clear_spldefence() {
  spldefence_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::spldefence() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.SplDefence)
  return spldefence_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_spldefence(::google::protobuf::int32 value) {
  
  spldefence_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.SplDefence)
}

// int32 Heal = 9;
inline void Z_C_ENTITY_Entity_StatsMask::clear_heal() {
  heal_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::heal() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.Heal)
  return heal_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_heal(::google::protobuf::int32 value) {
  
  heal_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.Heal)
}

// int32 CriticalTimes = 10;
inline void Z_C_ENTITY_Entity_StatsMask::clear_criticaltimes() {
  criticaltimes_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::criticaltimes() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.CriticalTimes)
  return criticaltimes_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_criticaltimes(::google::protobuf::int32 value) {
  
  criticaltimes_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.CriticalTimes)
}

// int32 Critical = 11;
inline void Z_C_ENTITY_Entity_StatsMask::clear_critical() {
  critical_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::critical() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.Critical)
  return critical_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_critical(::google::protobuf::int32 value) {
  
  critical_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.Critical)
}

// int32 AntiCriticalTimes = 12;
inline void Z_C_ENTITY_Entity_StatsMask::clear_anticriticaltimes() {
  anticriticaltimes_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::anticriticaltimes() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.AntiCriticalTimes)
  return anticriticaltimes_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_anticriticaltimes(::google::protobuf::int32 value) {
  
  anticriticaltimes_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.AntiCriticalTimes)
}

// int32 AntiCritical = 13;
inline void Z_C_ENTITY_Entity_StatsMask::clear_anticritical() {
  anticritical_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::anticritical() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.AntiCritical)
  return anticritical_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_anticritical(::google::protobuf::int32 value) {
  
  anticritical_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.AntiCritical)
}

// int32 Dodge = 14;
inline void Z_C_ENTITY_Entity_StatsMask::clear_dodge() {
  dodge_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::dodge() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.Dodge)
  return dodge_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_dodge(::google::protobuf::int32 value) {
  
  dodge_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.Dodge)
}

// int32 Hit = 15;
inline void Z_C_ENTITY_Entity_StatsMask::clear_hit() {
  hit_ = 0;
}
inline ::google::protobuf::int32 Z_C_ENTITY_Entity_StatsMask::hit() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.StatsMask.Hit)
  return hit_;
}
inline void Z_C_ENTITY_Entity_StatsMask::set_hit(::google::protobuf::int32 value) {
  
  hit_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.StatsMask.Hit)
}

// -------------------------------------------------------------------

// Z_C_ENTITY_Entity

// int64 Id = 1;
inline void Z_C_ENTITY_Entity::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Z_C_ENTITY_Entity::id() const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.Id)
  return id_;
}
inline void Z_C_ENTITY_Entity::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:message.Z_C_ENTITY.Entity.Id)
}

// .message.Z_C_ENTITY.Entity.DataMask Data = 2;
inline bool Z_C_ENTITY_Entity::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void Z_C_ENTITY_Entity::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::message::Z_C_ENTITY_Entity_DataMask& Z_C_ENTITY_Entity::data() const {
  const ::message::Z_C_ENTITY_Entity_DataMask* p = data_;
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.Data)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Z_C_ENTITY_Entity_DataMask*>(
      &::message::_Z_C_ENTITY_Entity_DataMask_default_instance_);
}
inline ::message::Z_C_ENTITY_Entity_DataMask* Z_C_ENTITY_Entity::release_data() {
  // @@protoc_insertion_point(field_release:message.Z_C_ENTITY.Entity.Data)
  
  ::message::Z_C_ENTITY_Entity_DataMask* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::message::Z_C_ENTITY_Entity_DataMask* Z_C_ENTITY_Entity::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::message::Z_C_ENTITY_Entity_DataMask;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.Entity.Data)
  return data_;
}
inline void Z_C_ENTITY_Entity::set_allocated_data(::message::Z_C_ENTITY_Entity_DataMask* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_ENTITY.Entity.Data)
}

// .message.Z_C_ENTITY.Entity.MoveMask Move = 3;
inline bool Z_C_ENTITY_Entity::has_move() const {
  return this != internal_default_instance() && move_ != NULL;
}
inline void Z_C_ENTITY_Entity::clear_move() {
  if (GetArenaNoVirtual() == NULL && move_ != NULL) {
    delete move_;
  }
  move_ = NULL;
}
inline const ::message::Z_C_ENTITY_Entity_MoveMask& Z_C_ENTITY_Entity::move() const {
  const ::message::Z_C_ENTITY_Entity_MoveMask* p = move_;
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.Move)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Z_C_ENTITY_Entity_MoveMask*>(
      &::message::_Z_C_ENTITY_Entity_MoveMask_default_instance_);
}
inline ::message::Z_C_ENTITY_Entity_MoveMask* Z_C_ENTITY_Entity::release_move() {
  // @@protoc_insertion_point(field_release:message.Z_C_ENTITY.Entity.Move)
  
  ::message::Z_C_ENTITY_Entity_MoveMask* temp = move_;
  move_ = NULL;
  return temp;
}
inline ::message::Z_C_ENTITY_Entity_MoveMask* Z_C_ENTITY_Entity::mutable_move() {
  
  if (move_ == NULL) {
    move_ = new ::message::Z_C_ENTITY_Entity_MoveMask;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.Entity.Move)
  return move_;
}
inline void Z_C_ENTITY_Entity::set_allocated_move(::message::Z_C_ENTITY_Entity_MoveMask* move) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete move_;
  }
  if (move) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      move = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, move, submessage_arena);
    }
    
  } else {
    
  }
  move_ = move;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_ENTITY.Entity.Move)
}

// .message.Z_C_ENTITY.Entity.StatsMask Stats = 4;
inline bool Z_C_ENTITY_Entity::has_stats() const {
  return this != internal_default_instance() && stats_ != NULL;
}
inline void Z_C_ENTITY_Entity::clear_stats() {
  if (GetArenaNoVirtual() == NULL && stats_ != NULL) {
    delete stats_;
  }
  stats_ = NULL;
}
inline const ::message::Z_C_ENTITY_Entity_StatsMask& Z_C_ENTITY_Entity::stats() const {
  const ::message::Z_C_ENTITY_Entity_StatsMask* p = stats_;
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.Entity.Stats)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Z_C_ENTITY_Entity_StatsMask*>(
      &::message::_Z_C_ENTITY_Entity_StatsMask_default_instance_);
}
inline ::message::Z_C_ENTITY_Entity_StatsMask* Z_C_ENTITY_Entity::release_stats() {
  // @@protoc_insertion_point(field_release:message.Z_C_ENTITY.Entity.Stats)
  
  ::message::Z_C_ENTITY_Entity_StatsMask* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline ::message::Z_C_ENTITY_Entity_StatsMask* Z_C_ENTITY_Entity::mutable_stats() {
  
  if (stats_ == NULL) {
    stats_ = new ::message::Z_C_ENTITY_Entity_StatsMask;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.Entity.Stats)
  return stats_;
}
inline void Z_C_ENTITY_Entity::set_allocated_stats(::message::Z_C_ENTITY_Entity_StatsMask* stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stats_;
  }
  if (stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    
  } else {
    
  }
  stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_ENTITY.Entity.Stats)
}

// -------------------------------------------------------------------

// Z_C_ENTITY

// .message.Ipacket PacketHead = 1;
inline bool Z_C_ENTITY::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& Z_C_ENTITY::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* Z_C_ENTITY::release_packethead() {
  // @@protoc_insertion_point(field_release:message.Z_C_ENTITY.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* Z_C_ENTITY::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.PacketHead)
  return packethead_;
}
inline void Z_C_ENTITY::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.Z_C_ENTITY.PacketHead)
}

// repeated .message.Z_C_ENTITY.Entity EntityInfo = 2;
inline int Z_C_ENTITY::entityinfo_size() const {
  return entityinfo_.size();
}
inline void Z_C_ENTITY::clear_entityinfo() {
  entityinfo_.Clear();
}
inline const ::message::Z_C_ENTITY_Entity& Z_C_ENTITY::entityinfo(int index) const {
  // @@protoc_insertion_point(field_get:message.Z_C_ENTITY.EntityInfo)
  return entityinfo_.Get(index);
}
inline ::message::Z_C_ENTITY_Entity* Z_C_ENTITY::mutable_entityinfo(int index) {
  // @@protoc_insertion_point(field_mutable:message.Z_C_ENTITY.EntityInfo)
  return entityinfo_.Mutable(index);
}
inline ::message::Z_C_ENTITY_Entity* Z_C_ENTITY::add_entityinfo() {
  // @@protoc_insertion_point(field_add:message.Z_C_ENTITY.EntityInfo)
  return entityinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::message::Z_C_ENTITY_Entity >*
Z_C_ENTITY::mutable_entityinfo() {
  // @@protoc_insertion_point(field_mutable_list:message.Z_C_ENTITY.EntityInfo)
  return &entityinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::message::Z_C_ENTITY_Entity >&
Z_C_ENTITY::entityinfo() const {
  // @@protoc_insertion_point(field_list:message.Z_C_ENTITY.EntityInfo)
  return entityinfo_;
}

// -------------------------------------------------------------------

// C_Z_LoginCopyMap

// .message.Ipacket PacketHead = 1;
inline bool C_Z_LoginCopyMap::has_packethead() const {
  return this != internal_default_instance() && packethead_ != NULL;
}
inline const ::message::Ipacket& C_Z_LoginCopyMap::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_Z_LoginCopyMap.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_Z_LoginCopyMap::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_Z_LoginCopyMap.PacketHead)
  
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_Z_LoginCopyMap::mutable_packethead() {
  
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_Z_LoginCopyMap.PacketHead)
  return packethead_;
}
inline void C_Z_LoginCopyMap::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    
  } else {
    
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_Z_LoginCopyMap.PacketHead)
}

// int32 DataId = 2;
inline void C_Z_LoginCopyMap::clear_dataid() {
  dataid_ = 0;
}
inline ::google::protobuf::int32 C_Z_LoginCopyMap::dataid() const {
  // @@protoc_insertion_point(field_get:message.C_Z_LoginCopyMap.DataId)
  return dataid_;
}
inline void C_Z_LoginCopyMap::set_dataid(::google::protobuf::int32 value) {
  
  dataid_ = value;
  // @@protoc_insertion_point(field_set:message.C_Z_LoginCopyMap.DataId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
